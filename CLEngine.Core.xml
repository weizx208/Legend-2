<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CLEngine.Core</name>
    </assembly>
    <members>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.LinearDamping">
            <summary>
            物体的线性阻尼
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.IsBullet">
            <summary>
            确定身体是否是子弹
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.IgnoreGravity">
            <summary>
            确定身体是否应忽略重力
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.AngularVelocity">
            <summary>
            物体的角速度
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.AngularDamping">
            <summary>
            物体的角度阻尼
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.IsSensor">
            <summary>
            确定刚体是否应该像传感器一样
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.FixedRotation">
            <summary>
            确定主体是否具有固定旋转
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.Friction">
            <summary>
            身体的摩擦力
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.Restitution">
            <summary>
            身体弹起
            </summary>
        </member>
        <member name="P:CLEngine.Core.attributes.PhysicalBody.BodyType">
            <summary>
            身体类型
            </summary>
        </member>
        <member name="M:CLEngine.Core.attributes.PhysicalBody.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CLEngine.Core.attributes.PhysicalBody.Removed">
            <summary>
            移除组件后，将刚体从世界中移除
            </summary>
        </member>
        <member name="M:CLEngine.Core.attributes.PhysicalBody.UpdateBodyProperties">
            <summary>
            更新刚体属性
            </summary>
        </member>
        <member name="T:CLEngine.Core.attributes.RequireComponent">
            <summary>
            向对象添加一个或多个组件要求的属性。
            </summary>
        </member>
        <member name="M:CLEngine.Core.attributes.RequireComponent.#ctor(System.String,System.Boolean)">
            <summary>
            基于类型名称的要求
            </summary>
            <param name="componentTypeNames">类型名称，如果要应用多个要求，请使用“|” 拆分他们.</param>
            <param name="requireAll">如果为true则需要每个组件</param>
        </member>
        <member name="T:CLEngine.Core.attributes.Unique">
            <summary>
            用于确定组件是否应该每个对象只有1个实例的属性（显式或可分配）
            </summary>
        </member>
        <member name="T:CLEngine.Core.attributes.Unique.UniqueOptions">
             <summary>
             Explicit'是组件类型本身。
            'AssinableFrom'也可以从父分配（例如，是组件的子类）。
             </summary>
        </member>
        <member name="M:CLEngine.Core.Audio.ClearBuffer">
            <summary>
            清除音频缓冲区
            </summary>
        </member>
        <member name="M:CLEngine.Core.Audio.Unload">
            <summary>
            卸载音频波
            </summary>
        </member>
        <member name="M:CLEngine.Core.Audio.LoadSoundToBuffer(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="filepath"></param>
            <param name="volume"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Audio.PlayFromBuffer(System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="loop"></param>
        </member>
        <member name="M:CLEngine.Core.Audio.PlayAudio(System.String,System.Boolean)">
            <summary>
            播放.mp3或.wav音频文件
            </summary>
            <param name="filePath">The relative path to the audio file</param>
            <param name="loop">Determine if the sound should loop</param>
        </member>
        <member name="M:CLEngine.Core.Audio.PlayAudio(System.String)">
            <summary>
            播放.mp3或.wav音频文件
            </summary>
            <param name="filePath">The relative path to the audio file</param>
        </member>
        <member name="M:CLEngine.Core.Audio.CreateInputStream(System.String,System.Single,System.Boolean)">
            <summary>
            从选定文件创建波流
            </summary>
            <param name="fileName">The file path to the audio file (.mp3 or .wav)</param>
            <param name="volume">The default desired volume</param>
            <param name="addToBuffer">Determines if the audio file is added to the buffer</param>
            <returns></returns>
        </member>
        <member name="P:CLEngine.Core.BitmapFontRenderer.FontFile">
            <summary>
            
            </summary>
            
        </member>
        <member name="P:CLEngine.Core.BitmapFontRenderer.Texture">
            <summary>
            
            </summary>
            
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.#ctor(CLEngine.Core.FontFile,Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            实例化此实例
            </summary>
            <param name="fontFile">The font file</param>
            <param name="fontTexture">The font texture</param>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.DrawText(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.String)">
            <summary>
            绘制文字
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="position">The position</param>
            <param name="text">The text to be drawn</param>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.DrawText(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="spriteBatch"></param>
            <param name="position"></param>
            <param name="text"></param>
            <param name="color"></param>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.DrawText(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.String,System.Single)">
            
            <summary>
            绘制文字
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="position">The position</param>
            <param name="text">The text to be drawn</param>
            <param name="scale">The scale</param>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.DrawText(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32,System.String)">
            <summary>
            绘制文字
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="x">Position X</param>
            <param name="y">Position Y</param>
            <param name="text">The text to be drawn</param>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.DrawText(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32,System.String,System.Single,Microsoft.Xna.Framework.Color,System.Int32,CLEngine.Core.TextAlignModes)">
            <summary>
            
            </summary>
            <param name="spriteBatch"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="text"></param>
            <param name="scale"></param>
            <param name="color"></param>
            <param name="lineSpacing"></param>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.MeasureString(System.String,System.Single,System.Int32)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="scale"></param>
            <param name="lineSpacing"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.MeasureString(System.String[],System.Single,System.Int32)">
            <summary>
            测量导致最大尺寸的所有线
            </summary>
            <param name="lines"></param>
            <param name="scale"></param>
            <param name="lineSpacing"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.BitmapFontRenderer.MeasureString(System.String,System.Single)">
            <summary>
            测量一个字符串（宽度和高度）
            </summary>
            <returns></returns>
        </member>
        <member name="T:CLEngine.Core.Switch">
            <summary>
            切换枚举
            </summary>
        </member>
        <member name="T:CLEngine.Core.SearchOptions">
            <summary>
            搜索选项枚举
            </summary>
        </member>
        <member name="T:CLEngine.Core.MouseEventButton">
             <summary>
            鼠标事件按钮枚举
             </summary>
        </member>
        <member name="T:CLEngine.Core.TextAlignModes">
            <summary>
            文本对齐模式
            </summary>
        </member>
        <member name="T:CLEngine.Core.Origins">
            <summary>
            锚点
            </summary>
        </member>
        <member name="T:CLEngine.Core.BlendModes">
            <summary>
            混合模式
            </summary>
        </member>
        <member name="T:CLEngine.Core.SamplerModes">
            <summary>
            采样器模式
            </summary>
        </member>
        <member name="T:CLEngine.Core.CHelper">
            <summary>
            一个静态类，为游戏开发编辑器或引擎提供有用的方法
            </summary>
        </member>
        <member name="M:CLEngine.Core.CHelper.MakeExclusiveRelativePath(System.String,System.String)">
            <summary>
            创建从一个文件或文件夹到另一个文件或文件夹的相对路径
            </summary>
            <param name="fromPath"></param>
            <param name="toPath"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.CHelper.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            将整个目录复制到目标
            </summary>
            <param name="sourceDirName">Source directory path</param>
            <param name="destDirName">Destination path</param>
            <param name="copySubDirs">Copy sub directories</param>
        </member>
        <member name="M:CLEngine.Core.VersionConfigToNamespaceAssemblyObjectBinder.BindToType(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="assemblyName"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="T:CLEngine.Core.components.ExtendedObjectComponent">
            <summary>
            如果希望在编辑器中更新和绘制对象组件，则使用该类
            </summary>
        </member>
        <member name="P:CLEngine.Core.components.TextureBody.ImageName">
            <summary>
            纹理的相对路径
            </summary>
        </member>
        <member name="P:CLEngine.Core.components.TextureBody.Density">
            <summary>
            刚体的密度
            </summary>
        </member>
        <member name="M:CLEngine.Core.components.TextureBody.Initialize">
            <summary>
            Initializes the body
            </summary>
        </member>
        <member name="P:CLEngine.Core.CProjectSettings.HighlightActiveTilesetInEditor">
            <summary>
            Determines if the active tileset is going to be highlighted in the editor
            </summary>
        </member>
        <member name="P:CLEngine.Core.CProjectSettings.HighlightActiveTilesetInGame">
            <summary>
            定活动的tileset是否将在游戏中突出显示
            </summary>
        </member>
        <member name="P:CLEngine.Core.CProjectSettings.DefaultCollisionDetectionEnabled">
            <summary>
            确定引擎是否将使用默认的碰撞引擎
            </summary>
        </member>
        <member name="M:CLEngine.Core.CProjectSettings.ToString">
            <summary>
            To String
            </summary>
            <returns></returns>
        </member>
        <member name="T:CLEngine.Core.DisposableBase">
            <inheritdoc />
            <summary>
            The base class that implements Disposable pattern.
            This class must be inherited.
            </summary>
        </member>
        <member name="P:CLEngine.Core.DisposableBase.IsDisposed">
            <summary>
            Gets whether this object is already disposed.
            </summary>
        </member>
        <member name="E:CLEngine.Core.DisposableBase.Disposed">
            <summary>
            Raised when this object is disposed.
            </summary>
        </member>
        <member name="M:CLEngine.Core.DisposableBase.Dispose(System.Boolean)">
            <summary>
            Processes disposing logic. This method must be overridden.
            </summary>
            <param name="disposing"><see langword="true"/> if it is called by a <see cref="M:CLEngine.Core.DisposableBase.Dispose"/> call, <see langword="false"/> if it is called by a finalizer.</param>
        </member>
        <member name="M:CLEngine.Core.DisposableBase.EnsureNotDisposed">
            <summary>
            Ensures that this object is not disposed. Otherwise an <see cref="T:System.ObjectDisposedException"/> will be thrown.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Thrown when current object is disposed.</exception>
        </member>
        <member name="M:CLEngine.Core.DragonBones.CFactoryHelper.CheckResourecdPath(System.String)">
            <summary>
            检查路径合法性
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.DragonBones.CFactoryHelper.GetTextureAtlasImagePath(System.String,System.String)">
            <summary>
            根据贴图JSON文件的路径和JSON文件中贴图名称获得贴图路径
            </summary>
            <param name="textureAtlasJSONPath">贴图JSON文件路径:NewDragon/NewDragon_tex</param>
            <param name="textureAtlasImageName">贴图名称:NewDragon.png</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.DragonBones.CFactoryHelper.GetTextureAtlasNameByPath(System.String)">
            <summary>
            根据贴图路径获得贴图名称
            </summary>
            <param name="textureAtlasJSONPath"></param>
            <returns></returns>
        </member>
        <member name="F:CLEngine.Core.farseer.PrimitiveBatch._basicEffect">
            <summary>
            一个基本效果，包含我们将用于绘制我们的着色器原语
            </summary>
        </member>
        <member name="F:CLEngine.Core.farseer.PrimitiveBatch._device">
            <summary>
            我们将发出绘图调用的设备
            </summary>
        </member>
        <member name="F:CLEngine.Core.farseer.PrimitiveBatch._hasBegun">
            <summary>
            一旦调用了Begin，hasBegun就会被转换为true，并且用于制作
            确保用户在调用Begin之前不调用End
            </summary>
        </member>
        <member name="M:CLEngine.Core.FontLoader.Load(System.String)">
            <summary>
            从文件路径加载字体
            </summary>
            <param name="filename">The file path</param>
            <returns>Loaded font file</returns>
        </member>
        <member name="M:CLEngine.Core.FontLoader.Load(System.IO.Stream)">
            <summary>
            从流中加载字体
            </summary>
            <param name="stream">The stream</param>
            <returns>Loaded font file</returns>
        </member>
        <member name="F:CLEngine.Core.Camp.Self">
            <summary>
            自身
            </summary>
        </member>
        <member name="F:CLEngine.Core.Camp.Enemy">
            <summary>
            敌人
            </summary>
        </member>
        <member name="F:CLEngine.Core.Camp.Friendly">
            <summary>
            友方
            </summary>
        </member>
        <member name="F:CLEngine.Core.Camp.Neutral">
            <summary>
            中立
            </summary>
        </member>
        <member name="P:CLEngine.Core.EventObject.Camp">
            <summary>
            事件的阵营
            </summary>
        </member>
        <member name="P:CLEngine.Core.EventObject.AnimationTag">
            <summary>
            需要使用的动画
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.Burst">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.MaxParticles">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.SecondsPerSpawnMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.SecondsPerSpawnMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.LifespanMin">
            <summary>
            粒子保持活动的最短时间
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.LifespanMax">
            <summary>
            粒子保持活动的最长时间
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.InitialScaleMin">
            <summary>
            粒子的初始尺度（最小范围）
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.InitialScaleMax">
            <summary>
            粒子的初始尺度（最小范围）
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.FinalScaleMin">
            <summary>
            粒子的初始尺度（最小范围）
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.FinalScaleMax">
            <summary>
            粒子的初始尺度（最小范围）
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.InitialSpeedMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.FinalSpeedMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.FinalSpeedMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.SpawnDirection">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.SpawnAngleNoise">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.InitialColor1">
            <summary>
            
            </summary>    
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.InitialColor2">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.FinalColor1">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.FinalColor2">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.ImageName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.BlendMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.ParticleEmitter.RotationStrength">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.ParticleEmitter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.ParticleEmitter.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.ParticleEmitter.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            
            </summary>
            <param name="gameTime">The gametime</param>
        </member>
        <member name="M:CLEngine.Core.ParticleEmitter.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            
            </summary>
            <param name="gameTime">The gametime</param>
            <param name="spriteBatch">The spriteBatch</param>
        </member>
        <member name="M:CLEngine.Core.ParticleEmitter.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Sprite.DisplayModes">
            <summary>
            显示模式
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.ImageName">
            <summary>
            图像的相对路径
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.DisplayMode">
            <summary>
            确定如何显示此精灵
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.Origin">
            <summary>
            原点
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.Origins">
            <summary>
            原点类型
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.UseCustomOrigin">
            <summary>
            是否使用自定义锚点
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.Color">
            <summary>
            填充颜色
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.Texture">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.SpriteEffect">
            <summary>
            精灵效果
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.BlendMode">
            <summary>
            混合模式
            </summary>
        </member>
        <member name="P:CLEngine.Core.Sprite.SourceRectangle">
            <summary>
            要显示的图像区域
            </summary>
        </member>
        <member name="F:CLEngine.Core.Tile.Source">
            <summary>
            图块的原矩形
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.MouseBoundingBox">
            <summary>
            鼠标的边界框。
            使用鼠标位置作为参考
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.MousePosition">
            <summary>
            The position of the mouse in the scene.
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.MouseTransform">
            <summary>
            The mouse transformation matrix
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.KeyboardState">
            <summary>
            The current keyboard state.
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.LastKeyboardState">
            <summary>
            The last keyboard state.
            You can use this to know how was the last state of the keyboard
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.MouseState">
            <summary>
            The current mouse state.
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.LastMouseState">
            <summary>
            The last mouse state.
            You can use this to know how was the last state of the mouse
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.GamePadState">
            <summary>
            The current game pads states
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameInput.LastGamePadState">
            <summary>
            The last game pads states.
            You can use this to know how was the last states of the game pads
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameInput.Update">
            <summary>
            更新游戏输入的逻辑。
            输入状态在此处更新。
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameInput.IsMouseKeyPressed(CLEngine.Core.MouseEventButton)">
            <summary>
            
            </summary>
            <param name="button">The button you want to test</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameInput.IsMouseKeyDown(CLEngine.Core.MouseEventButton)">
            <summary>
             
            </summary>
            <param name="button">The button you want to test</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameInput.IsMouseKeyUp(CLEngine.Core.MouseEventButton)">
            <summary>
             
            </summary>
            <param name="button">The button you want to test</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameInput.IsKeyPressed(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            
            </summary>
            <param name="Key">The key you want to test</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameInput.IsKeyDown(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            
            </summary>
            <param name="key">The key you want to test</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameInput.IsKeyUp(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Check if the param key is up
            </summary>
            <param name="key">The key you want to test</param>
            <returns></returns>
        </member>
        <member name="P:CLEngine.Core.GameObject.Transform">
            <summary>
            对象的属性
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.Name">
            <summary>
            对象的名称
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.Visible">
            <summary>
            确定此对象是否可见
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.Disabled">
            <summary>
            确定对象是否已禁用
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.Tag">
            <summary>
            对象的标签
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.ObjectTag">
            <summary>
            对象的标签
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.Selectable">
            <summary>
            确定是否选择了此对象
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.RotationIndependent">
            <summary>
            是否独立旋转
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.Body">
            <summary>
            对象的刚体组件 每个物体仅有一个刚体组件
            </summary>
        </member>
        <member name="P:CLEngine.Core.GameObject.Children">
            <summary>
            子对象
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameObject.SetParent(CLEngine.Core.Transform)">
            <summary>
            设置父对象
            </summary>
            <param name="transform">父对象的transform</param>
        </member>
        <member name="M:CLEngine.Core.GameObject.GetAllGameObjects">
            <summary>
            获取所有游戏对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameObject.GetComponent``1">
            <summary>
            获取组件
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns>组件</returns>
        </member>
        <member name="M:CLEngine.Core.GameObject.Remove(CLEngine.Core.GameObject)">
            <summary>
            移除对象
            </summary>
            <param name="gameObject">要移除的对象</param>
            <returns>移除的对象</returns>
        </member>
        <member name="M:CLEngine.Core.GameObject.Remove">
            <summary>
            移除自身
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameObject.GetComponents">
            <summary>
            获取自身的所有的组件
            </summary>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameObject.RemoveAllComponents">
            <summary>
            移除所有组件
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameObject.RemoveComponent(CLEngine.Core.ObjectComponent)">
            <summary>
            移除组件
            </summary>
            <param name="component">组件</param>
        </member>
        <member name="M:CLEngine.Core.GameObject.RemoveComponent``1">
            <summary>
            移除组件
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:CLEngine.Core.GameObject.Save(System.String)">
            <summary>
            保存对象为状态
            </summary>
            <param name="filename">文件名</param>
        </member>
        <member name="M:CLEngine.Core.GameObject.OnMouseEnter">
            <summary>
            当鼠标与游戏对象发生碰撞时抛出的事件
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameObject.Initialize">
            <summary>
            初始化此对象
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameObject.SaveComponentValues">
            <summary>
            保存组件值
            </summary>
        </member>
        <member name="M:CLEngine.Core.GameObject.AddComponent``1">
            <summary>
            添加组件
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns>组件</returns>
        </member>
        <member name="M:CLEngine.Core.GameObject.AddComponent(CLEngine.Core.ObjectComponent)">
            <summary>
            添加组件
            </summary>
            <param name="component">组件</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:CLEngine.Core.GameObject.Remove(System.String)">
            <summary>
            按名称删除活动场景中的游戏对象
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.GameScene.Initialize">
             <summary>
             初始化游戏场景。
            此场景的图层，游戏对象和组件也已初始化
             </summary>
        </member>
        <member name="T:CLEngine.Core.IniFile">
            <summary>
            创建一个新的INI文件来存储或加载数据
            </summary>
        </member>
        <member name="M:CLEngine.Core.IniFile.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            将数据写入INI文件
            </summary>
            <PARAM name="Section"></PARAM>
            Section name
            <PARAM name="Key"></PARAM>
            Key Name
            <PARAM name="Value"></PARAM>
            Value Name
        </member>
        <member name="M:CLEngine.Core.IniFile.IniReadValue(System.String,System.String)">
            <summary>
            从Ini文件中读取数据值
            </summary>
            <PARAM name="Section"></PARAM>
            <PARAM name="Key"></PARAM>
            <PARAM name="Path"></PARAM>
            <returns></returns>
        </member>
        <member name="P:CLEngine.Core.Log.OutputTimeout">
            <summary>
            获取或设置输出超时。 默认值：1000 = 1秒
            </summary>
        </member>
        <member name="P:CLEngine.Core.LoopStream.Volume">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.LoopStream.EnableLooping">
            <summary>
            用它来打开或关闭循环
            </summary>
        </member>
        <member name="P:CLEngine.Core.LoopStream.WaveFormat">
            <summary>
            返回源流的波形格式
            </summary>
        </member>
        <member name="P:CLEngine.Core.LoopStream.Length">
            <summary>
            LoopStream只返回
            </summary>
        </member>
        <member name="P:CLEngine.Core.LoopStream.Position">
            <summary>
            LoopStream只是将定位传递给源流
            </summary>
        </member>
        <member name="M:CLEngine.Core.LoopStream.#ctor(NAudio.Wave.WaveChannel32)">
            <summary>
            创建一个新的循环流
            </summary>
            <param name="sourceStream">The stream to read from. Note: the Read method of this stream should return 0 when it reaches the end
            or else we will not loop to the start again.</param>
        </member>
        <member name="M:CLEngine.Core.LoopStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.RotatePoint(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            从给定位置旋转一个点并使用Origin我们进行调整
            正在转动
            </summary>
            <param name="point"></param>
            <param name="origin"></param>
            <param name="rotation"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.CalculateBezierPoint(System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            根据立方线计算basizer点（4个控制点）
            </summary>
            <param name="t">Current Point</param>
            <param name="p0">Initial Position</param>
            <param name="p1">Control Point 1</param>
            <param name="p2">Control Point 2</param>
            <param name="p3">End Position</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.IsPowerOfTwo(Microsoft.Xna.Framework.Vector2)">
            <summary>
            检查输入是否为2的幂
            </summary>
            <param name="value">Input value</param>
            <returns>The test result</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.IsPowerOfTwo(System.UInt32)">
            <summary>
            检查输入是否为2的幂
            </summary>
            <param name="value">Input value</param>
            <returns>The test result</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.IsPowerOfTwo(System.Int32)">
            <summary>
            检查输入是否为2的幂
            </summary>
            <param name="value">Input value</param>
            <returns>The test result</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.RadiansToRotate(System.Single)">
            <summary>
            将弧度值转换为内置单位角度
            </summary>
            <param name="radians">The input value in radians</param>
            <returns>Unit Angle</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.DegreesToRotate(System.Single)">
            <summary>
            将度数值转换为内置单位角度
            </summary>
            <param name="degrees">he input value in degrees</param>
            <returns>Unit Angle</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.LerpColor(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            对颜色进行线性插值
            </summary>
            <param name="FinalColor">The final color</param>
            <param name="InitialColor">The initial color</param>
            <param name="percentage">The percentage amount</param>
            <returns>The calculated color</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.AngleLerp(System.Single,System.Single,System.Single)">
            <summary>
            角度线性插值
            平滑点旋转
            </summary>
            <param name="value1">The current value</param>
            <param name="value2">The final value</param>
            <param name="lerp">The amount</param>
            <returns>The calculated angle</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.AngleLerp(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            角度线性插值
            平滑点旋转
            </summary>
            <param name="value1">The current value</param>
            <param name="value2">The final value</param>
            <param name="lerp">The amount</param>
            <param name="error">The maximum error allowed</param>
            <returns>The calculated angle</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.Round(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Rounds a Vector2
            </summary>
            <param name="v">The input value</param>
            <returns>The calculated Vector2</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.ToPoint(Microsoft.Xna.Framework.Vector2)">
            <summary>
            将Vector2转换为Point
            </summary>
            <param name="v">The input value</param>
            <returns>The calculated Point</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.ToVector2(Microsoft.Xna.Framework.Point)">
            <summary>
            将Point转换为Vector2
            </summary>
            <param name="p">The input value</param>
            <returns>The calculated Vector2</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.DistanceTo(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            计算2个Vector2之间的距离值。
            </summary>
            <param name="v0">First Vector2</param>
            <param name="v">Second Vector2</param>
            <returns>The calculated distance</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.DistanceToLineSegment(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            计算3个Vector2之间的线段距离
            </summary>
            <param name="v">First Vector2</param>
            <param name="a">Second Vector2</param>
            <param name="b">Third Vector2</param>
            <returns>The calculated distance</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.Transform(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Matrix)">
            <summary>
            使用给定的变换矩阵变换矩形
            </summary>
            <param name="r">The input rectangle</param>
            <param name="m">The input matrix</param>
            <returns>The calculated rectangle</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.ToPolygon(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            将Rectangle转换为包含其4个角的Vector2数组
            </summary>
            <param name="r"></param>
            <param name="m"></param>
            <returns>An array of Vector2 representing the rectangle's corners starting from top/left and going clockwise.</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.RectangleFromVectors(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            计算从给定Vector2的矩形
            </summary>
            <param name="v1">First Vector2</param>
            <param name="v2">Second Vector2</param>
            <returns>The calculated rectangle</returns>
        </member>
        <member name="M:CLEngine.Core.MathExtension.LinearInterpolate(System.Byte,System.Byte,System.Double)">
            <summary>
            两个字节之间的线性插值
            </summary>
            <param name="a">First Byte</param>
            <param name="b">Second Byte</param>
            <param name="t">The amount</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.Removed">
            <summary>
            从游戏对象中删除脚本时调用此方法
            </summary>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnCollisionFree">
            <summary>
            在没有与其他对象发生碰撞的框架中抛出的事件
            </summary>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnMouseOut">
            <summary>
            鼠标未在对象上时抛出的事件
            </summary>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnMouseEnter">
            <summary>
            当鼠标与游戏对象发生碰撞时抛出的事件
            </summary>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnMouseMove">
            <summary>
            当鼠标移动碰撞时抛出事件
            </summary>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnMouseUp">
            <summary>
            触发游戏对象上的鼠标向上事件时抛出的事件
            </summary>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnMouseClick(CLEngine.Core.MouseEventButton)">
            <summary>
            当鼠标单击碰撞时抛出事件
            </summary>
            <param name="buttonPressed"></param>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnMouseDown(CLEngine.Core.MouseEventButton)">
            <summary>
            当鼠标单击碰撞时抛出事件
            </summary>
            <param name="buttonPressed"></param>
        </member>
        <member name="M:CLEngine.Core.ObjectComponent.OnCollisionEnter(CLEngine.Core.GameObject)">
            <summary>
            发生物体碰撞时抛出的事件
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:CLEngine.Core.RotatedRectangle.ChangePosition(System.Int32,System.Int32)">
            <summary>
            用于更改旋转矩形的X和Y位置
            </summary>
            <param name="theXPositionAdjustment"></param>
            <param name="theYPositionAdjustment"></param>
        </member>
        <member name="M:CLEngine.Core.RotatedRectangle.Intersects(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            此intersects方法可用于检查标准XNA框架Rectangle
            object并查看它是否与Rotated Rectangle对象发生碰撞
            </summary>
            <param name="theRectangle"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.RotatedRectangle.Intersects(CLEngine.Core.RotatedRectangle)">
            <summary>
            检查两个旋转矩形是否发生碰撞
            </summary>
            <param name="theRectangle"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.RotatedRectangle.IsAxisCollision(CLEngine.Core.RotatedRectangle,Microsoft.Xna.Framework.Vector2)">
             <summary>
             确定是否在其中一个轴上发生了碰撞
            平行于Rectangle的平面
             </summary>
             <param name="theRectangle"></param>
             <param name="aAxis"></param>
             <returns></returns>
        </member>
        <member name="M:CLEngine.Core.RotatedRectangle.GenerateScalar(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
             <summary>
             生成一个标量值，可用于比较角落的位置
            已将矩形投影到特定轴上。
             </summary>
             <param name="theRectangleCorner"></param>
             <param name="theAxis"></param>
             <returns></returns>
        </member>
        <member name="M:CLEngine.Core.RotatedRectangle.RotatePoint(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
             <summary>
             从给定位置旋转一个点并使用Origin我们进行调整
            正在转动
             </summary>
             <param name="thePoint"></param>
             <param name="theOrigin"></param>
             <param name="theRotation"></param>
             <returns></returns>
        </member>
        <member name="T:CLEngine.Core.SceneManager">
            <summary>
            场景管理器
            该类负责管理活动场景
            </summary>
        </member>
        <member name="P:CLEngine.Core.SceneManager.GameProject">
            <summary>
            获取或设置当前游戏项目
            </summary>
        </member>
        <member name="P:CLEngine.Core.SceneManager.ActiveScenePath">
            <summary>
            当前活动的场景路径
            </summary>
        </member>
        <member name="P:CLEngine.Core.SceneManager.IsEditor">
            <summary>
            确定我们是否在编辑器模式下运行
            </summary>
        </member>
        <member name="P:CLEngine.Core.SceneManager.GameWindow">
            <summary>
            活跃的游戏窗口。
            仅在游戏模式下可用
            </summary>
        </member>
        <member name="P:CLEngine.Core.SceneManager.ActiveTileset">
            <summary>
            活动的tileset
            </summary>
        </member>
        <member name="M:CLEngine.Core.SceneManager.SaveActiveScene(System.String,System.Boolean)">
            <summary>
            保存当前场景
            </summary>
            <param name="path">路径</param>
            <param name="xml">是否xml文件</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:CLEngine.Core.SceneManager.FindByTag(System.String)">
            <summary>
            根据标签寻找对象
            </summary>
            <param name="src">标签名</param>
            <returns>对象</returns>
        </member>
        <member name="M:CLEngine.Core.SceneManager.LoadScene(System.String)">
            <summary>
            加载场景
            </summary>
            <param name="scenePath">场景路径</param>
            <returns>是否加载成功</returns>
        </member>
        <member name="M:CLEngine.Core.SceneManager.LoadScene(System.String,System.Boolean)">
            <summary>
            加载场景
            </summary>
            <param name="scenePath">场景路径</param>
            <param name="saveHistory">保存为历史路径</param>
            <returns>是否加载成功</returns>
        </member>
        <member name="F:CLEngine.Core.Settings.MaxPolygonVertices">
            <summary>
            凸多边形上的最大顶点数
            </summary>
        </member>
        <member name="T:CLEngine.Core.TextureLoader">
            <summary>
            此类负责管理纹理加载。
            将纹理加载到内存中以便快速使用，如果加载相同的纹理两次，它将在内存中使用相同的空间以保留资源。
            如果要在运行时清除缓存，请执行TextureLoader.Clear() 方法。
            </summary>
        </member>
        <member name="P:CLEngine.Core.Transform.InvertAbsolute">
            <summary>
            获取表示绝对变换的反转的矩阵
            </summary>
        </member>
        <member name="P:CLEngine.Core.Transform.Absolute">
            <summary>
            获取表示绝对变换的矩阵
            </summary>
        </member>
        <member name="P:CLEngine.Core.Transform.AbsoluteScale">
            <summary>
            获取绝对比例
            </summary>
        </member>
        <member name="P:CLEngine.Core.Transform.AbsoluteRotation">
            <summary>
            获取绝对旋转
            </summary>
        </member>
        <member name="P:CLEngine.Core.Transform.Root">
            <summary>
            根节点的属性
            </summary>
        </member>
        <member name="P:CLEngine.Core.Transform.RelativePosition">
            <summary>
            对象的相对位置。
            如果对象没有父对象，则返回世界位置
            </summary>
        </member>
        <member name="M:CLEngine.Core.Transform.LookAt(Microsoft.Xna.Framework.Vector2)">
            <summary>
            跟随某个点
            </summary>
            <param name="point">坐标点</param>
        </member>
        <member name="M:CLEngine.Core.Transform.Find(System.String)">
            <summary>
            根据名称寻找对象的属性
            </summary>
            <param name="name">名称</param>
            <returns>属性</returns>
        </member>
        <member name="P:CLEngine.Core.Transform.Position">
            <summary>
            对象的世界位置
            </summary>
        </member>
        <member name="M:CLEngine.Core.Transform.Translate(Microsoft.Xna.Framework.Vector2)">
            <summary>
            移动对象
            </summary>
            <param name="translation">移动方向及速度</param>
        </member>
        <member name="M:CLEngine.Core.Transform.Translate(System.Single,System.Single)">
            <summary>
            移动对象
            </summary>
            <param name="x">x轴的方向及速度</param>
            <param name="y">y轴的方向及速度</param>
        </member>
        <member name="M:CLEngine.Core.Transform.ToLocalPosition(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            转到本地坐标
            </summary>
            <param name="absolute">相对值</param>
            <param name="local">本地值</param>
        </member>
        <member name="M:CLEngine.Core.Transform.ToAbsolutePosition(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            转到绝对坐标
            </summary>
            <param name="local">本地值</param>
            <param name="absolute">相对值</param>
        </member>
        <member name="T:CLEngine.Core.video.AudioDecoding.AudioDecodingContext">
            <inheritdoc />
            <summary>
            Audio decoding context.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.AudioDecoding.AudioDecodingContext.#ctor(FFmpeg.AutoGen.AVStream*)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.AudioDecoding.AudioDecodingContext"/> instance.
            </summary>
            <param name="audioStream">The audio stream.</param>
        </member>
        <member name="P:CLEngine.Core.video.AudioDecoding.AudioDecodingContext.CodecContext">
            <summary>
            The underlying <see cref="T:FFmpeg.AutoGen.AVCodecContext"/>.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.AudioDecoding.AudioDecodingContext.AudioStream">
            <summary>
            The underlying <see cref="T:FFmpeg.AutoGen.AVStream"/>.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.AudioDecoding.AudioDecodingContext.Channels">
            <summary>
            Gets the number of channels of the audio stream.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.AudioDecoding.AudioDecodingContext.SampleRate">
            <summary>
            Gets the sample rate of the audio stream, in Hz.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.AudioDecoding.AudioDecodingContext.SampleSize">
            <summary>
            Gets the sample size (in bytes) of the audio stream.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.AudioDecoding.AudioDecodingContext.GetSuitableResampleContext(FFmpeg.AutoGen.AVSampleFormat,System.Int32,System.Int32)">
            <summary>
            Returns a suitable audio resample context according to sample format, number of channels, and sample rate.
            The context returned will be cached until this function is called again with different arguments.
            </summary>
            <param name="sampleFormat">Sample format of the output.</param>
            <param name="channels">Number of channels of the output.</param>
            <param name="sampleRate">Sample rate of the output (Hz).</param>
            <returns>Cached or created resample context.</returns>
        </member>
        <member name="T:CLEngine.Core.video.DecodeContext">
            <inheritdoc />
            <summary>
            The coordinator and core of decoding management.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.#ctor(System.String,CLEngine.Core.video.DecodingOptions)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.DecodeContext"/> instance.
            </summary>
            <param name="url">The URL of the video source. If a file system path is provided, make sure it is an absolute path.</param>
            <param name="decodingOptions">Decoding options.</param>
        </member>
        <member name="E:CLEngine.Core.video.DecodeContext.Ended">
            <summary>
            Raises when video playback is ended.
            </summary>
            <remarks>
            This event MUST be raised asynchronously.
            The reason is that subscribers (i.e. <see cref="M:CLEngine.Core.video.Media.Video.decodeContext_Ended(System.Object,System.EventArgs)"/>) may raise their events synchrously.
            The call flow can go to <see cref="M:CLEngine.Core.video.Media.VideoPlayer.video_Ended(System.Object,System.EventArgs)"/>, where <see cref="M:CLEngine.Core.video.Media.VideoPlayer.Stop"/> is called.
            Inside <see cref="M:CLEngine.Core.video.Media.VideoPlayer.Stop"/>, it calls <see cref="M:System.Threading.Thread.Join"/> on <see cref="P:CLEngine.Core.video.Media.VideoPlayer.DecodingThread.SystemThread"/>,
            which waits for the decoding thread that raises the initial <see cref="E:CLEngine.Core.video.DecodeContext.Ended"/> event infinitely.
            So you see, there will be a dead lock if <see cref="E:CLEngine.Core.video.DecodeContext.Ended"/> is raised synchronously.
            </remarks>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.FormatContext">
            <summary>
            The underlying <see cref="T:FFmpeg.AutoGen.AVFormatContext"/>.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.VideoContext">
            <summary>
            The <see cref="T:CLEngine.Core.video.VideoDecoding.VideoDecodingContext"/> associated with this <see cref="T:CLEngine.Core.video.DecodeContext"/>.
            May be <see langword="null"/> if there is no video stream.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.AudioContext">
            <summary>
            The <see cref="T:CLEngine.Core.video.AudioDecoding.AudioDecodingContext"/> associated with this <see cref="T:CLEngine.Core.video.DecodeContext"/>.
            May be <see langword="null"/> if there is no audio stream.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.VideoStreamIndex">
            <summary>
            The index of the video stream finally selected in the <see cref="T:FFmpeg.AutoGen.AVFormatContext"/>.
            May be <code>-1</code> if there is no video stream.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.AudioStreamIndex">
            <summary>
            The index of the audio stream finally selected in the <see cref="T:FFmpeg.AutoGen.AVFormatContext"/>.
            May be <code>-1</code> if there is no audio stream.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.FetchAvailableVideoFrame">
            <summary>
            Fetches the latest decoded video frame.
            Remember to lock <see cref="F:CLEngine.Core.video.DecodeContext.VideoFrameTransmissionLock"/> when you use the fetched frame.
            </summary>
            <returns>The latest decoded video frame.</returns>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.VideoCodecName">
            <summary>
            Name of the video codec.
            May be <see cref="F:System.String.Empty"/> if there is no video stream.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.AudioCodecName">
            <summary>
            Name of the audio codec.
            May be <see cref="F:System.String.Empty"/> if there is no audio stream.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.UserSelectedVideoStreamIndex">
            <summary>
            The index of the video stream user selected.
            May be <code>-1</code> for auto selection.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodeContext.UserSelectedAudioStreamIndex">
            <summary>
            The index of the audio stream user selected.
            May be <code>-1</code> for auto selection.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.GetTotalStreamCount">
            <summary>
            Gets the number of all types of streams in the media file.
            </summary>
            <returns>Number of all type of streams.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.GetVideoStreamCount">
            <summary>
            Gets the number of video streams in the media file.
            </summary>
            <returns>Number of video streams.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.GetAudioStreamCount">
            <summary>
            Gets the number of audio streams in the media file.
            </summary>
            <returns>Number of audio streams.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.SelectVideoStream(System.Int32)">
            <summary>
            Selects a video stream by index.
            This method is only valid before initialization.
            </summary>
            <param name="streamIndex">The index of video streams.</param>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.SelectAudioStream(System.Int32)">
            <summary>
            Selects an audio stream by index.
            This method is only valid before initialization.
            </summary>
            <param name="streamIndex">The index of audio streams.</param>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.Initialize">
            <summary>
            Forces initializing <see cref="T:CLEngine.Core.video.DecodeContext"/> before it is automatically initialized by calling specific methods.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.Reset">
            <summary>
            Reset the state of this <see cref="T:CLEngine.Core.video.DecodeContext"/> for restarting playback.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.Seek(System.Double)">
            <summary>
            Seek to the specified time. If the time is out of video range, it calls <see cref="M:CLEngine.Core.video.DecodeContext.Reset"/>.
            </summary>
            <param name="timeInSeconds"></param>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.GetDurationInSeconds">
            <summary>
            Gets the duration of the video file, in seconds.
            </summary>
            <returns>The duration of the video file, in seconds.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.ReadVideoUntilPlaybackIsAfter(System.Double)">
            <summary>
            Reads video packets and decode them into video frames, until presentation time of the frame decoded is after specified time.
            </summary>
            <param name="presentationTime">Current playback time, in seconds.</param>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.ReadAudioUntilPlaybackIsAfter(Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance,System.Double)">
            <summary>
            Reads audio packets, decode them into audio frames and send the data to an <see cref="T:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance"/>, until presentation time of the frame decoded is after specified time.
            </summary>
            <param name="sound">The <see cref="T:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance"/> to play audio data.</param>
            <param name="presentationTime">Current playback time, in seconds.</param>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext.VideoFrameTransmissionLock">
            <summary>
            The lock object used to avoid unwanted frame data overwrites.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.TryGetNextVideoPacket(FFmpeg.AutoGen.AVPacket@)">
            <summary>
            Tries to get the next video packet.
            </summary>
            <param name="packet">The packet got, or an empty packet if the operation fails.</param>
            <returns><see langword="true"/> if the operation succeeds, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.TryGetNextAudioPacket(FFmpeg.AutoGen.AVPacket@)">
            <summary>
            Tries to get the next audio packet.
            </summary>
            <param name="packet">The packet got, or an empty packet if the operation fails.</param>
            <returns><see langword="true"/> if the operation succeeds, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.TryFillPacketQueue(CLEngine.Core.video.PacketQueue,System.Int32)">
            <summary>
            Tries to fill a <see cref="T:CLEngine.Core.video.PacketQueue"/> until the number of queued packets reaches expected count.
            </summary>
            <param name="queue">The packet queue to fill.</param>
            <param name="count">Expected count.</param>
            <returns><see langword="true"/> if the queue has at least expected number of items when the function returns, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.TryFetchVideoFrames(System.Int32)">
            <summary>
            Tries to decode and fetch some video frames, and store them in the videoframe queue.
            </summary>
            <param name="count">Expected count.</param>
            <returns><see langword="true"/> if the video frame queue has at least one frame when the function returns, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.TryFetchAudioFrame(FFmpeg.AutoGen.AVFrame*)">
            <summary>
            Tries to decode and fetch an audio frame and fill the data in given <see cref="T:FFmpeg.AutoGen.AVFrame"/>.
            </summary>
            <param name="frame">The frame which stores the data.</param>
            <returns><see langword="true"/> if the operation succeeds, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CLEngine.Core.video.DecodeContext.ReadNextPacket">
            <summary>
            Reads the next packet, and enqueue it to corresponding packet queue.
            </summary>
            <returns><see langword="true"/> if the operation succeeds, otherwise <see langword="false"/>.</returns>
            <remarks>
            When this function returns <see langword="true"/>, it doesn't mean that a packet is enqueued.
            Since the <see cref="T:CLEngine.Core.video.DecodeContext"/> only holds at most one video stream and one audio stream,
            packets from any other streams are ignored. So you should always use an "ensure" function to make sure
            a packet is enqueued.
            </remarks>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext._nextDecodingVideoTime">
            <summary>
            The time of latest decoded video frame, in seconds.
            See <see cref="M:CLEngine.Core.video.DecodeContext.ReadVideoUntilPlaybackIsAfter(System.Double)"/> for its usage.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext._isEndedTriggered">
            <summary>
            Whether <see cref="E:CLEngine.Core.video.DecodeContext.Ended"/> is raised.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext._videoStartPts">
            <summary>
            Start time of the first frame in the video stream, in video stream's time base.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext._audioStartPts">
            <summary>
            Start time of the first frame in the audio stream, in audio stream's time base.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext._audioPacketDecodingOngoing">
            <summary>
            Does the data from the last audio packet still have remains to fill into another audio frame?
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext._videoFramePool">
            <summary>
            The video frame pool.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.DecodeContext._preparedVideoFrames">
            <summary>
            Decoded video frames. For each entry, the key is the presentation timestamp (PTS) and the value is pointer to the decoded frame (<see cref="T:FFmpeg.AutoGen.AVFrame"/>).
            </summary>
            <remarks>
            The frames are managed by the video frame pool. You should not dispose frames retrived from this list.
            </remarks>
        </member>
        <member name="T:CLEngine.Core.video.DecodingOptions">
            <summary>
            video/audio decoding options.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.DecodingOptions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,CLEngine.Core.video.VideoDecoding.FrameScalingMethod,System.Int32)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.DecodingOptions"/> instance.
            </summary>
            <param name="videoPacketQueueCapacity">The capacity of video packet queue.</param>
            <param name="audioPacketQueueCapacity">The capacity of audio packet queue.</param>
            <param name="videoPacketQueueSizeThreshold">The minimum size of the video packet queue.</param>
            <param name="audioPacketQueueSizeThreshold">The minimum size of the audio packet queue.</param>
            <param name="frameScalingMethod">The method to scale a video frame.</param>
            /// <param name="extraAudioBufferingTime">Extra buffering time of audio data, in milliseconds.</param>
        </member>
        <member name="P:CLEngine.Core.video.DecodingOptions.VideoPacketQueueCapacity">
            <summary>
            The capacity of video packet queue.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodingOptions.AudioPacketQueueCapacity">
            <summary>
            The capacity of audio packet queue.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodingOptions.VideoPacketQueueSizeThreshold">
            <summary>
            The minimum size of the video packet queue.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodingOptions.AudioPacketQueueSizeThreshold">
            <summary>
            The minimum size of the audio packet queue.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodingOptions.FrameScalingMethod">
            <summary>
            The method to scale a video frame.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.DecodingOptions.ExtraAudioBufferingTime">
            <summary>
            Delay of audio data, in milliseconds.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.DecodingOptions.Default">
            <summary>
            Default decoding options.
            </summary>
        </member>
        <member name="T:CLEngine.Core.video.Extensions.SortedListExtensions">
            <summary>
            This static class contains extension methods for <see cref="T:System.Collections.Generic.SortedList`2"/> to provide a queue-like API (enqueue, dequeue).
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Extensions.SortedListExtensions.Enqueue``2(System.Collections.Generic.SortedList{``0,``1},``0,``1)">
            <summary>
            Enqueue a value to the <see cref="T:System.Collections.Generic.SortedList`2"/> according to its key.
            </summary>
            <typeparam name="TKey">Type of the keys in this <see cref="T:System.Collections.Generic.SortedList`2"/>.</typeparam>
            <typeparam name="TValue">Type of the values in this <see cref="T:System.Collections.Generic.SortedList`2"/>.</typeparam>
            <param name="list">The <see cref="T:System.Collections.Generic.SortedList`2"/> to enqueue.</param>
            <param name="key">The key of the value to be enqueued.</param>
            <param name="value">The value to be enqueued.</param>
        </member>
        <member name="M:CLEngine.Core.video.Extensions.SortedListExtensions.Dequeue``2(System.Collections.Generic.SortedList{``0,``1})">
            <summary>
            Dequeues a value from the <see cref="T:System.Collections.Generic.SortedList`2"/> and returns the value.
            </summary>
            <typeparam name="TKey">Type of the keys in this <see cref="T:System.Collections.Generic.SortedList`2"/>.</typeparam>
            <typeparam name="TValue">Type of the values in this <see cref="T:System.Collections.Generic.SortedList`2"/>.</typeparam>
            <param name="list">The <see cref="T:System.Collections.Generic.SortedList`2"/> to dequeue.</param>
            <returns>Dequeued value.</returns>
        </member>
        <member name="M:CLEngine.Core.video.Extensions.SortedListExtensions.PeekFirstKey``2(System.Collections.Generic.SortedList{``0,``1})">
            <summary>
            Peeks the key of the first value in the <see cref="T:System.Collections.Generic.SortedList`2"/>.
            </summary>
            <typeparam name="TKey">Type of the keys in this <see cref="T:System.Collections.Generic.SortedList`2"/>/</typeparam>
            <typeparam name="TValue">Type of the values in this <see cref="T:System.Collections.Generic.SortedList`2"/>.</typeparam>
            <param name="list">The <see cref="T:System.Collections.Generic.SortedList`2"/> to peek.</param>
            <returns>The key of the first value in this <see cref="T:System.Collections.Generic.SortedList`2"/>.</returns>
        </member>
        <member name="T:CLEngine.Core.video.FFmpegBinariesHelper">
            <summary>
            Provides service to initialize FFmpeg binaries its static context.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegBinariesHelper.InitializeFFmpeg(System.String,System.String)">
            <summary>
            Initialize the FFmpeg binaries, and its static context if the previous step succeeds.
            </summary>
            <param name="path32">The path to 32-bit FFmpeg binaries.</param>
            <param name="path64">The path to 64-bit FFmpeg binaries.</param>
        </member>
        <member name="T:CLEngine.Core.video.FFmpegException">
            <inheritdoc />
            <summary>
            Represents an exception caused by FFmpeg functions.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegException.#ctor">
            <inheritdoc />
            <summary>
            Creates a new <see cref="T:OpenMLTD.Projector.FFmpegException" /> instance.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegException.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Creates a new <see cref="T:OpenMLTD.Projector.FFmpegException" /> instance and sets the error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:CLEngine.Core.video.FFmpegHelper">
            <summary>
            Provides some helper functions for FFmpeg decoding.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.FFmpegHelper.RequiredPixelFormat">
            <summary>
            Required output format for <see cref="M:FFmpeg.AutoGen.ffmpeg.sws_scale(FFmpeg.AutoGen.SwsContext*,System.Byte*[],System.Int32[],System.Int32,System.Int32,System.Byte*[],System.Int32[])"/> (<see cref="F:FFmpeg.AutoGen.AVPixelFormat.AV_PIX_FMT_RGB0"/>).
            This value correspond to the default texture surface format (<see cref="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Color"/>) in MonoGame.
            </summary>
            <seealso cref="F:CLEngine.Core.video.Media.VideoPlayer.RequiredSurfaceFormat"/>
        </member>
        <member name="F:CLEngine.Core.video.FFmpegHelper.RequiredSampleFormat">
            <summary>
            Required output format for <see cref="M:FFmpeg.AutoGen.ffmpeg.swr_convert(FFmpeg.AutoGen.SwrContext*,System.Byte**,System.Int32,System.Byte**,System.Int32)"/> (<see cref="F:FFmpeg.AutoGen.AVSampleFormat.AV_SAMPLE_FMT_S16"/>).
            This sample format fits <see cref="!:ALFormat.Stereo16"/>.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.FFmpegHelper.RequiredChannels">
            <summary>
            Required number of channels of the output for <see cref="M:FFmpeg.AutoGen.ffmpeg.swr_convert(FFmpeg.AutoGen.SwrContext*,System.Byte**,System.Int32,System.Byte**,System.Int32)"/>.
            This channel count fits <see cref="!:ALFormat.Stereo16"/>.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.FFmpegHelper.RequiredSampleRate">
            <summary>
            Required sample rate for <see cref="M:FFmpeg.AutoGen.ffmpeg.swr_convert(FFmpeg.AutoGen.SwrContext*,System.Byte**,System.Int32,System.Byte**,System.Int32)"/>, in Hz.
            It can be other frequencies, such as 22050, 32000, 48000, 96000, etc.
            Considering that most of the devices support 44100 Hz output and the quality is reasonale, the sample rate is chosen as 44100 Hz.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.FFmpegHelper.RequiredChannelsXna">
            <summary>
            Required number of channels, using <see cref="T:Microsoft.Xna.Framework.Audio.AudioChannels"/> enum.
            </summary>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredChannels"/>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.Verify(System.Int32)">
            <summary>
            Verifies the error code returned by FFmpeg functions.
            If an error occurs, this method throws a <see cref="T:CLEngine.Core.video.FFmpegException"/>.
            </summary>
            <param name="avError">The error code.</param>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.Verify(System.Int32,System.Action)">
            <summary>
            Verifies the error code returned by FFmpeg functions.
            If an error occurs, this method calls a user-specified clean-up method, then throws a <see cref="T:CLEngine.Core.video.FFmpegException"/>.
            </summary>
            <param name="avError">The error code.</param>
            <param name="cleanupProc">The clean-up method. Ignored if set to <see langword="null"/>.</param>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.GetDurationInSeconds(FFmpeg.AutoGen.AVFormatContext*)">
            <summary>
            Retrieves the duration information included in <see cref="T:FFmpeg.AutoGen.AVFormatContext"/>, in seconds.
            </summary>
            <param name="context">The <see cref="T:FFmpeg.AutoGen.AVFormatContext"/>, representing a media file.</param>
            <returns>Duration, in seconds.</returns>
            <remarks>
            Not all containers (what <see cref="T:FFmpeg.AutoGen.AVFormatContext"/> represents) contain duration information.
            The best practice is use <see cref="F:FFmpeg.AutoGen.AVStream.duration"/> to get the duration of a stream, because some media files has multiple streams with different lengths (e.g. director's cut and theater's cut in one .mkv).
            That method is accurate but requires user interaction to select the stream they want, also that situation is not so common. So here we still use <see cref="T:FFmpeg.AutoGen.AVFormatContext"/> to get the duration.
            </remarks>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.ConvertPtsToSeconds(FFmpeg.AutoGen.AVStream*,System.Int64)">
            <summary>
            Calculates the corresponding value of a PTS (presentation timestamp) in seconds, based on given <see cref="T:FFmpeg.AutoGen.AVStream"/>'s time base.
            </summary>
            <param name="stream">The <see cref="T:FFmpeg.AutoGen.AVStream"/> whose time base is going to be the calculation standard.</param>
            <param name="pts">Value of the presentation timestamp.</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.ConvertSecondsToPts(FFmpeg.AutoGen.AVStream*,System.Double)">
            <summary>
            Converts given time in seconds to stream timestamp, based on given <see cref="T:FFmpeg.AutoGen.AVStream"/>'s time base.
            </summary>
            <param name="stream">The <see cref="T:FFmpeg.AutoGen.AVStream"/> whose time base is going to be the calculation standard.</param>
            <param name="seconds">Time, in seconds.</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.ConvertSecondsToPts(System.Double)">
            <summary>
            Converts given time in seconds to stream timestamp, based on FFmpeg's default time base (<see cref="F:FFmpeg.AutoGen.ffmpeg.AV_TIME_BASE"/>).
            </summary>
            <param name="seconds">Time, in seconds.</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.ConvertSecondsToPts(System.Double,System.Int64)">
            <summary>
            Converts given time in seconds to stream timestamp, based on FFmpeg's default time base (<see cref="F:FFmpeg.AutoGen.ffmpeg.AV_TIME_BASE"/>), with an extra PTS offset.
            </summary>
            <param name="seconds">Time, in seconds.</param>
            <param name="startPts">Extra starting PTS. For example, the video starting PTS.</param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.PtrToStringNullEnded(System.Byte*,System.Text.Encoding)">
            <summary>
            Gets a null-ended string from its pointer.
            Similar to <see cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)"/>, but this function lets you choose a custom encoding.
            </summary>
            <param name="ptr">The pointer to the string.</param>
            <param name="encoding">The encoding of the string.</param>
            <returns>The string, in <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.TransmitVideoFrame(CLEngine.Core.video.DecodeContext,Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Transmit data from current video frame of a <see cref="T:CLEngine.Core.video.DecodeContext"/> to a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> using an auto allocated data buffer.
            The texture's surface format must be <see cref="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Color"/>.
            </summary>
            <param name="context">The <see cref="T:CLEngine.Core.video.DecodeContext"/> </param>
            <param name="texture">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> to transmit to.</param>
            <returns><see langword="true"/> if all successful, otherwise <see langword="false"/>.</returns>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredPixelFormat"/>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.TransmitVideoFrame(CLEngine.Core.video.DecodeContext,Microsoft.Xna.Framework.Graphics.Texture2D,System.UInt32[])">
            <summary>
            Transmit data from current video frame of a <see cref="T:CLEngine.Core.video.DecodeContext"/> to a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> using a custom data buffer.
            The buffer must have enough capacity to hold all the data of the texture.
            The texture's surface format must be <see cref="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Color"/>.
            </summary>
            <param name="context">The <see cref="T:CLEngine.Core.video.DecodeContext"/> </param>
            <param name="texture">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> to transmit to.</param>
            <param name="buffer">The data buffer.</param>
            <returns><see langword="true"/> if all successful, otherwise <see langword="false"/>.</returns>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredPixelFormat"/>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.TransmitVideoFrame(CLEngine.Core.video.DecodeContext,System.Int32,System.Int32,System.UInt32[])">
            <summary>
            Transmit data from current video frame of a <see cref="T:CLEngine.Core.video.DecodeContext"/> to a buffer.
            The buffer holds data for a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/>. It must have enough capacity to hold the data from a buffer with specified width and height, and format <see cref="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Color"/>.
            </summary>
            <param name="context">The <see cref="T:CLEngine.Core.video.DecodeContext"/> </param>
            <param name="textureWidth">Width of the texture.</param>
            <param name="textureHeight">Height of the texture.</param>
            <param name="buffer">The data buffer.</param>
            <returns><see langword="true"/> if all successful, otherwise <see langword="false"/>.</returns>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredPixelFormat"/>
        </member>
        <member name="M:CLEngine.Core.video.FFmpegHelper.TransmitAudioFrame(CLEngine.Core.video.DecodeContext,FFmpeg.AutoGen.AVFrame*,System.Byte[]@)">
            <summary>
            Transmits the given audio frame to an auto allocated buffer. Returns whether the operation is success, and the buffer when it succeeds.
            </summary>
            <param name="context">The <see cref="T:CLEngine.Core.video.DecodeContext"/> containing decoding information.</param>
            <param name="frame">The <see cref="T:FFmpeg.AutoGen.AVFrame"/> containing decoded audio data.</param>
            <param name="buffer">An auto allocated buffer. If the function succeeds, it contains audio data of required format. The data is NOT planar.</param>
            <returns><see langword="true"/> if all operation succeeds, otherwise <see langword="false"/>.</returns>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredChannels"/>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredSampleFormat"/>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredSampleRate"/>
        </member>
        <member name="T:CLEngine.Core.video.GameHelper">
            <summary>
            Helper class for <see cref="T:Microsoft.Xna.Framework.Game"/>. Internal use only.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.GameHelper.GetCurrentGame">
            <summary>
            Gets the running <see cref="T:Microsoft.Xna.Framework.Game"/> instance. It depends on the property name and lifecycle of <see cref="T:Microsoft.Xna.Framework.Game"/>.
            </summary>
            <returns>The game instance.</returns>
        </member>
        <member name="T:CLEngine.Core.video.Media.ISubtitleRenderer">
            <summary>
            Represents a subtitle renderer interface.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.ISubtitleRenderer.Enabled">
            <summary>
            Gets or sets whether this renderer is enabled.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.ISubtitleRenderer.Dimensions">
            <summary>
            Gets or sets the dimensions (expected width and height) of this renderer.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.ISubtitleRenderer.Render(System.TimeSpan,Microsoft.Xna.Framework.Graphics.RenderTarget2D)">
            <summary>
            Renders the subtitle to the specified texture.
            </summary>
            <param name="time">The time when the corresponding subtitle should be rendered.</param>
            <param name="texture">The texture to render to.</param>
        </member>
        <member name="T:CLEngine.Core.video.Media.SubtitleRenderer">
            <inheritdoc cref="T:CLEngine.Core.DisposableBase"/>
            <inheritdoc cref="T:CLEngine.Core.video.Media.ISubtitleRenderer"/>
            <summary>
            A base implementation of <see cref="T:CLEngine.Core.video.Media.ISubtitleRenderer" />
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.SubtitleRenderer.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:CLEngine.Core.video.Media.SubtitleRenderer.Dimensions">
            <inheritdoc/>
        </member>
        <member name="M:CLEngine.Core.video.Media.SubtitleRenderer.Render(System.TimeSpan,Microsoft.Xna.Framework.Graphics.RenderTarget2D)">
            <inheritdoc/>
        </member>
        <member name="T:CLEngine.Core.video.Media.Video">
            <inheritdoc />
            <summary>
            Provides access to video file information.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.Video.#ctor(System.String,CLEngine.Core.video.DecodingOptions)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.Media.Video"/> instance.
            </summary>
            <param name="url">video source URL. May be a file system path.</param>
            <param name="decodingOptions">Decoding options.</param>
        </member>
        <member name="E:CLEngine.Core.video.Media.Video.Ended">
            <summary>
            Raises when the playback of this video is ended (normally or exceptionally).
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.Duration">
            <summary>
            Duration of this video.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.FramesPerSecond">
            <summary>
            Number of frames per second (FPS) of this video.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.Height">
            <summary>
            Height of this video, in pixels.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.VideoSoundtrackType">
            <summary>
            video soundtrack type.
            </summary>
            <remarks>In this implementation, the value is always <see cref="F:Microsoft.Xna.Framework.Media.VideoSoundtrackType.Music"/>.</remarks>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.Width">
            <summary>
            Width of this video, in pixels.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.DecodingOptions">
            <summary>
            (Non-standard extension) The decoding options used to create this video.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.Video.GetVideoStreamCount">
            <summary>
            (Non-standard extension) Gets the number of video streams in the media file.
            </summary>
            <returns>Number of video streams.</returns>
        </member>
        <member name="M:CLEngine.Core.video.Media.Video.GetAudioStreamCount">
            <summary>
            (Non-standard extension) Gets the number of audio streams in the media file.
            </summary>
            <returns>Number of audio streams.</returns>
        </member>
        <member name="M:CLEngine.Core.video.Media.Video.SelectVideoStream(System.Int32)">
            <summary>
            (Non-standard extension) Selects a video stream by index.
            This method is only valid before initialization.
            </summary>
            <param name="streamIndex">The index of video streams.</param>
        </member>
        <member name="M:CLEngine.Core.video.Media.Video.SelectAudioStream(System.Int32)">
            <summary>
            (Non-standard extension) Selects an audio stream by index.
            This method is only valid before initialization.
            </summary>
            <param name="streamIndex">The index of video streams.</param>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.UserSelectedVideoStreamIndex">
            <summary>
            (Non-standard extension) The index of the video stream user selected.
            May be <code>-1</code> for auto selection.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.UserSelectedAudioStreamIndex">
            <summary>
            (Non-standard extension) The index of the audio stream user selected.
            May be <code>-1</code> for auto selection.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.Video.DecodeContext">
            <summary>
            The decode context of this video.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.Video.InitializeDecodeContext">
            <summary>
            Forces initializing the <see cref="T:DecodeContext"/>.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.Video.RetrieveCurrentVideoFrame(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Retrieves latest decoded video frame in internal <see cref="T:CLEngine.Core.video.DecodeContext"/> and transmits its data to a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/>.
            Returns whether the operation is successful.
            </summary>
            <param name="textureBuffer">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> serving as the data buffer.</param>
            <returns><see langword="true"/> if the operation is successful, otherwise <see langword="false"/>.</returns>
            <remarks>If the operation fails, you should not use the data inside that <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/>.</remarks>
        </member>
        <member name="T:CLEngine.Core.video.Media.VideoPlayer">
            <inheritdoc />
            <summary>
            Provides video playing service.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.#ctor">
            <inheritdoc />
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.Media.VideoPlayer" /> instance.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <inheritdoc />
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.Media.VideoPlayer" /> instance using specified <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" /> and default player options..
            </summary>
            <param name="graphicsDevice">The graphics device to use.</param>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,CLEngine.Core.video.VideoPlayerOptions)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.Media.VideoPlayer"/> instance using specified <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice"/> and <see cref="T:CLEngine.Core.video.VideoPlayerOptions"/>.
            </summary>
            <param name="graphicsDevice">The graphics device to use.</param>
            <param name="playerOptions">Player options.</param>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.IsLooped">
            <summary>
            Sets whether video playbacks are looped.
            </summary>
            <remarks>
            This implementation provides simulated looping.
            Note that <see cref="T:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance"/> supports looping naturally.
            Looping via carefully managing packet buffers ("real looping") may be implemented in the future.
            </remarks>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.IsMuted">
            <summary>
            Gets/sets whether video playbacks are muted.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.PlayPosition">
            <summary>
            Gets/sets current playback position.
            Note: the setter is a non-standard extension.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.State">
            <summary>
            Gets the playback state.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.Video">
            <summary>
            Gets the playing video, if there is any.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.Volume">
            <summary>
            Gets/sets playback volume.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.GetTexture">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> containing data of current video frame.
            Do NOT dispose the obtained texture.
            </summary>
            <returns>Current video frame represented by a <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/>.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if no video is loaded.</exception>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.Pause">
            <summary>
            Pauses the playback.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.Play(CLEngine.Core.video.Media.Video)">
            <summary>
            Plays a <see cref="T:CLEngine.Core.video.Media.Video"/> from the beginning.
            </summary>
            <param name="video">The video to play.</param>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.Resume">
            <summary>
            Resumes playback.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.Stop">
            <summary>
            Stops playback.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.Replay">
            <summary>
            (Non-standard extension) Equivalent for <see cref="M:CLEngine.Core.video.Media.VideoPlayer.Stop"/> then <see cref="M:CLEngine.Core.video.Media.VideoPlayer.Play(CLEngine.Core.video.Media.Video)"/> the same video file.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when no video is loaded.</exception>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.SubtitleRenderer">
            <summary>
            (Non-standard extension) Gets or sets the subtitle renderer.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if setting subtitle renderer when playback is not stopped.</exception>
        </member>
        <member name="F:CLEngine.Core.video.Media.VideoPlayer.RequiredSurfaceFormat">
            <summary>
            (Non-standard extension) Required texture format (<see cref="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Color"/>).
            </summary>
            <seealso cref="F:CLEngine.Core.video.FFmpegHelper.RequiredPixelFormat"/>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.LoadVideo(CLEngine.Core.video.Media.Video)">
            <summary>
            Loads a video.
            </summary>
            <param name="video">The video to load.</param>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.GetTexture(Microsoft.Xna.Framework.Graphics.RenderTarget2D)">
            <summary>
            Retrieves the data of current video frame and writes it into specified <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> buffer.
            The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> must use surface format <see cref="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Color"/>.
            This method avoids recreating textures every time to achieve a better performance.
            </summary>
            <param name="texture">The texture that receives the data of current video frame.</param>
            <returns><see langword="true"/> if the operation succeeds, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:CLEngine.Core.video.Media.VideoPlayer.DecodingThread">
            <summary>
            The decoding thread of a <see cref="T:CLEngine.Core.video.Media.VideoPlayer"/>.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.DecodingThread.#ctor(CLEngine.Core.video.Media.VideoPlayer,CLEngine.Core.video.VideoPlayerOptions)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.Media.VideoPlayer.DecodingThread"/> instance.
            </summary>
            <param name="videoPlayer">The parent <see cref="T:CLEngine.Core.video.Media.VideoPlayer"/>.</param>
            <param name="playerOptions">Player options.</param>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.DecodingThread.Start">
            <summary>
            Starts the underlying <see cref="T:System.Threading.Thread"/>.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.DecodingThread.Terminate">
            <summary>
            Sends a termination signal to the underlying <see cref="T:System.Threading.Thread"/>, and waits for it to exit.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.DecodingThread.SystemThread">
            <summary>
            The underlying <see cref="T:System.Threading.Thread"/>.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.Media.VideoPlayer.DecodingThread.ExceptionalExit">
            <summary>
            Returns <see langword="null"/> if the thread is still running, <see langword="true"/> if the thread exited abnormally,
            and <see langword="false"/> if the thread exited normally.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.Media.VideoPlayer.DecodingThread.ThreadProc">
            <summary>
            Worker thread procedure.
            </summary>
        </member>
        <member name="T:CLEngine.Core.video.ObjectPool`1">
            <inheritdoc />
            <summary>
            An object pool implementation.
            </summary>
            <typeparam name="T">Type of objects in the pool.</typeparam>
        </member>
        <member name="M:CLEngine.Core.video.ObjectPool`1.#ctor(System.Int32,System.Func{`0},System.Action{`0})">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.ObjectPool`1"/> instance.
            </summary>
            <param name="collectThreshold">Threshold when calling <see cref="M:CLEngine.Core.video.ObjectPool`1.Collect"/>.</param>
            <param name="alloc">Allocation function.</param>
            <param name="dealloc">Deallocation function.</param>
        </member>
        <member name="M:CLEngine.Core.video.ObjectPool`1.Acquire">
            <summary>
            Acquires an object. If there is no object available, it will call <see cref="M:CLEngine.Core.video.ObjectPool`1.Alloc"/> to create one.
            </summary>
            <returns>Acquired or allocated object.</returns>
        </member>
        <member name="M:CLEngine.Core.video.ObjectPool`1.Alloc">
            <summary>
            Allocates a new object and returns it.
            </summary>
            <returns>Allocated object.</returns>
        </member>
        <member name="M:CLEngine.Core.video.ObjectPool`1.Release(`0)">
            <summary>
            Releases an object.
            </summary>
            <param name="obj">The object to release. If this value is <see langword="null"/>, the method does nothing.</param>
        </member>
        <member name="M:CLEngine.Core.video.ObjectPool`1.Destroy(`0)">
            <summary>
            Releases and deallocates an object.
            </summary>
            <param name="obj">The object to destroy. If this value is <see langword="null"/>, the method does nothing.</param>
            <returns><see langword="true"/> if the object is found in the pool and successfully destroyed, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CLEngine.Core.video.ObjectPool`1.Collect">
            <summary>
            Deallocates all unused objects.
            If number of objects in this pool is smaller than the threshold set when creating the pool, this method does nothing.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.ObjectPool`1.Reset">
            <summary>
            Destroys all objects in this pool. Used for preparing restarting playback.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.ObjectPool`1.Count">
            <summary>
            Number of objects in this pool.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.ObjectPool`1.ObjectsInUse">
            <summary>
            Number of objects in use.
            </summary>
        </member>
        <member name="T:CLEngine.Core.video.PacketQueue">
            <inheritdoc />
            <summary>
            A simple packet queue for <see cref="T:FFmpeg.AutoGen.AVPacket"/>s.
            The packet order satisfies that: 1. the packet with smaller primary key stays in the front;
            2. if two primary keys are equal, secondary keys apply; 3. otherwise, first-in-first-out (FIFO).
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.PacketQueue.#ctor">
            <inheritdoc />
            <summary>
            Creates a new <see cref="T:OpenMLTD.Projector.PacketQueue" /> instance using the default comparing method and default initial capacity.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.PacketQueue.#ctor(CLEngine.Core.video.PacketQueueComparison)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.PacketQueue"/> instance using specified comparing method and default initial capacity.
            </summary>
            <param name="comparison">Comparing method.</param>
        </member>
        <member name="M:CLEngine.Core.video.PacketQueue.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.PacketQueue"/> instance using the default comparing method and specified initial capacity.
            </summary>
            <param name="capacity">Initial capacity.</param>
        </member>
        <member name="M:CLEngine.Core.video.PacketQueue.#ctor(CLEngine.Core.video.PacketQueueComparison,System.Int32)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.PacketQueue"/> instance using the specified comparing method and initial capacity.
            </summary>
            <param name="comparison">Comparing method.</param>
            <param name="capacity">Initial capacity.</param>
        </member>
        <member name="F:CLEngine.Core.video.PacketQueue.DefaultComparison">
            <summary>
            Default comparing method.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.PacketQueue.Enqueue(FFmpeg.AutoGen.AVPacket)">
            <summary>
            Enqueues an <see cref="T:FFmpeg.AutoGen.AVPacket"/>.
            </summary>
            <param name="packet">The packet to enqueue.</param>
        </member>
        <member name="M:CLEngine.Core.video.PacketQueue.Dequeue">
            <summary>
            Dequeues an <see cref="T:FFmpeg.AutoGen.AVPacket"/> and returns it.
            </summary>
            <returns>The packet dequeued.</returns>
        </member>
        <member name="M:CLEngine.Core.video.PacketQueue.Clear">
            <summary>
            Clears the <see cref="T:CLEngine.Core.video.PacketQueue"/>.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.PacketQueue.Count">
            <summary>
            Gets the number of packets in the <see cref="T:CLEngine.Core.video.PacketQueue"/>.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.PacketQueue.Comparison">
            <summary>
            The comparing method of this <see cref="T:CLEngine.Core.video.PacketQueue"/>.
            </summary>
        </member>
        <member name="T:CLEngine.Core.video.PacketQueueComparison">
            <summary>
            Comparing methods for <see cref="T:CLEngine.Core.video.PacketQueue"/>.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.PacketQueueComparison.FirstDtsThenPts">
            <summary>
            Compare by DTS. If values are equal, compare by PTS.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.PacketQueueComparison.FirstPtsThenDts">
            <summary>
            Compare by PTS. If values are equal, compare by DTS.
            </summary>
        </member>
        <member name="T:CLEngine.Core.video.VideoDecoding.FrameScalingMethod">
            <summary>
            Picture frame scaling methods.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Default">
            <summary>
            Use the default method.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.FastBilinear">
            <summary>
            Use fast bilinear interpolation.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Bilinear">
            <summary>
            Use bilinear interpolation.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Bicubic">
            <summary>
            Use bicubic interpolation.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Experimental">
            <summary>
            Use experimental algorithm.
            The meaning is taken from <code>https://ffmpeg.org/ffmpeg-scaler.html</code>.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Neighbor">
            <summary>
            Use neighbor approximation.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Area">
            <summary>
            Use area averaging.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.BicubicLinear">
            <summary>
            Use bicubic interpolation for luma and bilinear for chroma.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Gauss">
            <summary>
            Use Gaussian rescaling.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Sinc">
            <summary>
            Use sinc rescaling.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Lanczos">
            <summary>
            Use Lanczos filter for rescaling.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoDecoding.FrameScalingMethod.Spline">
            <summary>
            Use natural bicubic spline interpolation.
            </summary>
        </member>
        <member name="T:CLEngine.Core.video.VideoDecoding.VideoDecodingContext">
            <inheritdoc />
            <summary>
            video decoding context.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.VideoDecoding.VideoDecodingContext.#ctor(FFmpeg.AutoGen.AVStream*,CLEngine.Core.video.DecodingOptions)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.VideoDecoding.VideoDecodingContext"/> instance.
            </summary>
            <param name="videoStream">The video stream.</param>
            <param name="decodingOptions">Decoding options.</param>
        </member>
        <member name="P:CLEngine.Core.video.VideoDecoding.VideoDecodingContext.CodecContext">
            <summary>
            The underlying <see cref="T:FFmpeg.AutoGen.AVCodecContext"/>.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.VideoDecoding.VideoDecodingContext.VideoStream">
            <summary>
            The underlying <see cref="T:FFmpeg.AutoGen.AVStream"/>.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.VideoDecoding.VideoDecodingContext.GetSuitableScaleContext(System.Int32,System.Int32)">
            <summary>
            Returns a suitable audio rescale context according to output width and height.
            The context returned will be cached until this function is called again with different arguments.
            </summary>
            <param name="width">Output width, in pixels.</param>
            <param name="height">Output height, in pixels.</param>
            <returns>Cached or created rescale context.</returns>
        </member>
        <member name="M:CLEngine.Core.video.VideoDecoding.VideoDecodingContext.GetFramesPerSecond">
            <summary>
            Gets the number of average frames per second (FPS) of the video stream.
            </summary>
            <returns>Average FPS of the video stream.</returns>
        </member>
        <member name="M:CLEngine.Core.video.VideoDecoding.VideoDecodingContext.GetWidth">
            <summary>
            Gets the width of the video stream, in pixels.
            </summary>
            <returns>The width of the video stream.</returns>
        </member>
        <member name="M:CLEngine.Core.video.VideoDecoding.VideoDecodingContext.GetHeight">
            <summary>
            Gets the height of the video stream, in pixels.
            </summary>
            <returns>The height of the video stream.</returns>
        </member>
        <member name="T:CLEngine.Core.video.VideoHelper">
            <summary>
            video helper class.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.VideoHelper.LoadFromFile(System.String)">
            <summary>
            Loads a video from file system using default decoding options.
            </summary>
            <param name="path">The path of the video file.</param>
            <returns>Loaded video.</returns>
        </member>
        <member name="M:CLEngine.Core.video.VideoHelper.LoadFromFile(System.String,CLEngine.Core.video.DecodingOptions)">
            <summary>
            Loads a video from file system using specified decoding options.
            </summary>
            <param name="path">The path of the video file.</param>
            <param name="decodingOptions">The decoding options to use.</param>
            <returns>Loaded video.</returns>
        </member>
        <member name="M:CLEngine.Core.video.VideoHelper.LoadFromUrl(System.String)">
            <summary>
            Loads a video from a URL using default decoding options.
            </summary>
            <param name="url">The URL of the video source.</param>
            <returns>Loaded video.</returns>
        </member>
        <member name="M:CLEngine.Core.video.VideoHelper.LoadFromUrl(System.String,CLEngine.Core.video.DecodingOptions)">
            <summary>
            Loads a video from a URL using specified decoding options.
            </summary>
            <param name="url">The URL of the video source.</param>
            <param name="decodingOptions">The decoding options to use.</param>
            <returns>Loaded video.</returns>
        </member>
        <member name="T:CLEngine.Core.video.VideoPlayerOptions">
            <summary>
            Options for <see cref="T:CLEngine.Core.video.Media.VideoPlayer"/>.
            </summary>
        </member>
        <member name="M:CLEngine.Core.video.VideoPlayerOptions.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:CLEngine.Core.video.VideoPlayerOptions"/> instance.
            </summary>
            <param name="decodingThreadSleepInterval">The sleeping interval of decoding thread, in milliseconds.</param>
            <param name="minimumAudioBufferCount">Minimum number of audio buffers.</param>
        </member>
        <member name="P:CLEngine.Core.video.VideoPlayerOptions.DecodingThreadSleepInterval">
            <summary>
            The sleeping interval of decoding thread, in milliseconds.
            </summary>
        </member>
        <member name="P:CLEngine.Core.video.VideoPlayerOptions.MinimumAudioBufferCount">
            <summary>
            Minimum number of audio buffers.
            </summary>
        </member>
        <member name="F:CLEngine.Core.video.VideoPlayerOptions.Default">
            <summary>
            Default video player options.
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.Nodes.EventTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.Nodes.Event">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.Nodes.Event.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.Nodes.Event.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.Nodes.Event.Execute">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.Nodes.SetPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.Nodes.SetPosition.Increment">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.Nodes.SetPosition.Position">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.Nodes.SetPosition.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.Nodes.SetPosition.Execute">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.Values.Trigger">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScript">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScript.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScript.Nodes">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScript.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScript.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScript.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            
            </summary>
            <param name="gameTime"></param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScript.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptConnection">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptConnection.OutputInterface">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptConnection.InputInterface">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnection.EstablishConnection(CLEngine.Core.Visual_Scripting.VisualScriptNodeInterfaceOutput,CLEngine.Core.Visual_Scripting.VisualScriptNodeInterfaceInput)">
            <summary>
            
            </summary>
            <param name="outputInterface"></param>
            <param name="inputInterface"></param>
            <returns></returns>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.#ctor">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.IndexOf(CLEngine.Core.Visual_Scripting.VisualScriptConnection)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.Add(CLEngine.Core.Visual_Scripting.VisualScriptConnection)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.Remove(CLEngine.Core.Visual_Scripting.VisualScriptConnection)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.AddRange(CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.AddRange(CLEngine.Core.Visual_Scripting.VisualScriptConnection[])">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.Contains(CLEngine.Core.Visual_Scripting.VisualScriptConnection)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.Insert(System.Int32,CLEngine.Core.Visual_Scripting.VisualScriptConnection)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptConnectionsCollection.Find(System.Predicate{CLEngine.Core.Visual_Scripting.VisualScriptConnection})">
            <summary>
            
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.#ctor(CLEngine.Core.Visual_Scripting.VisualScriptNode)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.IndexOf(CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.Add(CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.Remove(CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.AddRange(CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.AddRange(CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface[])">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.Contains(CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptInterfacesCollection.Insert(System.Int32,CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptManager.VisualScripts">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptManager.AddVisualScript(CLEngine.Core.Visual_Scripting.VisualScript)">
            <summary>
            
            </summary>
            <param name="visualScript"></param>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNode.EditorPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNode.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNode.InputInterfaces">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNode.OutputInterfaces">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptNode.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptNode.Execute">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface.Connections">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterface.RemoveConnections">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterfaceInput">
            <summary>
            
            </summary>
        </member>
        <member name="T:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterfaceOutput">
            <summary>
            
            </summary>
        </member>
        <member name="P:CLEngine.Core.Visual_Scripting.VisualScriptNodeInterfaceOutput.Transmission">
            <summary>
            
            </summary>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.#cctor">
            <summary>
            The dafault constructor
            </summary>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawPixel(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a pixel at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="x">Position X</param>
            <param name="y">Position Y</param>
            <param name="c">Color</param>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawBox(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draw a box at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="r">Destination rectangle</param>
            <param name="c">Color</param>
            <param name="linewidth">Border Width</param>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawBox(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draw a box at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="upperLeft">Upper left position</param>
            <param name="lowerRight">Lower right position</param>
            <param name="c">Color</param>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawBoxFilled(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a filled box at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="x">Position X</param>
            <param name="y">Position Y</param>
            <param name="w">Width</param>
            <param name="h">Height</param>
            <param name="c">Color</param>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawBoxFilled(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a filled box at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="upperLeft">Upper left position</param>
            <param name="lowerRight">Lower right position</param>
            <param name="c">Color</param>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawBoxFilled(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a filled box at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="r">Destination rectangle</param>
            <param name="c">Color</param>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draw a line at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="x1">Position X1</param>
            <param name="y1">Position Y1</param>
            <param name="x2">Position X2</param>
            <param name="y2">Position Y2</param>
            <param name="c">Color</param>
            <param name="linewidth">Line Width</param>
        </member>
        <member name="M:CLEngine.Editor.core.Primitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draw a line at the input location
            </summary>
            <param name="sb">The spritebatch</param>
            <param name="startpos">Start position</param>
            <param name="endpos">End position</param>
            <param name="c">Color</param>
            <param name="linewidth">Line Width</param>
        </member>
        <member name="T:DragonBones.Animation">
            <summary>
            - The animation player is used to play the animation data and manage the animation states.
            </summary>
            <see cref="!:DragonBones.AnimationData"/>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画播放器用来播放动画数据和管理动画状态。
            </summary>
            <see cref="!:DragonBones.AnimationData"/>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Animation.timeScale">
            <summary>
            - The play speed of all animations. [0: Stop, (0~1): Slow, 1: Normal, (1~N): Fast]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 所有动画的播放速度。 [0: 停止播放, (0~1): 慢速播放, 1: 正常播放, (1~N): 快速播放]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation._OnClear">
            <private/>
        </member>
        <member name="M:DragonBones.Animation.Init(DragonBones.Armature)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Animation.AdvanceTime(System.Single)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Animation.Reset">
            <summary>
            - Clear all animations states.
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 清除所有的动画状态。
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.Stop(System.String)">
            <summary>
            - Pause a specific animation state.
            </summary>
            <param name="animationName">- The name of animation state. (If not set, it will pause all animations)</param>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 暂停指定动画状态的播放。
            </summary>
            <param name="animationName">- 动画状态名称。 （如果未设置，则暂停所有动画）</param>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.PlayConfig(DragonBones.AnimationConfig)">
            <summary>
            - Play animation with a specific animation config.
            The API is still in the experimental phase and may encounter bugs or stability or compatibility issues when used.
            </summary>
            <param name="animationConfig">- The animation config.</param>
            <returns>The playing animation state.</returns>
            <see cref="!:DragonBones.AnimationConfig"/>
            <beta/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 通过指定的动画配置来播放动画。
            该 API 仍在实验阶段，使用时可能遭遇 bug 或稳定性或兼容性问题。
            </summary>
            <param name="animationConfig">- 动画配置。</param>
            <returns>播放的动画状态。</returns>
            <see cref="!:DragonBones.AnimationConfig"/>
            <beta/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.Play(System.String,System.Int32)">
            <summary>
            - Play a specific animation.
            </summary>
            <param name="animationName">- The name of animation data. (If not set, The default animation will be played, or resume the animation playing from pause status, or replay the last playing animation)</param>
            <param name="playTimes">- Playing repeat times. [-1: Use default value of the animation data, 0: No end loop playing, [1~N]: Repeat N times] (default: -1)</param>
            <returns>The playing animation state.</returns>
            <example>
            TypeScript style, for reference only.
            <pre>
                armature.animation.play("walk");
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 播放指定动画。
            </summary>
            <param name="animationName">- 动画数据名称。 （如果未设置，则播放默认动画，或将暂停状态切换为播放状态，或重新播放之前播放的动画）</param>
            <param name="playTimes">- 循环播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）</param>
            <returns>播放的动画状态。</returns>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                armature.animation.play("walk");
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.FadeIn(System.String,System.Single,System.Int32,System.Int32,System.String,DragonBones.AnimationFadeOutMode)">
            <summary>
            - Fade in a specific animation.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <param name="fadeInTime">- The fade in time. [-1: Use the default value of animation data, [0~N]: The fade in time (In seconds)] (Default: -1)</param>
            <param name="playTimes">- playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)</param>
            <param name="layer">- The blending layer, the animation states in high level layer will get the blending weights with high priority, when the total blending weights are more than 1.0, there will be no more weights can be allocated to the other animation states. (Default: 0)</param>
            <param name="group">- The blending group name, it is typically used to specify the substitution of multiple animation states blending. (Default: null)</param>
            <param name="fadeOutMode">- The fade out mode, which is typically used to specify alternate mode of multiple animation states blending. (Default: AnimationFadeOutMode.SameLayerAndGroup)</param>
            <returns>The playing animation state.</returns>
            <example>
            TypeScript style, for reference only.
            <pre>
                armature.animation.fadeIn("walk", 0.3, 0, 0, "normalGroup").resetToPose = false;
                armature.animation.fadeIn("attack", 0.3, 1, 0, "attackGroup").resetToPose = false;
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 淡入播放指定的动画。
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <param name="fadeInTime">- 淡入时间。 [-1: 使用动画数据默认值, [0~N]: 淡入时间 (以秒为单位)] （默认: -1）</param>
            <param name="playTimes">- 播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）</param>
            <param name="layer">- 混合图层，图层高的动画状态会优先获取混合权重，当混合权重分配总和超过 1.0 时，剩余的动画状态将不能再获得权重分配。 （默认: 0）</param>
            <param name="group">- 混合组名称，该属性通常用来指定多个动画状态混合时的相互替换关系。 （默认: null）</param>
            <param name="fadeOutMode">- 淡出模式，该属性通常用来指定多个动画状态混合时的相互替换模式。 （默认: AnimationFadeOutMode.SameLayerAndGroup）</param>
            <returns>播放的动画状态。</returns>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                armature.animation.fadeIn("walk", 0.3, 0, 0, "normalGroup").resetToPose = false;
                armature.animation.fadeIn("attack", 0.3, 1, 0, "attackGroup").resetToPose = false;
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GotoAndPlayByTime(System.String,System.Single,System.Int32)">
            <summary>
            - Play a specific animation from the specific time.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <param name="time">- The start time point of playing. (In seconds)</param>
            <param name="playTimes">- Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)</param>
            <returns>The played animation state.</returns>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 从指定时间开始播放指定的动画。
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <param name="time">- 播放开始的时间。 (以秒为单位)</param>
            <param name="playTimes">- 循环播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）</param>
            <returns>播放的动画状态。</returns>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GotoAndPlayByFrame(System.String,System.UInt32,System.Int32)">
            <summary>
            - Play a specific animation from the specific frame.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <param name="frame">- The start frame of playing.</param>
            <param name="playTimes">- Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)</param>
            <returns>The played animation state.</returns>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 从指定帧开始播放指定的动画。
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <param name="frame">- 播放开始的帧数。</param>
            <param name="playTimes">- 播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）</param>
            <returns>播放的动画状态。</returns>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GotoAndPlayByProgress(System.String,System.Single,System.Int32)">
            <summary>
            - Play a specific animation from the specific progress.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <param name="progress">- The start progress value of playing.</param>
            <param name="playTimes">- Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)</param>
            <returns>The played animation state.</returns>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 从指定进度开始播放指定的动画。
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <param name="progress">- 开始播放的进度。</param>
            <param name="playTimes">- 播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）</param>
            <returns>播放的动画状态。</returns>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GotoAndStopByTime(System.String,System.Single)">
            <summary>
            - Stop a specific animation at the specific time.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <param name="time">- The stop time. (In seconds)</param>
            <returns>The played animation state.</returns>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 在指定时间停止指定动画播放
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <param name="time">- 停止的时间。 (以秒为单位)</param>
            <returns>播放的动画状态。</returns>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GotoAndStopByFrame(System.String,System.UInt32)">
            <summary>
            - Stop a specific animation at the specific frame.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <param name="frame">- The stop frame.</param>
            <returns>The played animation state.</returns>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 在指定帧停止指定动画的播放
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <param name="frame">- 停止的帧数。</param>
            <returns>播放的动画状态。</returns>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GotoAndStopByProgress(System.String,System.Single)">
            <summary>
            - Stop a specific animation at the specific progress.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <param name="progress">- The stop progress value.</param>
            <returns>The played animation state.</returns>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 在指定的进度停止指定的动画播放。
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <param name="progress">- 停止进度。</param>
            <returns>播放的动画状态。</returns>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GetState(System.String)">
            <summary>
            - Get a specific animation state.
            </summary>
            <param name="animationName">- The name of animation state.</param>
            <example>
            TypeScript style, for reference only.
            <pre>
                armature.animation.play("walk");
                let walkState = armature.animation.getState("walk");
                walkState.timeScale = 0.5;
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取指定的动画状态
            </summary>
            <param name="animationName">- 动画状态名称。</param>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                armature.animation.play("walk");
                let walkState = armature.animation.getState("walk");
                walkState.timeScale = 0.5;
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.HasAnimation(System.String)">
            <summary>
            - Check whether a specific animation data is included.
            </summary>
            <param name="animationName">- The name of animation data.</param>
            <see cref="!:DragonBones.AnimationData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 检查是否包含指定的动画数据
            </summary>
            <param name="animationName">- 动画数据名称。</param>
            <see cref="!:DragonBones.AnimationData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Animation.GetStates">
            <summary>
            - Get all the animation states.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 获取所有的动画状态
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Animation.isPlaying">
            <summary>
            - Check whether there is an animation state is playing
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 检查是否有动画状态正在播放
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Animation.isCompleted">
            <summary>
            - Check whether all the animation states' playing were finished.
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 检查是否所有的动画状态均已播放完毕。
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Animation.lastAnimationName">
            <summary>
            - The name of the last playing animation state.
            </summary>
            <see cref="P:DragonBones.Animation.lastAnimationState"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 上一个播放的动画状态名称
            </summary>
            <see cref="P:DragonBones.Animation.lastAnimationState"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Animation.animationNames">
            <summary>
            - The name of all animation data
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 所有动画数据的名称
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Animation.animations">
            <summary>
            - All animation data.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 所有的动画数据。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Animation.animationConfig">
            <summary>
            - An AnimationConfig instance that can be used quickly.
            </summary>
            <see cref="!:DragonBones.AnimationConfig"/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 一个可以快速使用的动画配置实例。
            </summary>
            <see cref="!:DragonBones.AnimationConfig"/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Animation.lastAnimationState">
            <summary>
            - The last playing animation state
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 上一个播放的动画状态
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.AnimationState">
            <summary>
            - The animation state is generated when the animation data is played.
            </summary>
            <see cref="!:DragonBones.Animation"/>
            <see cref="!:DragonBones.AnimationData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画状态由播放动画数据时产生。
            </summary>
            <see cref="!:DragonBones.Animation"/>
            <see cref="!:DragonBones.AnimationData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.actionEnabled">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState.additiveBlending">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState.displayControl">
            <summary>
            - Whether the animation state has control over the display object properties of the slots.
            Sometimes blend a animation state does not want it to control the display object properties of the slots,
            especially if other animation state are controlling the display object properties of the slots.
            </summary>
            <default>true</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画状态是否对插槽的显示对象属性有控制权。
            有时混合一个动画状态并不希望其控制插槽的显示对象属性，
            尤其是其他动画状态正在控制这些插槽的显示对象属性时。
            </summary>
            <default>true</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.resetToPose">
            <summary>
            - Whether to reset the objects without animation to the armature pose when the animation state is start to play.
            This property should usually be set to false when blend multiple animation states.
            </summary>
            <default>true</default>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 开始播放动画状态时是否将没有动画的对象重置为骨架初始值。
            通常在混合多个动画状态时应该将该属性设置为 false。
            </summary>
            <default>true</default>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.playTimes">
            <summary>
            - The play times. [0: Loop play, [1~N]: Play N times]
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 播放次数。 [0: 无限循环播放, [1~N]: 循环播放 N 次]
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.layer">
            <summary>
            - The blend layer.
            High layer animation state will get the blend weight first.
            When the blend weight is assigned more than 1, the remaining animation states will no longer get the weight assigned.
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 混合图层。
            图层高的动画状态会优先获取混合权重。
            当混合权重分配超过 1 时，剩余的动画状态将不再获得权重分配。
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.timeScale">
            <summary>
            - The play speed.
            The value is an overlay relationship with {@link dragonBones.Animation#timeScale}.
            [(-N~0): Reverse play, 0: Stop play, (0~1): Slow play, 1: Normal play, (1~N): Fast play]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 播放速度。
            该值与 {@link dragonBones.Animation#timeScale} 是叠加关系。
            [(-N~0): 倒转播放, 0: 停止播放, (0~1): 慢速播放, 1: 正常播放, (1~N): 快速播放]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.weight">
            <summary>
            - The blend weight.
            </summary>
            <default>1.0</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 混合权重。
            </summary>
            <default>1.0</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.autoFadeOutTime">
            <summary>
            - The auto fade out time when the animation state play completed.
            [-1: Do not fade out automatically, [0~N]: The fade out time] (In seconds)
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画状态播放完成后的自动淡出时间。
            [-1: 不自动淡出, [0~N]: 淡出时间] （以秒为单位）
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.fadeTotalTime">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState.name">
            <summary>
            - The name of the animation state. (Can be different from the name of the animation data)
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画状态名称。 （可以不同于动画数据）
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState.group">
            <summary>
            - The blend group name of the animation state.
            This property is typically used to specify the substitution of multiple animation states blend.
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 混合组名称。
            该属性通常用来指定多个动画状态混合时的相互替换关系。
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationState._playheadState">
            <summary>
            - xx: Play Enabled, Fade Play Enabled
            </summary>
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._fadeState">
            <summary>
            -1: Fade in, 0: Fade complete, 1: Fade out;
            </summary>
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._subFadeState">
            <summary>
            -1: Fade start, 0: Fading, 1: Fade complete;
            </summary>
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._position">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._duration">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._fadeProgress">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._weightResult">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._blendState">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._animationData">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._actionTimeline">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationState._parent">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.AnimationState._OnClear">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationState.Init(DragonBones.Armature,DragonBones.AnimationData,DragonBones.AnimationConfig)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.AnimationState.AdvanceTime(System.Single,System.Single)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.AnimationState.Play">
            <summary>
            - Continue play.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 继续播放。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.AnimationState.Stop">
            <summary>
            - Stop play.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 暂停播放。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.AnimationState.FadeOut(System.Single,System.Boolean)">
            <summary>
            - Fade out the animation state.
            </summary>
            <param name="fadeOutTime">- The fade out time. (In seconds)</param>
            <param name="pausePlayhead">- Whether to pause the animation playing when fade out.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 淡出动画状态。
            </summary>
            <param name="fadeOutTime">- 淡出时间。 （以秒为单位）</param>
            <param name="pausePlayhead">- 淡出时是否暂停播放。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.AnimationState.ContainsBoneMask(System.String)">
            <summary>
            - Check if a specific bone mask is included.
            </summary>
            <param name="boneName">- The bone name.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 检查是否包含特定骨骼遮罩。
            </summary>
            <param name="boneName">- 骨骼名称。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.AnimationState.AddBoneMask(System.String,System.Boolean)">
            <summary>
            - Add a specific bone mask.
            </summary>
            <param name="boneName">- The bone name.</param>
            <param name="recursive">- Whether or not to add a mask to the bone's sub-bone.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 添加特定的骨骼遮罩。
            </summary>
            <param name="boneName">- 骨骼名称。</param>
            <param name="recursive">- 是否为该骨骼的子骨骼添加遮罩。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.AnimationState.RemoveBoneMask(System.String,System.Boolean)">
            <summary>
            - Remove the mask of a specific bone.
            </summary>
            <param name="boneName">- The bone name.</param>
            <param name="recursive">- Whether to remove the bone's sub-bone mask.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 删除特定骨骼的遮罩。
            </summary>
            <param name="boneName">- 骨骼名称。</param>
            <param name="recursive">- 是否删除该骨骼的子骨骼遮罩。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.AnimationState.RemoveAllBoneMask">
            <summary>
            - Remove all bone masks.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 删除所有骨骼遮罩。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.isFadeIn">
            <summary>
            - Whether the animation state is fading in.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 是否正在淡入。
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.isFadeOut">
            <summary>
            - Whether the animation state is fading out.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 是否正在淡出。
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.isFadeComplete">
            <summary>
            - Whether the animation state is fade completed.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 是否淡入或淡出完毕。
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.isPlaying">
            <summary>
            - Whether the animation state is playing.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 是否正在播放。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.isCompleted">
            <summary>
            - Whether the animation state is play completed.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 是否播放完毕。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.currentPlayTimes">
            <summary>
            - The times has been played.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 已经循环播放的次数。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.totalTime">
            <summary>
            - The total time. (In seconds)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 总播放时间。 （以秒为单位）
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.AnimationState.currentTime">
            <summary>
            - The time is currently playing. (In seconds)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 当前播放的时间。 （以秒为单位）
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.BonePose">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BlendState">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.BlendState.Update(System.Single,System.Int32)">
            <summary>
            -1: First blending, 0: No blending, 1: Blending.
            </summary>
        </member>
        <member name="T:DragonBones.TweenState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.TimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.TweenTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BoneTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.SlotTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ConstraintTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.IAnimatable">
            <summary>
            - Play animation interface. (Both Armature and Wordclock implement the interface)
            Any instance that implements the interface can be added to the Worldclock instance and advance time by Worldclock instance uniformly.
            </summary>
            <see cref="!:DragonBones.WorldClock"/>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 播放动画接口。 (Armature 和 WordClock 都实现了该接口)
            任何实现了此接口的实例都可以添加到 WorldClock 实例中，由 WorldClock 实例统一更新时间。
            </summary>
            <see cref="!:DragonBones.WorldClock"/>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.IAnimatable.AdvanceTime(System.Single)">
            <summary>
            - Advance time.
            </summary>
            <param name="passedTime">- Passed time. (In seconds)</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 更新时间。
            </summary>
            <param name="passedTime">- 前进的时间。 （以秒为单位）</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.ActionTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ZOrderTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BoneAllTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BoneTranslateTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BoneRotateTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BoneScaleTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.SlotDislayTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.SlotColorTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.DeformTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.IKConstraintTimelineState">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.WorldClock">
            <summary>
            - Worldclock provides clock support for animations, advance time for each IAnimatable object added to the instance.
            </summary>
            <see cref="!:DragonBones.IAnimateble"/>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - WorldClock 对动画提供时钟支持，为每个加入到该实例的 IAnimatable 对象更新时间。
            </summary>
            <see cref="!:DragonBones.IAnimateble"/>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.WorldClock.time">
            <summary>
            - Current time. (In seconds)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 当前的时间。 (以秒为单位)
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.WorldClock.timeScale">
            <summary>
            - The play speed, used to control animation speed-shift play.
            [0: Stop play, (0~1): Slow play, 1: Normal play, (1~N): Fast play]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 播放速度，用于控制动画变速播放。
            [0: 停止播放, (0~1): 慢速播放, 1: 正常播放, (1~N): 快速播放]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.WorldClock.#ctor(System.Single)">
            <summary>
            - Creating a Worldclock instance. Typically, you do not need to create Worldclock instance.
            When multiple Worldclock instances are running at different speeds, can achieving some specific animation effects, such as bullet time.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 创建一个 WorldClock 实例。通常并不需要创建 WorldClock 实例。
            当多个 WorldClock 实例使用不同的速度运行时，可以实现一些特殊的动画效果，比如子弹时间等。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.WorldClock.AdvanceTime(System.Single)">
            <summary>
            - Advance time for all IAnimatable instances.
            </summary>
            <param name="passedTime">- Passed time. [-1: Automatically calculates the time difference between the current frame and the previous frame, [0~N): Passed time] (In seconds)</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 为所有的 IAnimatable 实例更新时间。
            </summary>
            <param name="passedTime">- 前进的时间。 [-1: 自动计算当前帧与上一帧的时间差, [0~N): 前进的时间] (以秒为单位)</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.WorldClock.Contains(DragonBones.IAnimatable)">
            <summary>
            - Check whether contains a specific instance of IAnimatable.
            </summary>
            <param name="value">- The IAnimatable instance.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 检查是否包含特定的 IAnimatable 实例。
            </summary>
            <param name="value">- IAnimatable 实例。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.WorldClock.Add(DragonBones.IAnimatable)">
            <summary>
            - Add IAnimatable instance.
            </summary>
            <param name="value">- The IAnimatable instance.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 添加 IAnimatable 实例。
            </summary>
            <param name="value">- IAnimatable 实例。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.WorldClock.Remove(DragonBones.IAnimatable)">
            <summary>
            - Removes a specified IAnimatable instance.
            </summary>
            <param name="value">- The IAnimatable instance.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 移除特定的 IAnimatable 实例。
            </summary>
            <param name="value">- IAnimatable 实例。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.WorldClock.Clear">
            <summary>
            - Clear all IAnimatable instances.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 清除所有的 IAnimatable 实例。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.WorldClock.clock">
            <summary>
            - Deprecated, please refer to {@link dragonBones.BaseFactory#clock}.
            </summary>
            <language>en_US</language>
            <summary>
            - 已废弃，请参考 {@link dragonBones.BaseFactory#clock}。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.Armature">
            <summary>
            - Armature is the core of the skeleton animation system.
            </summary>
            <see cref="!:DragonBones.ArmatureData"/>
            <see cref="!:DragonBones.Bone"/>
            <see cref="!:DragonBones.Slot"/>
            <see cref="!:DragonBones.Animation"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨架是骨骼动画系统的核心。
            </summary>
            <see cref="!:DragonBones.ArmatureData"/>
            <see cref="!:DragonBones.Bone"/>
            <see cref="!:DragonBones.Slot"/>
            <see cref="!:DragonBones.Animation"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Armature.inheritAnimation">
            <summary>
            - Whether to inherit the animation control of the parent armature.
            True to try to have the child armature play an animation with the same name when the parent armature play the animation.
            </summary>
            <default>true</default>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 是否继承父骨架的动画控制。
            如果该值为 true，当父骨架播放动画时，会尝试让子骨架播放同名动画。
            </summary>
            <default>true</default>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Armature.userData">
            <private/>
        </member>
        <member name="F:DragonBones.Armature._cacheFrameIndex">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Armature._constraints">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Armature._armatureData">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Armature._replaceTextureAtlasData">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Armature._dragonBones">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Armature._parent">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Armature._OnClear">
            <private/>
        </member>
        <member name="M:DragonBones.Armature._SortZOrder(System.Int16[],System.Int32)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Armature._AddBone(DragonBones.Bone)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Armature._AddSlot(DragonBones.Slot)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Armature._AddConstraint(DragonBones.Constraint)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Armature._BufferAction(DragonBones.EventObject,System.Boolean)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Armature.Dispose">
            <summary>
            - Dispose the armature. (Return to the object pool)
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                removeChild(armature.display);
                armature.dispose();
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 释放骨架。 （回收到对象池）
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                removeChild(armature.display);
                armature.dispose();
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.Init(DragonBones.ArmatureData,DragonBones.IArmatureProxy,System.Object,DragonBones.DragonBones)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Armature.AdvanceTime(System.Single)">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.Armature.InvalidUpdate(System.String,System.Boolean)">
            <summary>
            - Forces a specific bone or its owning slot to update the transform or display property in the next frame.
            </summary>
            <param name="boneName">- The bone name. (If not set, all bones will be update)</param>
            <param name="updateSlot">- Whether to update the bone's slots. (Default: false)</param>
            <see cref="!:DragonBones.Bone.InvalidUpdate()"/>
            <see cref="!:DragonBones.Slot.InvalidUpdate()"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 强制特定骨骼或其拥有的插槽在下一帧更新变换或显示属性。
            </summary>
            <param name="boneName">- 骨骼名称。 （如果未设置，将更新所有骨骼）</param>
            <param name="updateSlot">- 是否更新骨骼的插槽。 （默认: false）</param>
            <see cref="!:DragonBones.Bone.InvalidUpdate()"/>
            <see cref="!:DragonBones.Slot.InvalidUpdate()"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.ContainsPoint(System.Single,System.Single)">
            <summary>
            - Check whether a specific point is inside a custom bounding box in a slot.
            The coordinate system of the point is the inner coordinate system of the armature.
            Custom bounding boxes need to be customized in Dragonbones Pro.
            </summary>
            <param name="x">- The horizontal coordinate of the point.</param>
            <param name="y">- The vertical coordinate of the point.</param>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 检查特定点是否在某个插槽的自定义边界框内。
            点的坐标系为骨架内坐标系。
            自定义边界框需要在 DragonBones Pro 中自定义。
            </summary>
            <param name="x">- 点的水平坐标。</param>
            <param name="y">- 点的垂直坐标。</param>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.IntersectsSegment(System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <summary>
            - Check whether a specific segment intersects a custom bounding box for a slot in the armature.
            The coordinate system of the segment and intersection is the inner coordinate system of the armature.
            Custom bounding boxes need to be customized in Dragonbones Pro.
            </summary>
            <param name="xA">- The horizontal coordinate of the beginning of the segment.</param>
            <param name="yA">- The vertical coordinate of the beginning of the segment.</param>
            <param name="xB">- The horizontal coordinate of the end point of the segment.</param>
            <param name="yB">- The vertical coordinate of the end point of the segment.</param>
            <param name="intersectionPointA">- The first intersection at which a line segment intersects the bounding box from the beginning to the end. (If not set, the intersection point will not calculated)</param>
            <param name="intersectionPointB">- The first intersection at which a line segment intersects the bounding box from the end to the beginning. (If not set, the intersection point will not calculated)</param>
            <param name="normalRadians">- The normal radians of the tangent of the intersection boundary box. [x: Normal radian of the first intersection tangent, y: Normal radian of the second intersection tangent] (If not set, the normal will not calculated)</param>
            <returns>The slot of the first custom bounding box where the segment intersects from the start point to the end point.</returns>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 检查特定线段是否与骨架的某个插槽的自定义边界框相交。
            线段和交点的坐标系均为骨架内坐标系。
            自定义边界框需要在 DragonBones Pro 中自定义。
            </summary>
            <param name="xA">- 线段起点的水平坐标。</param>
            <param name="yA">- 线段起点的垂直坐标。</param>
            <param name="xB">- 线段终点的水平坐标。</param>
            <param name="yB">- 线段终点的垂直坐标。</param>
            <param name="intersectionPointA">- 线段从起点到终点与边界框相交的第一个交点。 （如果未设置，则不计算交点）</param>
            <param name="intersectionPointB">- 线段从终点到起点与边界框相交的第一个交点。 （如果未设置，则不计算交点）</param>
            <param name="normalRadians">- 交点边界框切线的法线弧度。 [x: 第一个交点切线的法线弧度, y: 第二个交点切线的法线弧度] （如果未设置，则不计算法线）</param>
            <returns>线段从起点到终点相交的第一个自定义边界框的插槽。</returns>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.GetBone(System.String)">
            <summary>
            - Get a specific bone.
            </summary>
            <param name="name">- The bone name.</param>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的骨骼。
            </summary>
            <param name="name">- 骨骼名称。</param>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.GetBoneByDisplay(System.Object)">
            <summary>
            - Get a specific bone by the display.
            </summary>
            <param name="display">- The display object.</param>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 通过显示对象获取特定的骨骼。
            </summary>
            <param name="display">- 显示对象。</param>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.GetSlot(System.String)">
            <summary>
            - Get a specific slot.
            </summary>
            <param name="name">- The slot name.</param>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的插槽。
            </summary>
            <param name="name">- 插槽名称。</param>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.GetSlotByDisplay(System.Object)">
            <summary>
            - Get a specific slot by the display.
            </summary>
            <param name="display">- The display object.</param>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 通过显示对象获取特定的插槽。
            </summary>
            <param name="display">- 显示对象。</param>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.GetBones">
            <summary>
            - Get all bones.
            </summary>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取所有的骨骼。
            </summary>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Armature.GetSlots">
            <summary>
            - Get all slots.
            </summary>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取所有的插槽。
            </summary>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.flipX">
            <summary>
            - Whether to flip the armature horizontally.
            </summary>
            <version>DragonBones 5.5</version>
            <language>en_US</language>
            <summary>
            - 是否将骨架水平翻转。
            </summary>
            <version>DragonBones 5.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.flipY">
            <summary>
            - Whether to flip the armature vertically.
            </summary>
            <version>DragonBones 5.5</version>
            <language>en_US</language>
            <summary>
            - 是否将骨架垂直翻转。
            </summary>
            <version>DragonBones 5.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.cacheFrameRate">
            <summary>
            - The animation cache frame rate, which turns on the animation cache when the set value is greater than 0.
            There is a certain amount of memory overhead to improve performance by caching animation data in memory.
            The frame rate should not be set too high, usually with the frame rate of the animation is similar and lower than the program running frame rate.
            When the animation cache is turned on, some features will fail, such as the offset property of bone.
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                armature.cacheFrameRate = 24;
            </pre>
            </example>
            <see cref="!:DragonBones.DragonBonesData.frameRate"/>
            <see cref="!:DragonBones.ArmatureData.frameRate"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画缓存帧率，当设置的值大于 0 的时，将会开启动画缓存。
            通过将动画数据缓存在内存中来提高运行性能，会有一定的内存开销。
            帧率不宜设置的过高，通常跟动画的帧率相当且低于程序运行的帧率。
            开启动画缓存后，某些功能将会失效，比如骨骼的 offset 属性等。
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                armature.cacheFrameRate = 24;
            </pre>
            </example>
            <see cref="!:DragonBones.DragonBonesData.frameRate"/>
            <see cref="!:DragonBones.ArmatureData.frameRate"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.name">
            <summary>
            - The armature name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨架名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.armatureData">
            <summary>
            - The armature data.
            </summary>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 骨架数据。
            </summary>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.animation">
            <summary>
            - The animation player.
            </summary>
            <see cref="!:DragonBones.Animation"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画播放器。
            </summary>
            <see cref="!:DragonBones.Animation"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.proxy">
            <pivate/>
        </member>
        <member name="P:DragonBones.Armature.eventDispatcher">
            <summary>
            - The EventDispatcher instance of the armature.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 该骨架的 EventDispatcher 实例。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.display">
            <summary>
            - The display container.
            The display of the slot is displayed as the parent.
            Depending on the rendering engine, the type will be different, usually the DisplayObjectContainer type.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 显示容器实例。
            插槽的显示对象都会以此显示容器为父级。
            根据渲染引擎的不同，类型会不同，通常是 DisplayObjectContainer 类型。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Armature.replacedTexture">
            <private/>
        </member>
        <member name="P:DragonBones.Armature.clock">
            <inheritDoc/>
        </member>
        <member name="P:DragonBones.Armature.parent">
            <summary>
            - Get the parent slot which the armature belongs to.
            </summary>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 该骨架所属的父插槽。
            </summary>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.Bone">
            <summary>
            - Bone is one of the most important logical units in the armature animation system,
            and is responsible for the realization of translate, rotation, scaling in the animations.
            A armature can contain multiple bones.
            </summary>
            <see cref="!:DragonBones.BoneData"/>
            <see cref="!:DragonBones.Armature"/>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨骼在骨骼动画体系中是最重要的逻辑单元之一，负责动画中的平移、旋转、缩放的实现。
            一个骨架中可以包含多个骨骼。
            </summary>
            <see cref="!:DragonBones.BoneData"/>
            <see cref="!:DragonBones.Armature"/>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Bone.offsetMode">
            <summary>
            - The offset mode.
            </summary>
            <see cref="!:offset"/>
            <version>DragonBones 5.5</version>
            <language>en_US</language>
            <summary>
            - 偏移模式。
            </summary>
            <see cref="!:offset"/>
            <version>DragonBones 5.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Bone.animationPose">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Bone._transformDirty">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Bone._childrenTransformDirty">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Bone._hasConstraint">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Bone._blendState">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Bone._boneData">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Bone._parent">
            <private/>
        </member>
        <member name="F:DragonBones.Bone._cachedFrameIndices">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Bone._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.Bone._UpdateGlobalTransformMatrix(System.Boolean)">
            <private/>
        </member>
        <member name="M:DragonBones.Bone.Init(DragonBones.BoneData,DragonBones.Armature)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Bone.Update(System.Int32)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Bone.UpdateByConstraint">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Bone.InvalidUpdate">
            <summary>
            - Forces the bone to update the transform in the next frame.
            When the bone is not animated or its animation state is finished, the bone will not continue to update,
            and when the skeleton must be updated for some reason, the method needs to be called explicitly.
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                let bone = armature.getBone("arm");
                bone.offset.scaleX = 2.0;
                bone.invalidUpdate();
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 强制骨骼在下一帧更新变换。
            当该骨骼没有动画状态或其动画状态播放完成时，骨骼将不在继续更新，而此时由于某些原因必须更新骨骼时，则需要显式调用该方法。
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                let bone = armature.getBone("arm");
                bone.offset.scaleX = 2.0;
                bone.invalidUpdate();
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Bone.Contains(DragonBones.Bone)">
            <summary>
            - Check whether the bone contains a specific bone or slot.
            </summary>
            <see cref="!:DragonBones.Bone"/>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 检查该骨骼是否包含特定的骨骼或插槽。
            </summary>
            <see cref="!:DragonBones.Bone"/>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Bone.boneData">
            <summary>
            - The bone data.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 骨骼数据。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Bone.visible">
            <summary>
            - The visible of all slots in the bone.
            </summary>
            <default>true</default>
            <see cref="!:DragonBones.Slot.visible"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 此骨骼所有插槽的可见。
            </summary>
            <default>true</default>
            <see cref="!:DragonBones.Slot.visible"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Bone.name">
            <summary>
            - The bone name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨骼名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Bone.parent">
            <summary>
            - The parent bone to which it belongs.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 所属的父骨骼。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Bone.slot">
            <summary>
            - Deprecated, please refer to {@link dragonBones.Armature#getSlot()}.
            </summary>
            <language>en_US</language>
            <summary>
            - 已废弃，请参考 {@link dragonBones.Armature#getSlot()}。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.Constraint">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Constraint._constraintData">
            <summary>
            - For timeline state.
            </summary>
            <internal/>
        </member>
        <member name="F:DragonBones.Constraint._target">
            <summary>
            - For sort bones.
            </summary>
            <internal/>
        </member>
        <member name="F:DragonBones.Constraint._root">
            <summary>
            - For sort bones.
            </summary>
            <internal/>
        </member>
        <member name="T:DragonBones.IKConstraint">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.IKConstraint._bendPositive">
            <summary>
            - For timeline state.
            </summary>
            <internal/>
        </member>
        <member name="F:DragonBones.IKConstraint._weight">
            <summary>
            - For timeline state.
            </summary>
            <internal/>
        </member>
        <member name="T:DragonBones.DeformVertices">
            <internal/>
        </member>
        <member name="T:DragonBones.IArmatureProxy">
            <summary>
            - The armature proxy interface, the docking engine needs to implement it concretely.
            </summary>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 骨架代理接口，对接的引擎需要对其进行具体实现。
            </summary>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.IArmatureProxy.DBInit(DragonBones.Armature)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.IArmatureProxy.DBClear">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.IArmatureProxy.DBUpdate">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.IArmatureProxy.Dispose(System.Boolean)">
            <summary>
            - Dispose the instance and the Armature instance. (The Armature instance will return to the object pool)
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                removeChild(armatureDisplay);
                armatureDisplay.dispose();
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 释放该实例和骨架。 （骨架会回收到对象池）
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                removeChild(armatureDisplay);
                armatureDisplay.dispose();
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.IArmatureProxy.armature">
            <summary>
            - The armature.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 骨架。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.IArmatureProxy.animation">
            <summary>
            - The animation player.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画播放器。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.Slot">
            <summary>
            - The slot attached to the armature, controls the display status and properties of the display object.
            A bone can contain multiple slots.
            A slot can contain multiple display objects, displaying only one of the display objects at a time,
            but you can toggle the display object into frame animation while the animation is playing.
            The display object can be a normal texture, or it can be a display of a child armature, a grid display object,
            and a custom other display object.
            </summary>
            <see cref="!:DragonBones.Armature"/>
            <see cref="!:DragonBones.Bone"/>
            <see cref="!:DragonBones.SlotData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 插槽附着在骨骼上，控制显示对象的显示状态和属性。
            一个骨骼上可以包含多个插槽。
            一个插槽中可以包含多个显示对象，同一时间只能显示其中的一个显示对象，但可以在动画播放的过程中切换显示对象实现帧动画。
            显示对象可以是普通的图片纹理，也可以是子骨架的显示容器，网格显示对象，还可以是自定义的其他显示对象。
            </summary>
            <see cref="!:DragonBones.Armature"/>
            <see cref="!:DragonBones.Bone"/>
            <see cref="!:DragonBones.SlotData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Slot.displayController">
            <summary>
            - Displays the animated state or mixed group name controlled by the object, set to null to be controlled by all animation states.
            </summary>
            <default>null</default>
            <see cref="!:DragonBones.AnimationState.displayControl"/>
            <see cref="!:DragonBones.AnimationState.name"/>
            <see cref="!:DragonBones.AnimationState.group"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 显示对象受到控制的动画状态或混合组名称，设置为 null 则表示受所有的动画状态控制。
            </summary>
            <default>null</default>
            <see cref="!:DragonBones.AnimationState.displayControl"/>
            <see cref="!:DragonBones.AnimationState.name"/>
            <see cref="!:DragonBones.AnimationState.group"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Slot._displayDirty">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._zOrderDirty">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._visibleDirty">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._blendModeDirty">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._colorDirty">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Slot._transformDirty">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._visible">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._blendMode">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._displayIndex">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._animationDisplayIndex">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._zOrder">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Slot._cachedFrameIndex">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._pivotX">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Slot._pivotY">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Slot._localMatrix">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._colorTransform">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Slot._displayDatas">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._displayList">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._slotData">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Slot._rawDisplayDatas">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._displayData">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.Slot._boundingBoxData">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._textureData">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._deformVertices">
            <internal/>
        </member>
        <member name="F:DragonBones.Slot._rawDisplay">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._meshDisplay">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._display">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._childArmature">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._parent">
            <private/>
        </member>
        <member name="F:DragonBones.Slot._cachedFrameIndices">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Slot._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.Slot._InitDisplay(System.Object,System.Boolean)">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._DisposeDisplay(System.Object,System.Boolean)">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._OnUpdateDisplay">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._AddDisplay">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._ReplaceDisplay(System.Object)">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._RemoveDisplay">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateZOrder">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateVisible">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateBlendMode">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateColor">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateFrame">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateMesh">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateTransform">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._IdentityTransform">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._GetDefaultRawDisplayData(System.Int32)">
            <summary>
            - Support default skin data.
            </summary>
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateDisplayData">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateDisplay">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._UpdateGlobalTransformMatrix(System.Boolean)">
            <private/>
        </member>
        <member name="M:DragonBones.Slot._SetDisplayIndex(System.Int32,System.Boolean)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Slot._SetZorder(System.Int32)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Slot._SetColor(DragonBones.ColorTransform)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Slot._SetDisplayList(System.Collections.Generic.List{System.Object})">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Slot.Init(DragonBones.SlotData,DragonBones.Armature,System.Object,System.Object)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Slot.Update(System.Int32)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.Slot.UpdateTransformAndMatrix">
            <private/>
        </member>
        <member name="M:DragonBones.Slot.ReplaceDisplayData(DragonBones.DisplayData,System.Int32)">
            <private/>
        </member>
        <member name="M:DragonBones.Slot.ContainsPoint(System.Single,System.Single)">
            <summary>
            - Check whether a specific point is inside a custom bounding box in the slot.
            The coordinate system of the point is the inner coordinate system of the armature.
            Custom bounding boxes need to be customized in Dragonbones Pro.
            </summary>
            <param name="x">- The horizontal coordinate of the point.</param>
            <param name="y">- The vertical coordinate of the point.</param>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 检查特定点是否在插槽的自定义边界框内。
            点的坐标系为骨架内坐标系。
            自定义边界框需要在 DragonBones Pro 中自定义。
            </summary>
            <param name="x">- 点的水平坐标。</param>
            <param name="y">- 点的垂直坐标。</param>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Slot.IntersectsSegment(System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <summary>
            - Check whether a specific segment intersects a custom bounding box for the slot.
            The coordinate system of the segment and intersection is the inner coordinate system of the armature.
            Custom bounding boxes need to be customized in Dragonbones Pro.
            </summary>
            <param name="xA">- The horizontal coordinate of the beginning of the segment.</param>
            <param name="yA">- The vertical coordinate of the beginning of the segment.</param>
            <param name="xB">- The horizontal coordinate of the end point of the segment.</param>
            <param name="yB">- The vertical coordinate of the end point of the segment.</param>
            <param name="intersectionPointA">- The first intersection at which a line segment intersects the bounding box from the beginning to the end. (If not set, the intersection point will not calculated)</param>
            <param name="intersectionPointB">- The first intersection at which a line segment intersects the bounding box from the end to the beginning. (If not set, the intersection point will not calculated)</param>
            <param name="normalRadians">- The normal radians of the tangent of the intersection boundary box. [x: Normal radian of the first intersection tangent, y: Normal radian of the second intersection tangent] (If not set, the normal will not calculated)</param>
            <returns>Intersection situation. [1: Disjoint and segments within the bounding box, 0: Disjoint, 1: Intersecting and having a nodal point and ending in the bounding box, 2: Intersecting and having a nodal point and starting at the bounding box, 3: Intersecting and having two intersections, N: Intersecting and having N intersections]</returns>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 检查特定线段是否与插槽的自定义边界框相交。
            线段和交点的坐标系均为骨架内坐标系。
            自定义边界框需要在 DragonBones Pro 中自定义。
            </summary>
            <param name="xA">- 线段起点的水平坐标。</param>
            <param name="yA">- 线段起点的垂直坐标。</param>
            <param name="xB">- 线段终点的水平坐标。</param>
            <param name="yB">- 线段终点的垂直坐标。</param>
            <param name="intersectionPointA">- 线段从起点到终点与边界框相交的第一个交点。 （如果未设置，则不计算交点）</param>
            <param name="intersectionPointB">- 线段从终点到起点与边界框相交的第一个交点。 （如果未设置，则不计算交点）</param>
            <param name="normalRadians">- 交点边界框切线的法线弧度。 [x: 第一个交点切线的法线弧度, y: 第二个交点切线的法线弧度] （如果未设置，则不计算法线）</param>
            <returns>相交的情况。 [-1: 不相交且线段在包围盒内, 0: 不相交, 1: 相交且有一个交点且终点在包围盒内, 2: 相交且有一个交点且起点在包围盒内, 3: 相交且有两个交点, N: 相交且有 N 个交点]</returns>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Slot.InvalidUpdate">
            <summary>
            - Forces the slot to update the state of the display object in the next frame.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 强制插槽在下一帧更新显示对象的状态。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.visible">
            <summary>
            - The visible of slot's display object.
            </summary>
            <default>true</default>
            <version>DragonBones 5.6</version>
            <language>en_US</language>
            <summary>
            - 插槽的显示对象的可见。
            </summary>
            <default>true</default>
            <version>DragonBones 5.6</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.displayIndex">
            <summary>
            - The index of the display object displayed in the display list.
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                let slot = armature.getSlot("weapon");
                slot.displayIndex = 3;
                slot.displayController = "none";
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 此时显示的显示对象在显示列表中的索引。
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                let slot = armature.getSlot("weapon");
                slot.displayIndex = 3;
                slot.displayController = "none";
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.name">
            <summary>
            - The slot name.
            </summary>
            <see cref="!:DragonBones.SlotData.name"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 插槽名称。
            </summary>
            <see cref="!:DragonBones.SlotData.name"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.displayList">
            <summary>
            - Contains a display list of display objects or child armatures.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 包含显示对象或子骨架的显示列表。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.slotData">
            <summary>
            - The slot data.
            </summary>
            <see cref="!:DragonBones.SlotData"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 插槽数据。
            </summary>
            <see cref="!:DragonBones.SlotData"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.rawDisplayDatas">
            <private/>
        </member>
        <member name="P:DragonBones.Slot.boundingBoxData">
            <summary>
            - The custom bounding box data for the slot at current time.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 插槽此时的自定义包围盒数据。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.rawDisplay">
            <private/>
        </member>
        <member name="P:DragonBones.Slot.meshDisplay">
            <private/>
        </member>
        <member name="P:DragonBones.Slot.display">
            <summary>
            - The display object that the slot displays at this time.
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                let slot = armature.getSlot("text");
                slot.display = new yourEngine.TextField();
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 插槽此时显示的显示对象。
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                let slot = armature.getSlot("text");
                slot.display = new yourEngine.TextField();
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.childArmature">
            <summary>
            - The child armature that the slot displayed at current time.
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                let slot = armature.getSlot("weapon");
            let prevChildArmature = slot.childArmature;
            if (prevChildArmature) {
            prevChildArmature.dispose();
                }
                slot.childArmature = factory.buildArmature("weapon_blabla", "weapon_blabla_project");
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 插槽此时显示的子骨架。
            注意，被替换的对象并不会被回收，根据语言和引擎的不同，需要额外处理。
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                let slot = armature.getSlot("weapon");
            let prevChildArmature = slot.childArmature;
            if (prevChildArmature) {
            prevChildArmature.dispose();
                }
                slot.childArmature = factory.buildArmature("weapon_blabla", "weapon_blabla_project");
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.Slot.parent">
            <summary>
            - The parent bone to which it belongs.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 所属的父骨骼。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.TransformObject">
            <summary>
            - The base class of the transform object.
            </summary>
            <see cref="!:DragonBones.Transform"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 变换对象的基类。
            </summary>
            <see cref="!:DragonBones.Transform"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.TransformObject._helpMatrix">
            <private/>
        </member>
        <member name="F:DragonBones.TransformObject._helpTransform">
            <private/>
        </member>
        <member name="F:DragonBones.TransformObject._helpPoint">
            <private/>
        </member>
        <member name="F:DragonBones.TransformObject.globalTransformMatrix">
            <summary>
            - A matrix relative to the armature coordinate system.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 相对于骨架坐标系的矩阵。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.TransformObject.global">
            <summary>
            - A transform relative to the armature coordinate system.
            </summary>
            <see cref="M:DragonBones.TransformObject.UpdateGlobalTransform"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 相对于骨架坐标系的变换。
            </summary>
            <see cref="M:DragonBones.TransformObject.UpdateGlobalTransform"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.TransformObject.offset">
            <summary>
            - The offset transform relative to the armature or the parent bone coordinate system.
            </summary>
            <see cref="!:dragonBones.Bone.InvalidUpdate()"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 相对于骨架或父骨骼坐标系的偏移变换。
            </summary>
            <see cref="!:dragonBones.Bone.InvalidUpdate()"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.TransformObject.origin">
            <private/>
        </member>
        <member name="F:DragonBones.TransformObject.userData">
            <private/>
        </member>
        <member name="F:DragonBones.TransformObject._globalDirty">
            <private/>
        </member>
        <member name="F:DragonBones.TransformObject._armature">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.TransformObject._OnClear">
            <private/>
        </member>
        <member name="M:DragonBones.TransformObject.UpdateGlobalTransform">
            <summary>
            - For performance considerations, rotation or scale in the {@link #global} attribute of the bone or slot is not always properly accessible,
            some engines do not rely on these attributes to update rendering, such as Egret.
            The use of this method ensures that the access to the {@link #global} property is correctly rotation or scale.
            </summary>
            <example>
            TypeScript style, for reference only.
            <pre>
                bone.updateGlobalTransform();
                let rotation = bone.global.rotation;
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 出于性能的考虑，骨骼或插槽的 {@link #global} 属性中的旋转或缩放并不总是正确可访问的，有些引擎并不依赖这些属性更新渲染，比如 Egret。
            使用此方法可以保证访问到 {@link #global} 属性中正确的旋转或缩放。
            </summary>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                bone.updateGlobalTransform();
                let rotation = bone.global.rotation;
            </pre>
            </example>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="P:DragonBones.TransformObject.armature">
            <summary>
            - The armature to which it belongs.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 所属的骨架。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.BaseObject">
            <summary>
            - The BaseObject is the base class for all objects in the DragonBones framework.
            All BaseObject instances are cached to the object pool to reduce the performance consumption of frequent requests for memory or memory recovery.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 基础对象，通常 DragonBones 的对象都继承自该类。
            所有基础对象的实例都会缓存到对象池，以减少频繁申请内存或内存回收的性能消耗。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseObject.SetMaxCount(System.Type,System.UInt32)">
            <summary>
            - Set the maximum cache count of the specify object pool.
            </summary>
            <param name="objectConstructor">- The specify class. (Set all object pools max cache count if not set)</param>
            <param name="maxCount">- Max count.</param>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 设置特定对象池的最大缓存数量。
            </summary>
            <param name="objectConstructor">- 特定的类。 (不设置则设置所有对象池的最大缓存数量)</param>
            <param name="maxCount">- 最大缓存数量。</param>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseObject.ClearPool(System.Type)">
            <summary>
            - Clear the cached instances of a specify object pool.
            </summary>
            <param name="objectConstructor">- Specify class. (Clear all cached instances if not set)</param>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 清除特定对象池的缓存实例。
            </summary>
            <param name="objectConstructor">- 特定的类。 (不设置则清除所有缓存的实例)</param>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseObject.BorrowObject``1">
            <summary>
            - Get an instance of the specify class from object pool.
            </summary>
            <param name="objectConstructor">- The specify class.</param>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 从对象池中获取特定类的实例。
            </summary>
            <param name="objectConstructor">- 特定的类。</param>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.BaseObject.hashCode">
            <summary>
            - A unique identification number assigned to the object.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 分配给此实例的唯一标识号。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseObject._OnClear">
            <private/>
        </member>
        <member name="M:DragonBones.BaseObject.ReturnToPool">
            <summary>
            - Clear the object and return it back to object pool。
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 清除该实例的所有数据并将其返还对象池。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.BinaryOffset">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ArmatureType">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.DisplayType">
            <private/>
        </member>
        <member name="T:DragonBones.BoundingBoxType">
            <summary>
            - Bounding box type.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 边界框类型。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.ActionType">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BlendMode">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.TweenType">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.TimelineType">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.OffsetMode">
            <summary>
            - Offset mode.
            </summary>
            <version>DragonBones 5.5</version>
            <language>en_US</language>
            <summary>
            - 偏移模式。
            </summary>
            <version>DragonBones 5.5</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.AnimationFadeOutMode">
            <summary>
            - Animation fade out mode.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画淡出模式。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationFadeOutMode.None">
            <summary>
            - Do not fade out of any animation states.
            </summary>
            <language>en_US</language>
            <summary>
            - 不淡出任何的动画状态。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationFadeOutMode.SameLayer">
            <summary>
            - Fade out the animation states of the same layer.
            </summary>
            <language>en_US</language>
            <summary>
            - 淡出同层的动画状态。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationFadeOutMode.SameGroup">
            <summary>
            - Fade out the animation states of the same group.
            </summary>
            <language>en_US</language>
            <summary>
            - 淡出同组的动画状态。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationFadeOutMode.SameLayerAndGroup">
            <summary>
            - Fade out the animation states of the same layer and group.
            </summary>
            <language>en_US</language>
            <summary>
            - 淡出同层并且同组的动画状态。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationFadeOutMode.All">
            <summary>
            - Fade out of all animation states.
            </summary>
            <language>en_US</language>
            <summary>
            - 淡出所有的动画状态。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationFadeOutMode.Single">
            <summary>
            - Does not replace the animation state with the same name.
            </summary>
            <language>en_US</language>
            <summary>
            - 不替换同名的动画状态。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.DragonBones">
            <private/>
        </member>
        <member name="T:DragonBones.EventObject">
            <summary>
            - The properties of the object carry basic information about an event,
            which are passed as parameter or parameter's parameter to event listeners when an event occurs.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 事件对象，包含有关事件的基本信息，当发生事件时，该实例将作为参数或参数的参数传递给事件侦听器。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.START">
            <summary>
            - Animation start play.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画开始播放。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.LOOP_COMPLETE">
            <summary>
            - Animation loop play complete once.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画循环播放完成一次。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.COMPLETE">
            <summary>
            - Animation play complete.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画播放完成。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.FADE_IN">
            <summary>
            - Animation fade in start.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画淡入开始。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.FADE_IN_COMPLETE">
            <summary>
            - Animation fade in complete.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画淡入完成。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.FADE_OUT">
            <summary>
            - Animation fade out start.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画淡出开始。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.FADE_OUT_COMPLETE">
            <summary>
            - Animation fade out complete.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画淡出完成。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.FRAME_EVENT">
            <summary>
            - Animation frame event.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画帧事件。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.SOUND_EVENT">
            <summary>
            - Animation frame sound event.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 动画帧声音事件。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.EventObject.ActionDataToInstance(DragonBones.ActionData,DragonBones.EventObject,DragonBones.Armature)">
            <internal/>
            <private/>
            <summary>
            - The armature that dispatch the event.
            </summary>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 发出该事件的骨架。
            </summary>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
            <summary>
            - The custom data.
            </summary>
            <see cref="!:DragonBones.CustomData"/>
            <private/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 自定义数据。
            </summary>
            <see cref="!:DragonBones.CustomData"/>
            <private/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.time">
            <summary>
            - If is a frame event, the value is used to describe the time that the event was in the animation timeline. (In seconds)
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 如果是帧事件，此值用来描述该事件在动画时间轴中所处的时间。（以秒为单位）
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.type">
            <summary>
            - The event type。
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 事件类型。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.name">
            <summary>
            - The event name. (The frame event name or the frame sound name)
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 事件名称。 (帧事件的名称或帧声音的名称)
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.bone">
            <summary>
            - The bone that dispatch the event.
            </summary>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 发出该事件的骨骼。
            </summary>
            <see cref="!:DragonBones.Bone"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.slot">
            <summary>
            - The slot that dispatch the event.
            </summary>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 发出该事件的插槽。
            </summary>
            <see cref="!:DragonBones.Slot"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.animationState">
            <summary>
            - The animation state that dispatch the event.
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 发出该事件的动画状态。
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.EventObject.actionData">
            <private/>
        </member>
        <member name="M:DragonBones.EventObject._OnClear">
            <private/>
        </member>
        <member name="T:DragonBones.IEventDispatcher`1">
            <summary>
            - The event dispatcher interface.
            Dragonbones event dispatch usually relies on docking engine to implement, which defines the event method to be implemented when docking the engine.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 事件派发接口。
            DragonBones 的事件派发通常依赖于对接的引擎来实现，该接口定义了对接引擎时需要实现的事件方法。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.IEventDispatcher`1.HasDBEventListener(System.String)">
            <summary>
            - Checks whether the object has any listeners registered for a specific type of event。
            </summary>
            <param name="type">- Event type.</param>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 检查是否为特定的事件类型注册了任何侦听器。
            </summary>
            <param name="type">- 事件类型。</param>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.IEventDispatcher`1.DispatchDBEvent(System.String,`0)">
            <summary>
            - Dispatches an event into the event flow.
            </summary>
            <param name="type">- Event type.</param>
            <param name="eventObject">- Event object.</param>
            <see cref="!:DragonBones.EventObject"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 分派特定的事件到事件流中。
            </summary>
            <param name="type">- 事件类型。</param>
            <param name="eventObject">- 事件数据。</param>
            <see cref="!:DragonBones.EventObject"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.IEventDispatcher`1.AddDBEventListener(System.String,DragonBones.ListenerDelegate{`0})">
            <summary>
            - Add an event listener object so that the listener receives notification of an event.
            </summary>
            <param name="type">- Event type.</param>
            <param name="listener">- Event listener.</param>
            <param name="thisObject">- The listener function's "this".</param>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 添加特定事件类型的事件侦听器，以使侦听器能够接收事件通知。
            </summary>
            <param name="type">- 事件类型。</param>
            <param name="listener">- 事件侦听器。</param>
            <param name="thisObject">- 侦听函数绑定的 this 对象。</param>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.IEventDispatcher`1.RemoveDBEventListener(System.String,DragonBones.ListenerDelegate{`0})">
            <summary>
            - Removes a listener from the object.
            </summary>
            <param name="type">- Event type.</param>
            <param name="listener">- Event listener.</param>
            <param name="thisObject">- The listener function's "this".</param>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 删除特定事件类型的侦听器。
            </summary>
            <param name="type">- 事件类型。</param>
            <param name="listener">- 事件侦听器。</param>
            <param name="thisObject">- 侦听函数绑定的 this 对象。</param>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.BuildArmaturePackage">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BaseFactory">
            <summary>
            - Base class for the factory that create the armatures. (Typically only one global factory instance is required)
            The factory instance create armatures by parsed and added DragonBonesData instances and TextureAtlasData instances.
            Once the data has been parsed, it has been cached in the factory instance and does not need to be parsed again until it is cleared by the factory instance.
            </summary>
            <see cref="!:DragonBones.DragonBonesData"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <see cref="!:DragonBones.ArmatureData"/>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 创建骨架的工厂基类。 （通常只需要一个全局工厂实例）
            工厂通过解析并添加的 DragonBonesData 实例和 TextureAtlasData 实例来创建骨架。
            当数据被解析过之后，已经添加到工厂中，在没有被工厂清理之前，不需要再次解析。
            </summary>
            <see cref="!:DragonBones.DragonBonesData"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <see cref="!:DragonBones.ArmatureData"/>
            <see cref="!:DragonBones.Armature"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.BaseFactory._objectParser">
            <private/>
        </member>
        <member name="F:DragonBones.BaseFactory._binaryParser">
            <private/>
        </member>
        <member name="F:DragonBones.BaseFactory.autoSearch">
            <private/>
        </member>
        <member name="F:DragonBones.BaseFactory._dragonBonesDataMap">
            <private/>
        </member>
        <member name="F:DragonBones.BaseFactory._textureAtlasDataMap">
            <private/>
        </member>
        <member name="F:DragonBones.BaseFactory._dragonBones">
            <private/>
        </member>
        <member name="F:DragonBones.BaseFactory._dataParser">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory.#ctor(DragonBones.DataParser)">
            <summary>
            - Create a factory instance. (typically only one global factory instance is required)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 创建一个工厂实例。 （通常只需要一个全局工厂实例）
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory._IsSupportMesh">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._GetTextureData(System.String,System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._FillBuildArmaturePackage(DragonBones.BuildArmaturePackage,System.String,System.String,System.String,System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._BuildBones(DragonBones.BuildArmaturePackage,DragonBones.Armature)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._BuildSlots(DragonBones.BuildArmaturePackage,DragonBones.Armature)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._BuildConstraints(DragonBones.BuildArmaturePackage,DragonBones.Armature)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._BuildChildArmature(DragonBones.BuildArmaturePackage,DragonBones.Slot,DragonBones.DisplayData)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._GetSlotDisplay(DragonBones.BuildArmaturePackage,DragonBones.DisplayData,DragonBones.DisplayData,DragonBones.Slot)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._BuildTextureAtlasData(DragonBones.TextureAtlasData,System.Object)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._BuildArmature(DragonBones.BuildArmaturePackage)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory._BuildSlot(DragonBones.BuildArmaturePackage,DragonBones.SlotData,DragonBones.Armature)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory.ParseDragonBonesData(System.Object,System.String,System.Single)">
            <summary>
            - Parse the raw data to a DragonBonesData instance and cache it to the factory.
            </summary>
            <param name="rawData">- The raw data.</param>
            <param name="name">- Specify a cache name for the instance so that the instance can be obtained through this name. (If not set, use the instance name instead)</param>
            <param name="scale">- Specify a scaling value for all armatures. (Default: 1.0)</param>
            <returns>DragonBonesData instance</returns>
            <see cref="!:GetDragonBonesData()"/>
            <see cref="!:AddDragonBonesData()"/>
            <see cref="!:RemoveDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 将原始数据解析为 DragonBonesData 实例，并缓存到工厂中。
            </summary>
            <param name="rawData">- 原始数据。</param>
            <param name="name">- 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）</param>
            <param name="scale">- 为所有的骨架指定一个缩放值。 （默认: 1.0）</param>
            <returns>DragonBonesData 实例</returns>
            <see cref="!:GetDragonBonesData()"/>
            <see cref="!:AddDragonBonesData()"/>
            <see cref="!:RemoveDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.ParseTextureAtlasData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Object,System.String,System.Single)">
            <summary>
            - Parse the raw texture atlas data and the texture atlas object to a TextureAtlasData instance and cache it to the factory.
            </summary>
            <param name="rawData">- The raw texture atlas data.</param>
            <param name="textureAtlas">- The texture atlas object.</param>
            <param name="name">- Specify a cache name for the instance so that the instance can be obtained through this name. (If not set, use the instance name instead)</param>
            <param name="scale">- Specify a scaling value for the map set. (Default: 1.0)</param>
            <returns>TextureAtlasData instance</returns>
            <see cref="!:GetTextureAtlasData()"/>
            <see cref="!:AddTextureAtlasData()"/>
            <see cref="!:RemoveTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 将原始贴图集数据和贴图集对象解析为 TextureAtlasData 实例，并缓存到工厂中。
            </summary>
            <param name="rawData">- 原始贴图集数据。</param>
            <param name="textureAtlas">- 贴图集对象。</param>
            <param name="name">- 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）</param>
            <param name="scale">- 为贴图集指定一个缩放值。 （默认: 1.0）</param>
            <returns>TextureAtlasData 实例</returns>
            <see cref="!:GetTextureAtlasData()"/>
            <see cref="!:AddTextureAtlasData()"/>
            <see cref="!:RemoveTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.UpdateTextureAtlasData(System.String,System.Collections.Generic.List{System.Object})">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory.GetDragonBonesData(System.String)">
            <summary>
            - Get a specific DragonBonesData instance.
            </summary>
            <param name="name">- The DragonBonesData instance cache name.</param>
            <returns>DragonBonesData instance</returns>
            <see cref="!:ParseDragonBonesData()"/>
            <see cref="!:AddDragonBonesData()"/>
            <see cref="!:RemoveDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的 DragonBonesData 实例。
            </summary>
            <param name="name">- DragonBonesData 实例的缓存名称。</param>
            <returns>DragonBonesData 实例</returns>
            <see cref="!:ParseDragonBonesData()"/>
            <see cref="!:AddDragonBonesData()"/>
            <see cref="!:RemoveDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.AddDragonBonesData(DragonBones.DragonBonesData,System.String)">
            <summary>
            - Cache a DragonBonesData instance to the factory.
            </summary>
            <param name="data">- The DragonBonesData instance.</param>
            <param name="name">- Specify a cache name for the instance so that the instance can be obtained through this name. (if not set, use the instance name instead)</param>
            <see cref="!:ParseDragonBonesData()"/>
            <see cref="!:GetDragonBonesData()"/>
            <see cref="!:RemoveDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 将 DragonBonesData 实例缓存到工厂中。
            </summary>
            <param name="data">- DragonBonesData 实例。</param>
            <param name="name">- 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）</param>
            <see cref="!:ParseDragonBonesData()"/>
            <see cref="!:GetDragonBonesData()"/>
            <see cref="!:RemoveDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.RemoveDragonBonesData(System.String,System.Boolean)">
            <summary>
            - Remove a DragonBonesData instance.
            </summary>
            <param name="name">- The DragonBonesData instance cache name.</param>
            <param name="disposeData">- Whether to dispose data. (Default: true)</param>
            <see cref="!:ParseDragonBonesData()"/>
            <see cref="!:GetDragonBonesData()"/>
            <see cref="!:AddDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 移除 DragonBonesData 实例。
            </summary>
            <param name="name">- DragonBonesData 实例缓存名称。</param>
            <param name="disposeData">- 是否释放数据。 （默认: true）</param>
            <see cref="!:ParseDragonBonesData()"/>
            <see cref="!:GetDragonBonesData()"/>
            <see cref="!:AddDragonBonesData()"/>
            <see cref="!:DragonBones.DragonBonesData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.GetTextureAtlasData(System.String)">
            <summary>
            - Get a list of specific TextureAtlasData instances.
            </summary>
            <param name="name">- The TextureAtlasData cahce name.</param>
            <see cref="!:ParseTextureAtlasData()"/>
            <see cref="!:AddTextureAtlasData()"/>
            <see cref="!:RemoveTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的 TextureAtlasData 实例列表。
            </summary>
            <param name="name">- TextureAtlasData 实例缓存名称。</param>
            <see cref="!:ParseTextureAtlasData()"/>
            <see cref="!:AddTextureAtlasData()"/>
            <see cref="!:RemoveTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.AddTextureAtlasData(DragonBones.TextureAtlasData,System.String)">
            <summary>
            - Cache a TextureAtlasData instance to the factory.
            </summary>
            <param name="data">- The TextureAtlasData instance.</param>
            <param name="name">- Specify a cache name for the instance so that the instance can be obtained through this name. (if not set, use the instance name instead)</param>
            <see cref="!:ParseTextureAtlasData()"/>
            <see cref="!:GetTextureAtlasData()"/>
            <see cref="!:RemoveTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 将 TextureAtlasData 实例缓存到工厂中。
            </summary>
            <param name="data">- TextureAtlasData 实例。</param>
            <param name="name">- 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）</param>
            <see cref="!:ParseTextureAtlasData()"/>
            <see cref="!:GetTextureAtlasData()"/>
            <see cref="!:RemoveTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.RemoveTextureAtlasData(System.String,System.Boolean)">
            <summary>
            - Remove a TextureAtlasData instance.
            </summary>
            <param name="name">- The TextureAtlasData instance cache name.</param>
            <param name="disposeData">- Whether to dispose data.</param>
            <see cref="!:ParseTextureAtlasData()"/>
            <see cref="!:GetTextureAtlasData()"/>
            <see cref="!:AddTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 移除 TextureAtlasData 实例。
            </summary>
            <param name="name">- TextureAtlasData 实例的缓存名称。</param>
            <param name="disposeData">- 是否释放数据。</param>
            <see cref="!:ParseTextureAtlasData()"/>
            <see cref="!:GetTextureAtlasData()"/>
            <see cref="!:AddTextureAtlasData()"/>
            <see cref="!:DragonBones.TextureAtlasData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.GetArmatureData(System.String,System.String)">
            <summary>
            - Get a specific armature data.
            </summary>
            <param name="name">- The armature data name.</param>
            <param name="dragonBonesName">- The cached name for DragonbonesData instance.</param>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 获取特定的骨架数据。
            </summary>
            <param name="name">- 骨架数据名称。</param>
            <param name="dragonBonesName">- DragonBonesData 实例的缓存名称。</param>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.Clear(System.Boolean)">
            <summary>
            - Clear all cached DragonBonesData instances and TextureAtlasData instances.
            </summary>
            <param name="disposeData">- Whether to dispose data.</param>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 清除缓存的所有 DragonBonesData 实例和 TextureAtlasData 实例。
            </summary>
            <param name="disposeData">- 是否释放数据。</param>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.BuildArmature(System.String,System.String,System.String,System.String)">
            <summary>
            - Create a armature from cached DragonBonesData instances and TextureAtlasData instances.
            Note that when the created armature that is no longer in use, you need to explicitly dispose {@link #dragonBones.Armature#dispose()}.
            </summary>
            <param name="armatureName">- The armature data name.</param>
            <param name="dragonBonesName">- The cached name of the DragonBonesData instance. (If not set, all DragonBonesData instances are retrieved, and when multiple DragonBonesData instances contain a the same name armature data, it may not be possible to accurately create a specific armature)</param>
            <param name="skinName">- The skin name, you can set a different ArmatureData name to share it's skin data. (If not set, use the default skin data)</param>
            <returns>The armature.</returns>
            <example>
            TypeScript style, for reference only.
            <pre>
                let armature = factory.buildArmature("armatureName", "dragonBonesName");
                armature.clock = factory.clock;
            </pre>
            </example>
            <see cref="!:DragonBones.DragonBonesData"/>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 通过缓存的 DragonBonesData 实例和 TextureAtlasData 实例创建一个骨架。
            注意，创建的骨架不再使用时，需要显式释放 {@link #dragonBones.Armature#dispose()}。
            </summary>
            <param name="armatureName">- 骨架数据名称。</param>
            <param name="dragonBonesName">- DragonBonesData 实例的缓存名称。 （如果未设置，将检索所有的 DragonBonesData 实例，当多个 DragonBonesData 实例中包含同名的骨架数据时，可能无法准确的创建出特定的骨架）</param>
            <param name="skinName">- 皮肤名称，可以设置一个其他骨架数据名称来共享其皮肤数据。（如果未设置，则使用默认的皮肤数据）</param>
            <returns>骨架。</returns>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                let armature = factory.buildArmature("armatureName", "dragonBonesName");
                armature.clock = factory.clock;
            </pre>
            </example>
            <see cref="!:DragonBones.DragonBonesData"/>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.ReplaceDisplay(DragonBones.Slot,DragonBones.DisplayData,System.Int32)">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory.ReplaceSlotDisplay(System.String,System.String,System.String,System.String,DragonBones.Slot,System.Int32)">
            <summary>
            - Replaces the current display data for a particular slot with a specific display data.
            Specify display data with "dragonBonesName/armatureName/slotName/displayName".
            </summary>
            <param name="dragonBonesName">- The DragonBonesData instance cache name.</param>
            <param name="armatureName">- The armature data name.</param>
            <param name="slotName">- The slot data name.</param>
            <param name="displayName">- The display data name.</param>
            <param name="slot">- The slot.</param>
            <param name="displayIndex">- The index of the display data that is replaced. (If it is not set, replaces the current display data)</param>
            <example>
            TypeScript style, for reference only.
            <pre>
                let slot = armature.getSlot("weapon");
                factory.replaceSlotDisplay("dragonBonesName", "armatureName", "slotName", "displayName", slot);
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 用特定的显示对象数据替换特定插槽当前的显示对象数据。
            用 "dragonBonesName/armatureName/slotName/displayName" 指定显示对象数据。
            </summary>
            <param name="dragonBonesName">- DragonBonesData 实例的缓存名称。</param>
            <param name="armatureName">- 骨架数据名称。</param>
            <param name="slotName">- 插槽数据名称。</param>
            <param name="displayName">- 显示对象数据名称。</param>
            <param name="slot">- 插槽。</param>
            <param name="displayIndex">- 被替换的显示对象数据的索引。 （如果未设置，则替换当前的显示对象数据）</param>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                let slot = armature.getSlot("weapon");
                factory.replaceSlotDisplay("dragonBonesName", "armatureName", "slotName", "displayName", slot);
            </pre>
            </example>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.ReplaceSlotDisplayList(System.String,System.String,System.String,DragonBones.Slot)">
            <private/>
        </member>
        <!-- 对于成员“M:DragonBones.BaseFactory.ReplaceSkin(DragonBones.Armature,DragonBones.SkinData,System.Boolean,System.Collections.Generic.List{System.String})”忽略有格式错误的 XML 注释 -->
        <member name="M:DragonBones.BaseFactory.ReplaceAnimation(DragonBones.Armature,DragonBones.ArmatureData,System.Boolean)">
            <summary>
            - Replaces the existing animation data for a specific armature with the animation data for the specific armature data.
            This enables you to make a armature template so that other armature without animations can share it's animations.
            </summary>
            <param name="armature">- The armtaure.</param>
            <param name="armatureData">- The armature data.</param>
            <param name="isOverride">- Whether to completely overwrite the original animation. (Default: false)</param>
            <example>
            TypeScript style, for reference only.
            <pre>
                let armatureA = factory.buildArmature("armatureA", "dragonBonesA");
                let armatureDataB = factory.getArmatureData("armatureB", "dragonBonesB");
                if (armatureDataB) {
                factory.replaceAnimation(armatureA, armatureDataB);
                }
            </pre>
            </example>
            <see cref="!:DragonBones.Armature"/>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 5.6</version>
            <language>en_US</language>
            <summary>
            - 用特定骨架数据的动画数据替换特定骨架现有的动画数据。
            这样就能实现制作一个骨架动画模板，让其他没有制作动画的骨架共享该动画。
            </summary>
            <param name="armature">- 骨架。</param>
            <param name="armatureData">- 骨架数据。</param>
            <param name="isOverride">- 是否完全覆盖原来的动画。（默认: false）</param>
            <example>
            TypeScript 风格，仅供参考。
            <pre>
                let armatureA = factory.buildArmature("armatureA", "dragonBonesA");
                let armatureDataB = factory.getArmatureData("armatureB", "dragonBonesB");
                if (armatureDataB) {
                factory.replaceAnimation(armatureA, armatureDataB);
                }
            </pre>
            </example>
            <see cref="!:DragonBones.Armature"/>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 5.6</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.GetAllDragonBonesData">
            <private/>
        </member>
        <member name="M:DragonBones.BaseFactory.GetAllTextureAtlasData">
            <private/>
        </member>
        <member name="P:DragonBones.BaseFactory.clock">
            <summary>
            - An Worldclock instance updated by engine.
            </summary>
            <version>DragonBones 5.7</version>
            <language>en_US</language>
            <summary>
            - 由引擎驱动的 WorldClock 实例。
            </summary>
            <version>DragonBones 5.7</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BaseFactory.ChangeSkin(DragonBones.Armature,DragonBones.SkinData,System.Collections.Generic.List{System.String})">
            <summary>
            - Deprecated, please refer to {@link #replaceSkin}.
            </summary>
            <language>en_US</language>
            <summary>
            - 已废弃，请参考 {@link #replaceSkin}。
            </summary>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.ColorTransform">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.Matrix">
            <summary>
            - 2D Transform matrix.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 2D 转换矩阵。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Matrix.a">
            <summary>
            - The value that affects the positioning of pixels along the x axis when scaling or rotating an image.
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 缩放或旋转图像时影响像素沿 x 轴定位的值。
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Matrix.b">
            <summary>
            - The value that affects the positioning of pixels along the y axis when rotating or skewing an image.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 旋转或倾斜图像时影响像素沿 y 轴定位的值。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Matrix.c">
            <summary>
            - The value that affects the positioning of pixels along the x axis when rotating or skewing an image.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 旋转或倾斜图像时影响像素沿 x 轴定位的值。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Matrix.d">
            <summary>
            - The value that affects the positioning of pixels along the y axis when scaling or rotating an image.
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 缩放或旋转图像时影响像素沿 y 轴定位的值。
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Matrix.tx">
            <summary>
            - The distance by which to translate each point along the x axis.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 沿 x 轴平移每个点的距离。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Matrix.ty">
            <summary>
            - The distance by which to translate each point along the y axis.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 沿 y 轴平移每个点的距离。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Matrix.#ctor">
            <private/>
        </member>
        <member name="M:DragonBones.Matrix.CopyFrom(DragonBones.Matrix)">
            <private/>
        </member>
        <member name="M:DragonBones.Matrix.CopyFromArray(System.Collections.Generic.List{System.Single},System.Int32)">
            <private/>
        </member>
        <member name="M:DragonBones.Matrix.Identity">
            <summary>
            - Convert to unit matrix.
            The resulting matrix has the following properties: a=1, b=0, c=0, d=1, tx=0, ty=0.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 转换为单位矩阵。
            该矩阵具有以下属性：a=1、b=0、c=0、d=1、tx=0、ty=0。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Matrix.Concat(DragonBones.Matrix)">
            <summary>
            - Multiplies the current matrix with another matrix.
            </summary>
            <param name="value">- The matrix that needs to be multiplied.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 将当前矩阵与另一个矩阵相乘。
            </summary>
            <param name="value">- 需要相乘的矩阵。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Matrix.Invert">
            <summary>
            - Convert to inverse matrix.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 转换为逆矩阵。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Matrix.TransformPoint(System.Single,System.Single,DragonBones.Point,System.Boolean)">
            <summary>
            - Apply a matrix transformation to a specific point.
            </summary>
            <param name="x">- X coordinate.</param>
            <param name="y">- Y coordinate.</param>
            <param name="result">- The point after the transformation is applied.</param>
            <param name="delta">- Whether to ignore tx, ty's conversion to point.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 将矩阵转换应用于特定点。
            </summary>
            <param name="x">- 横坐标。</param>
            <param name="y">- 纵坐标。</param>
            <param name="result">- 应用转换之后的点。</param>
            <param name="delta">- 是否忽略 tx，ty 对点的转换。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Matrix.TransformRectangle(DragonBones.Rectangle,System.Boolean)">
            <private/>
        </member>
        <member name="T:DragonBones.Point">
            <summary>
            - The Point object represents a location in a two-dimensional coordinate system.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - Point 对象表示二维坐标系统中的某个位置。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Point.x">
            <summary>
            - The horizontal coordinate.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 该点的水平坐标。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Point.y">
            <summary>
            - The vertical coordinate.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 该点的垂直坐标。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Point.#ctor">
            <summary>
            - Creates a new point. If you pass no parameters to this method, a point is created at (0,0).
            </summary>
            <param name="x">- The horizontal coordinate.</param>
            <param name="y">- The vertical coordinate.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 创建一个 egret.Point 对象.若不传入任何参数，将会创建一个位于（0，0）位置的点。
            </summary>
            <param name="x">- 该对象的x属性值，默认为 0.0。</param>
            <param name="y">- 该对象的y属性值，默认为 0.0。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Point.CopyFrom(DragonBones.Point)">
            <private/>
        </member>
        <member name="M:DragonBones.Point.Clear">
            <private/>
        </member>
        <member name="T:DragonBones.Rectangle">
            <summary>
            - A Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its
            width and its height.<br/>
            The x, y, width, and height properties of the Rectangle class are independent of each other; changing the value of
            one property has no effect on the others. However, the right and bottom properties are integrally related to those
            four properties. For example, if you change the value of the right property, the value of the width property changes;
            if you change the bottom property, the value of the height property changes.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - Rectangle 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。<br/>
            Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。
            但是，right 和 bottom 属性与这四个属性是整体相关的。例如，如果更改 right 属性的值，则 width
            属性的值将发生变化；如果更改 bottom 属性，则 height 属性的值将发生变化。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Rectangle.x">
            <summary>
            - The x coordinate of the top-left corner of the rectangle.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 矩形左上角的 x 坐标。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Rectangle.y">
            <summary>
            - The y coordinate of the top-left corner of the rectangle.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 矩形左上角的 y 坐标。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Rectangle.width">
            <summary>
            - The width of the rectangle, in pixels.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 矩形的宽度（以像素为单位）。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Rectangle.height">
            <summary>
            - 矩形的高度（以像素为单位）。
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - The height of the rectangle, in pixels.
            </summary>
            <default>0.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Rectangle.#ctor">
            <private/>
        </member>
        <member name="M:DragonBones.Rectangle.CopyFrom(DragonBones.Rectangle)">
            <private/>
        </member>
        <member name="M:DragonBones.Rectangle.Clear">
            <private/>
        </member>
        <member name="T:DragonBones.Transform">
            <summary>
            - 2D Transform.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 2D 变换。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Transform.PI">
            <private/>
        </member>
        <member name="F:DragonBones.Transform.PI_D">
            <private/>
        </member>
        <member name="F:DragonBones.Transform.PI_H">
            <private/>
        </member>
        <member name="F:DragonBones.Transform.PI_Q">
            <private/>
        </member>
        <member name="F:DragonBones.Transform.RAD_DEG">
            <private/>
        </member>
        <member name="F:DragonBones.Transform.DEG_RAD">
            <private/>
        </member>
        <member name="M:DragonBones.Transform.NormalizeRadian(System.Single)">
            <private/>
        </member>
        <member name="F:DragonBones.Transform.x">
            <summary>
            - Horizontal translate.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 水平位移。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Transform.y">
            <summary>
            - Vertical translate.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 垂直位移。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Transform.skew">
            <summary>
            - Skew. (In radians)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 倾斜。 （以弧度为单位）
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Transform.rotation">
            <summary>
            - rotation. (In radians)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 旋转。 （以弧度为单位）
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Transform.scaleX">
            <summary>
            - Horizontal Scaling.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 水平缩放。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.Transform.scaleY">
            <summary>
            - Vertical scaling.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 垂直缩放。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.Transform.#ctor">
            <private/>
        </member>
        <member name="M:DragonBones.Transform.CopyFrom(DragonBones.Transform)">
            <private/>
        </member>
        <member name="M:DragonBones.Transform.Identity">
            <private/>
        </member>
        <member name="M:DragonBones.Transform.Add(DragonBones.Transform)">
            <private/>
        </member>
        <member name="M:DragonBones.Transform.Minus(DragonBones.Transform)">
            <private/>
        </member>
        <member name="M:DragonBones.Transform.FromMatrix(DragonBones.Matrix)">
            <private/>
        </member>
        <member name="M:DragonBones.Transform.ToMatrix(DragonBones.Matrix)">
            <private/>
        </member>
        <member name="T:DragonBones.AnimationConfig">
            <summary>
            - The animation config is used to describe all the information needed to play an animation state.
            The API is still in the experimental phase and may encounter bugs or stability or compatibility issues when used.
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <beta/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画配置用来描述播放一个动画状态所需要的全部信息。
            该 API 仍在实验阶段，使用时可能遭遇 bug 或稳定性或兼容性问题。
            </summary>
            <see cref="!:DragonBones.AnimationState"/>
            <beta/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.pauseFadeOut">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationConfig.fadeOutMode">
            <summary>
            - Fade out the pattern of other animation states when the animation state is fade in.
            This property is typically used to specify the substitution of multiple animation states blend.
            </summary>
            <default>dragonBones.AnimationFadeOutMode.All</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 淡入动画状态时淡出其他动画状态的模式。
            该属性通常用来指定多个动画状态混合时的相互替换关系。
            </summary>
            <default>dragonBones.AnimationFadeOutMode.All</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.fadeOutTweenType">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationConfig.fadeOutTime">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationConfig.pauseFadeIn">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationConfig.actionEnabled">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationConfig.additiveBlending">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationConfig.displayControl">
            <summary>
            - Whether the animation state has control over the display property of the slots.
            Sometimes blend a animation state does not want it to control the display properties of the slots,
            especially if other animation state are controlling the display properties of the slots.
            </summary>
            <default>true</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画状态是否对插槽的显示对象属性有控制权。
            有时混合一个动画状态并不希望其控制插槽的显示对象属性，
            尤其是其他动画状态正在控制这些插槽的显示对象属性时。
            </summary>
            <default>true</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.resetToPose">
            <summary>
            - Whether to reset the objects without animation to the armature pose when the animation state is start to play.
            This property should usually be set to false when blend multiple animation states.
            </summary>
            <default>true</default>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 开始播放动画状态时是否将没有动画的对象重置为骨架初始值。
            通常在混合多个动画状态时应该将该属性设置为 false。
            </summary>
            <default>true</default>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.fadeInTweenType">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationConfig.playTimes">
            <summary>
            - The play times. [0: Loop play, [1~N]: Play N times]
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 播放次数。 [0: 无限循环播放, [1~N]: 循环播放 N 次]
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.layer">
            <summary>
            - The blend layer.
            High layer animation state will get the blend weight first.
            When the blend weight is assigned more than 1, the remaining animation states will no longer get the weight assigned.
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 混合图层。
            图层高的动画状态会优先获取混合权重。
            当混合权重分配超过 1 时，剩余的动画状态将不再获得权重分配。
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.position">
            <summary>
            - The start time of play. (In seconds)
            </summary>
            <default>0.0</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 播放的开始时间。 （以秒为单位）
            </summary>
            <default>0.0</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.duration">
            <summary>
            - The duration of play.
            [-1: Use the default value of the animation data, 0: Stop play, (0~N]: The duration] (In seconds)
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 播放的持续时间。
            [-1: 使用动画数据默认值, 0: 动画停止, (0~N]: 持续时间] （以秒为单位）
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.timeScale">
            <summary>
            - The play speed.
            The value is an overlay relationship with {@link dragonBones.Animation#timeScale}.
            [(-N~0): Reverse play, 0: Stop play, (0~1): Slow play, 1: Normal play, (1~N): Fast play]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 播放速度。
            该值与 {@link dragonBones.Animation#timeScale} 是叠加关系。
            [(-N~0): 倒转播放, 0: 停止播放, (0~1): 慢速播放, 1: 正常播放, (1~N): 快速播放]
            </summary>
            <default>1.0</default>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.weight">
            <summary>
            - The blend weight.
            </summary>
            <default>1.0</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 混合权重。
            </summary>
            <default>1.0</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.fadeInTime">
            <summary>
            - The fade in time.
            [-1: Use the default value of the animation data, [0~N]: The fade in time] (In seconds)
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 淡入时间。
            [-1: 使用动画数据默认值, [0~N]: 淡入时间] （以秒为单位）
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.autoFadeOutTime">
            <summary>
            - The auto fade out time when the animation state play completed.
            [-1: Do not fade out automatically, [0~N]: The fade out time] (In seconds)
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画状态播放完成后的自动淡出时间。
            [-1: 不自动淡出, [0~N]: 淡出时间] （以秒为单位）
            </summary>
            <default>-1.0</default>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.name">
            <summary>
            - The name of the animation state. (Can be different from the name of the animation data)
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画状态名称。 （可以不同于动画数据）
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.animation">
            <summary>
            - The animation data name.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 动画数据名称。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.group">
            <summary>
            - The blend group name of the animation state.
            This property is typically used to specify the substitution of multiple animation states blend.
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 混合组名称。
            该属性通常用来指定多个动画状态混合时的相互替换关系。
            </summary>
            <readonly/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationConfig.boneMask">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationConfig._OnClear">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationConfig.Clear">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationConfig.CopyFrom(DragonBones.AnimationConfig)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationConfig.ContainsBoneMask(System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationConfig.AddBoneMask(DragonBones.Armature,System.String,System.Boolean)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationConfig.RemoveBoneMask(DragonBones.Armature,System.String,System.Boolean)">
            <private/>
        </member>
        <member name="T:DragonBones.AnimationData">
            <summary>
            - The animation data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationData.frameIntOffset">
            <summary>
            - FrameIntArray.
            </summary>
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.frameFloatOffset">
            <summary>
            - FrameFloatArray.
            </summary>
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.frameOffset">
            <summary>
            - FrameArray.
            </summary>
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.frameCount">
            <summary>
            - The frame count of the animation.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画的帧数。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationData.playTimes">
            <summary>
            - The play times of the animation. [0: Loop play, [1~N]: Play N times]
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画的播放次数。 [0: 无限循环播放, [1~N]: 循环播放 N 次]
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationData.duration">
            <summary>
            - The duration of the animation. (In seconds)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画的持续时间。 （以秒为单位）
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationData.scale">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.fadeInTime">
            <summary>
            - The fade in time of the animation. (In seconds)
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画的淡入时间。 （以秒为单位）
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationData.cacheFrameRate">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.name">
            <summary>
            - The animation name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.AnimationData.cachedFrames">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.boneTimelines">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.slotTimelines">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.constraintTimelines">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.boneCachedFrameIndices">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.slotCachedFrameIndices">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.actionTimeline">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.zOrderTimeline">
            <private/>
        </member>
        <member name="F:DragonBones.AnimationData.parent">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.AnimationData.CacheFrames(System.Single)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.AddBoneTimeline(DragonBones.BoneData,DragonBones.TimelineData)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.AddSlotTimeline(DragonBones.SlotData,DragonBones.TimelineData)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.AddConstraintTimeline(DragonBones.ConstraintData,DragonBones.TimelineData)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.GetBoneTimelines(System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.GetSlotTimelines(System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.GetConstraintTimelines(System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.GetBoneCachedFrameIndices(System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.AnimationData.GetSlotCachedFrameIndices(System.String)">
            <private/>
        </member>
        <member name="T:DragonBones.TimelineData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ArmatureData">
            <summary>
            - The armature data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨架数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.ArmatureData.type">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.frameRate">
            <summary>
            - The animation frame rate.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画帧率。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.ArmatureData.cacheFrameRate">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.scale">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.name">
            <summary>
            - The armature name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨架名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.ArmatureData.aabb">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.animationNames">
            <summary>
            - The names of all the animation data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 所有的动画数据名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.ArmatureData.sortedBones">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.sortedSlots">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.defaultActions">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.actions">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.bones">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.slots">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.constraints">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.skins">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.animations">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.defaultSkin">
            <summary>
            - The default skin data.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 默认插槽数据。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.ArmatureData.defaultAnimation">
            <summary>
            - The default animation data.
            </summary>
            <version>DragonBones 4.5</version>
            <language>en_US</language>
            <summary>
            - 默认动画数据。
            </summary>
            <version>DragonBones 4.5</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.ArmatureData.canvas">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.userData">
            <private/>
        </member>
        <member name="F:DragonBones.ArmatureData.parent">
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.ArmatureData.SortBones">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.CacheFrames(System.UInt32)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.SetCacheFrame(DragonBones.Matrix,DragonBones.Transform)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.GetCacheFrame(DragonBones.Matrix,DragonBones.Transform,System.Int32)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.AddBone(DragonBones.BoneData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.AddSlot(DragonBones.SlotData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.AddConstraint(DragonBones.ConstraintData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.AddSkin(DragonBones.SkinData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.AddAnimation(DragonBones.AnimationData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.AddAction(DragonBones.ActionData,System.Boolean)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.GetBone(System.String)">
            <summary>
            - Get a specific done data.
            </summary>
            <param name="boneName">- The bone name.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的骨骼数据。
            </summary>
            <param name="boneName">- 骨骼名称。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.ArmatureData.GetSlot(System.String)">
            <summary>
            - Get a specific slot data.
            </summary>
            <param name="slotName">- The slot name.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的插槽数据。
            </summary>
            <param name="slotName">- 插槽名称。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.ArmatureData.GetConstraint(System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.GetSkin(System.String)">
            <summary>
            - Get a specific skin data.
            </summary>
            <param name="skinName">- The skin name.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定皮肤数据。
            </summary>
            <param name="skinName">- 皮肤名称。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.ArmatureData.GetMesh(System.String,System.String,System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureData.GetAnimation(System.String)">
            <summary>
            - Get a specific animation data.
            </summary>
            <param name="animationName">- The animation animationName.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的动画数据。
            </summary>
            <param name="animationName">- 动画名称。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.BoneData">
            <summary>
            - The bone data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨骼数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.BoneData.inheritTranslation">
            <private/>
        </member>
        <member name="F:DragonBones.BoneData.inheritRotation">
            <private/>
        </member>
        <member name="F:DragonBones.BoneData.inheritScale">
            <private/>
        </member>
        <member name="F:DragonBones.BoneData.inheritReflection">
            <private/>
        </member>
        <member name="F:DragonBones.BoneData.length">
            <summary>
            - The bone length.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨骼长度。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.BoneData.name">
            <summary>
            - The bone name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 骨骼名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.BoneData.transform">
            <private/>
        </member>
        <member name="F:DragonBones.BoneData.userData">
            <private/>
        </member>
        <member name="F:DragonBones.BoneData.parent">
            <summary>
            - The parent bone data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 父骨骼数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BoneData._OnClear">
            <inheritDoc/>
        </member>
        <member name="T:DragonBones.SurfaceData">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.SurfaceData._OnClear">
            <inheritDoc/>
        </member>
        <member name="T:DragonBones.SlotData">
            <summary>
            - The slot data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 插槽数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.SlotData.DEFAULT_COLOR">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.SlotData.CreateColor">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.SlotData.blendMode">
            <private/>
        </member>
        <member name="F:DragonBones.SlotData.displayIndex">
            <private/>
        </member>
        <member name="F:DragonBones.SlotData.zOrder">
            <private/>
        </member>
        <member name="F:DragonBones.SlotData.name">
            <summary>
            - The slot name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 插槽名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.SlotData.color">
            <private/>
        </member>
        <member name="F:DragonBones.SlotData.userData">
            <private/>
        </member>
        <member name="F:DragonBones.SlotData.parent">
            <summary>
            - The parent bone data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 父骨骼数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.SlotData._OnClear">
            <inheritDoc/>
        </member>
        <member name="T:DragonBones.BoundingBoxData">
            <summary>
            - The base class of bounding box data.
            </summary>
            <see cref="!:DragonBones.RectangleData"/>
            <see cref="!:DragonBones.EllipseData"/>
            <see cref="!:DragonBones.PolygonData"/>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 边界框数据基类。
            </summary>
            <see cref="!:DragonBones.RectangleData"/>
            <see cref="!:DragonBones.EllipseData"/>
            <see cref="!:DragonBones.PolygonData"/>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.BoundingBoxData.type">
            <summary>
            - The bounding box type.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 边界框类型。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.BoundingBoxData.color">
            <private/>
        </member>
        <member name="F:DragonBones.BoundingBoxData.width">
            <private/>
        </member>
        <member name="F:DragonBones.BoundingBoxData.height">
            <private/>
        </member>
        <member name="M:DragonBones.BoundingBoxData._OnClear">
            <private/>
        </member>
        <member name="M:DragonBones.BoundingBoxData.ContainsPoint(System.Single,System.Single)">
            <summary>
            - Check whether the bounding box contains a specific point. (Local coordinate system)
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 检查边界框是否包含特定点。（本地坐标系）
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.BoundingBoxData.IntersectsSegment(System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <summary>
            - Check whether the bounding box intersects a specific segment. (Local coordinate system)
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 检查边界框是否与特定线段相交。（本地坐标系）
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.OutCode">
            <summary>
            - Cohen–Sutherland algorithm https://en.wikipedia.org/wiki/Cohen%E2%80%93Sutherland_algorithm
            ----------------------
            | 0101 | 0100 | 0110 |
            ----------------------
            | 0001 | 0000 | 0010 |
            ----------------------
            | 1001 | 1000 | 1010 |
            ----------------------
            </summary>
        </member>
        <member name="T:DragonBones.RectangleBoundingBoxData">
            <summary>
            - The rectangle bounding box data.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 矩形边界框数据。
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.RectangleBoundingBoxData._ComputeOutCode(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            - Compute the bit code for a point (x, y) using the clip rectangle
            </summary>
        </member>
        <member name="M:DragonBones.RectangleBoundingBoxData.RectangleIntersectsSegment(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <private/>
        </member>
        <member name="M:DragonBones.RectangleBoundingBoxData._OnClear">
            <inheritDoc/>
            <private/>
        </member>
        <member name="M:DragonBones.RectangleBoundingBoxData.ContainsPoint(System.Single,System.Single)">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.RectangleBoundingBoxData.IntersectsSegment(System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <inheritDoc/>
        </member>
        <member name="T:DragonBones.EllipseBoundingBoxData">
            <summary>
            - The ellipse bounding box data.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 椭圆边界框数据。
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.EllipseBoundingBoxData.EllipseIntersectsSegment(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <private/>
        </member>
        <member name="M:DragonBones.EllipseBoundingBoxData._OnClear">
            <inheritDoc/>
            <private/>
        </member>
        <member name="M:DragonBones.EllipseBoundingBoxData.ContainsPoint(System.Single,System.Single)">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.EllipseBoundingBoxData.IntersectsSegment(System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <inheritDoc/>
        </member>
        <member name="T:DragonBones.PolygonBoundingBoxData">
            <summary>
            - The polygon bounding box data.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 多边形边界框数据。
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.PolygonBoundingBoxData.PolygonIntersectsSegment(System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.List{System.Single},DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <private/>
        </member>
        <member name="F:DragonBones.PolygonBoundingBoxData.x">
            <private/>
        </member>
        <member name="F:DragonBones.PolygonBoundingBoxData.y">
            <private/>
        </member>
        <member name="F:DragonBones.PolygonBoundingBoxData.vertices">
            <summary>
            - The polygon vertices.
            </summary>
            <version>DragonBones 5.1</version>
            <language>en_US</language>
            <summary>
            - 多边形顶点。
            </summary>
            <version>DragonBones 5.1</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.PolygonBoundingBoxData._OnClear">
            <inheritDoc/>
            <private/>
        </member>
        <member name="M:DragonBones.PolygonBoundingBoxData.ContainsPoint(System.Single,System.Single)">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.PolygonBoundingBoxData.IntersectsSegment(System.Single,System.Single,System.Single,System.Single,DragonBones.Point,DragonBones.Point,DragonBones.Point)">
            <inheritDoc/>
        </member>
        <member name="T:DragonBones.CanvasData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ConstraintData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.IKConstraintData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.VerticesData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.DisplayData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ImageDisplayData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ArmatureDisplayData">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.ArmatureDisplayData.AddAction(DragonBones.ActionData)">
            <private/>
        </member>
        <member name="T:DragonBones.MeshDisplayData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BoundingBoxDisplayData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.PathDisplayData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.WeightData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.DragonBonesData">
            <summary>
            - The DragonBones data.
            A DragonBones data contains multiple armature data.
            </summary>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 龙骨数据。
            一个龙骨数据包含多个骨架数据。
            </summary>
            <see cref="!:DragonBones.ArmatureData"/>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.DragonBonesData.autoSearch">
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.frameRate">
            <summary>
            - The animation frame rate.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 动画帧频。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.DragonBonesData.version">
            <summary>
            - The data version.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 数据版本。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.DragonBonesData.name">
            <summary>
            - The DragonBones data name.
            The name is consistent with the DragonBones project name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 龙骨数据名称。
            该名称与龙骨项目名保持一致。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.DragonBonesData.stage">
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.frameIndices">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.cachedFrames">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.armatureNames">
            <summary>
            - All armature data names.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 所有的骨架数据名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.DragonBonesData.armatures">
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.binary">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.intArray">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.floatArray">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.frameIntArray">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.frameFloatArray">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.frameArray">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.timelineArray">
            <internal/>
            <private/>
        </member>
        <member name="F:DragonBones.DragonBonesData.userData">
            <private/>
        </member>
        <member name="M:DragonBones.DragonBonesData._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.DragonBonesData.AddArmature(DragonBones.ArmatureData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.DragonBonesData.GetArmature(System.String)">
            <summary>
            - Get a specific armature data.
            </summary>
            <param name="armatureName">- The armature data name.</param>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 获取特定的骨架数据。
            </summary>
            <param name="armatureName">- 骨架数据名称。</param>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.SkinData">
            <summary>
            - The skin data, typically a armature data instance contains at least one skinData.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 皮肤数据，通常一个骨架数据至少包含一个皮肤数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.SkinData.name">
            <summary>
            - The skin name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 皮肤名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.SkinData.displays">
            <private/>
        </member>
        <member name="F:DragonBones.SkinData.parent">
            <private/>
        </member>
        <member name="M:DragonBones.SkinData._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.SkinData.AddDisplay(System.String,DragonBones.DisplayData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.SkinData.GetDisplay(System.String,System.String)">
            <private/>
        </member>
        <member name="M:DragonBones.SkinData.GetDisplays(System.String)">
            <private/>
        </member>
        <member name="T:DragonBones.TextureAtlasData">
            <summary>
            - The texture atlas data.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 贴图集数据。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.TextureAtlasData.autoSearch">
            <private/>
        </member>
        <member name="F:DragonBones.TextureAtlasData.width">
            <private/>
        </member>
        <member name="F:DragonBones.TextureAtlasData.height">
            <private/>
        </member>
        <member name="F:DragonBones.TextureAtlasData.scale">
            <private/>
        </member>
        <member name="F:DragonBones.TextureAtlasData.name">
            <summary>
            - The texture atlas name.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 贴图集名称。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.TextureAtlasData.imagePath">
            <summary>
            - The image path of the texture atlas.
            </summary>
            <version>DragonBones 3.0</version>
            <language>en_US</language>
            <summary>
            - 贴图集图片路径。
            </summary>
            <version>DragonBones 3.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.TextureAtlasData.textures">
            <private/>
        </member>
        <member name="M:DragonBones.TextureAtlasData._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.TextureAtlasData.CopyFrom(DragonBones.TextureAtlasData)">
            <private/>
        </member>
        <member name="M:DragonBones.TextureAtlasData.CreateTexture">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.TextureAtlasData.AddTexture(DragonBones.TextureData)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.TextureAtlasData.GetTexture(System.String)">
            <private/>
        </member>
        <member name="T:DragonBones.TextureData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.UserData">
            <summary>
            - The user custom data.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 用户自定义数据。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.UserData.ints">
            <summary>
            - The custom int numbers.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 自定义整数。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.UserData.floats">
            <summary>
            - The custom float numbers.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 自定义浮点数。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="F:DragonBones.UserData.strings">
            <summary>
            - The custom strings.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 自定义字符串。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.UserData._OnClear">
            <inheritDoc/>
        </member>
        <member name="M:DragonBones.UserData.AddInt(System.Int32)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.UserData.AddFloat(System.Single)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.UserData.AddString(System.String)">
            <internal/>
            <private/>
        </member>
        <member name="M:DragonBones.UserData.GetInt(System.Int32)">
            <summary>
            - Get the custom int number.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 获取自定义整数。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.UserData.GetFloat(System.Int32)">
            <summary>
            - Get the custom float number.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 获取自定义浮点数。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="M:DragonBones.UserData.GetString(System.Int32)">
            <summary>
            - Get the custom string.
            </summary>
            <version>DragonBones 5.0</version>
            <language>en_US</language>
            <summary>
            - 获取自定义字符串。
            </summary>
            <version>DragonBones 5.0</version>
            <language>zh_CN</language>
        </member>
        <member name="T:DragonBones.ActionData">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.BinaryDataParser">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.DataParser">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ObjectDataParser">
            <internal/>
            <private/>
        </member>
        <member name="T:DragonBones.ActionFrame">
            <internal/>
            <private/>
        </member>
        <member name="T:MiniJSON.Json">
             <summary>
             This class encodes and decodes JSON strings.
             Spec. details, see http://www.json.org/
            
             JSON uses Arrays and Objects. These correspond here to the datatypes IList and IDictionary.
             All numbers are parsed to doubles.
             </summary>
        </member>
        <member name="M:MiniJSON.Json.Deserialize(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An List&lt;object&gt;, a Dictionary&lt;string, object&gt;, a double, an integer,a string, null, true, or false</returns>
        </member>
        <member name="M:MiniJSON.Json.Serialize(System.Object)">
            <summary>
            Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string
            </summary>
            <param name="json">A Dictionary&lt;string, object&gt; / List&lt;object&gt;</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="T:FarseerPhysics.Collision.ContactFeature">
            <summary>
            The features that intersect to form the contact point
            This must be 4 bytes or less.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ContactFeature.IndexA">
            <summary>
            Feature index on ShapeA
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ContactFeature.IndexB">
            <summary>
            Feature index on ShapeB
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ContactFeature.TypeA">
            <summary>
            The feature type on ShapeA
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ContactFeature.TypeB">
            <summary>
            The feature type on ShapeB
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.ContactID">
            <summary>
            Contact ids to facilitate warm starting.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ContactID.Features">
            <summary>
            The features that intersect to form the contact point
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ContactID.Key">
            <summary>
            Used to quickly compare contact ids.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.ManifoldPoint">
            <summary>
            A manifold point is a contact point belonging to a contact
            manifold. It holds details related to the geometry and dynamics
            of the contact points.
            The local point usage depends on the manifold type:
            -ShapeType.Circles: the local center of circleB
            -SeparationFunction.FaceA: the local center of cirlceB or the clip point of polygonB
            -SeparationFunction.FaceB: the clip point of polygonA
            This structure is stored across time steps, so we keep it small.
            Note: the impulses are used for internal caching and may not
            provide reliable contact forces, especially for high speed collisions.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ManifoldPoint.Id">
            <summary>
            Uniquely identifies a contact point between two Shapes
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ManifoldPoint.LocalPoint">
            <summary>
            Usage depends on manifold type
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ManifoldPoint.NormalImpulse">
            <summary>
            The non-penetration impulse
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.ManifoldPoint.TangentImpulse">
            <summary>
            The friction impulse
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.Manifold">
            <summary>
            A manifold for two touching convex Shapes.
            Box2D supports multiple types of contact:
            - Clip point versus plane with radius
            - Point versus point with radius (circles)
            The local point usage depends on the manifold type:
            - ShapeType.Circles: the local center of circleA
            - SeparationFunction.FaceA: the center of faceA
            - SeparationFunction.FaceB: the center of faceB
            Similarly the local normal usage:
            - ShapeType.Circles: not used
            - SeparationFunction.FaceA: the normal on polygonA
            - SeparationFunction.FaceB: the normal on polygonB
            We store contacts in this way so that position correction can
            account for movement, which is critical for continuous physics.
            All contact scenarios must be expressed in one of these types.
            This structure is stored across time steps, so we keep it small.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Manifold.LocalNormal">
            <summary>
            Not use for Type.SeparationFunction.Points
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Manifold.LocalPoint">
            <summary>
            Usage depends on manifold type
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Manifold.PointCount">
            <summary>
            The number of manifold points
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Manifold.Points">
            <summary>
            The points of contact
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.PointState">
            <summary>
            This is used for determining the state of contact points.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.PointState.Null">
            <summary>
            Point does not exist
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.PointState.Add">
            <summary>
            Point was added in the update
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.PointState.Persist">
            <summary>
            Point persisted across the update
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.PointState.Remove">
            <summary>
            Point was removed in the update
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.ClipVertex">
            <summary>
            Used for computing contact manifolds.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.RayCastInput">
            <summary>
            Ray-cast input data.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.RayCastInput.MaxFraction">
            <summary>
            The ray extends from p1 to p1 + maxFraction * (p2 - p1).
            If you supply a max fraction of 1, the ray extends from p1 to p2.
            A max fraction of 0.5 makes the ray go from p1 and half way to p2.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.RayCastInput.Point1">
            <summary>
            The starting point of the ray.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.RayCastInput.Point2">
            <summary>
            The ending point of the ray.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.RayCastOutput">
            <summary>
            Ray-cast output data. 
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.RayCastOutput.Fraction">
            <summary>
            The ray hits at p1 + fraction * (p2 - p1), where p1 and p2 come from RayCastInput.
            Contains the actual fraction of the ray where it has the intersection point.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.RayCastOutput.Normal">
            <summary>
            The normal of the face of the shape the ray has hit.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.AABB">
            <summary>
            An axis aligned bounding box.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.AABB.LowerBound">
            <summary>
            The lower vertex
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.AABB.UpperBound">
            <summary>
            The upper vertex
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Center">
            <summary>
            Get the center of the AABB.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Extents">
            <summary>
            Get the extents of the AABB (half-widths).
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Perimeter">
            <summary>
            Get the perimeter length
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Vertices">
            <summary>
            Gets the vertices of the AABB.
            </summary>
            <value>The corners of the AABB</value>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Q1">
            <summary>
            First quadrant
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Q2">
            <summary>
            Second quadrant
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Q3">
            <summary>
            Third quadrant
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.AABB.Q4">
            <summary>
            Forth quadrant
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.AABB.IsValid">
            <summary>
            Verify that the bounds are sorted. And the bounds are valid numbers (not NaN).
            </summary>
            <returns>
            	<c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Collision.AABB.Combine(FarseerPhysics.Collision.AABB@)">
            <summary>
            Combine an AABB into this one.
            </summary>
            <param name="aabb">The aabb.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.AABB.Combine(FarseerPhysics.Collision.AABB@,FarseerPhysics.Collision.AABB@)">
            <summary>
            Combine two AABBs into this one.
            </summary>
            <param name="aabb1">The aabb1.</param>
            <param name="aabb2">The aabb2.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.AABB.Contains(FarseerPhysics.Collision.AABB@)">
            <summary>
            Does this aabb contain the provided AABB.
            </summary>
            <param name="aabb">The aabb.</param>
            <returns>
            	<c>true</c> if it contains the specified aabb; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Collision.AABB.Contains(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Determines whether the AAABB contains the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns>
            	<c>true</c> if it contains the specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Collision.AABB.TestOverlap(FarseerPhysics.Collision.AABB@,FarseerPhysics.Collision.AABB@)">
            <summary>
            Test if the two AABBs overlap.
            </summary>
            <param name="a">The first AABB.</param>
            <param name="b">The second AABB.</param>
            <returns>True if they are overlapping.</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.AABB.RayCast(FarseerPhysics.Collision.RayCastOutput@,FarseerPhysics.Collision.RayCastInput@,System.Boolean)">
            <summary>
            Raycast against this AABB using the specificed points and maxfraction (found in input)
            </summary>
            <param name="output">The results of the raycast.</param>
            <param name="input">The parameters for the raycast.</param>
            <returns>True if the ray intersects the AABB</returns>
        </member>
        <member name="T:FarseerPhysics.Collision.TempPolygon">
            <summary>
            This holds polygon B expressed in frame A.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.EPAxis">
            <summary>
            This structure is used to keep track of the best separating axis.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.ReferenceFace">
            <summary>
            Reference face used for clipping
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.Collision">
            <summary>
            Collision methods
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.TestOverlap(FarseerPhysics.Collision.Shapes.Shape,System.Int32,FarseerPhysics.Collision.Shapes.Shape,System.Int32,FarseerPhysics.Common.Transform@,FarseerPhysics.Common.Transform@)">
            <summary>
            Test overlap between the two shapes.
            </summary>
            <param name="shapeA">The first shape.</param>
            <param name="indexA">The index for the first shape.</param>
            <param name="shapeB">The second shape.</param>
            <param name="indexB">The index for the second shape.</param>
            <param name="xfA">The transform for the first shape.</param>
            <param name="xfB">The transform for the seconds shape.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.CollideCircles(FarseerPhysics.Collision.Manifold@,FarseerPhysics.Collision.Shapes.CircleShape,FarseerPhysics.Common.Transform@,FarseerPhysics.Collision.Shapes.CircleShape,FarseerPhysics.Common.Transform@)">
            <summary>
            Compute the collision manifold between two circles.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.CollidePolygonAndCircle(FarseerPhysics.Collision.Manifold@,FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@,FarseerPhysics.Collision.Shapes.CircleShape,FarseerPhysics.Common.Transform@)">
            <summary>
            Compute the collision manifold between a polygon and a circle.
            </summary>
            <param name="manifold">The manifold.</param>
            <param name="polygonA">The polygon A.</param>
            <param name="xfA">The transform of A.</param>
            <param name="circleB">The circle B.</param>
            <param name="xfB">The transform of B.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.CollidePolygons(FarseerPhysics.Collision.Manifold@,FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@,FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@)">
            <summary>
            Compute the collision manifold between two polygons.
            </summary>
            <param name="manifold">The manifold.</param>
            <param name="polyA">The poly A.</param>
            <param name="transformA">The transform A.</param>
            <param name="polyB">The poly B.</param>
            <param name="transformB">The transform B.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.CollideEdgeAndCircle(FarseerPhysics.Collision.Manifold@,FarseerPhysics.Collision.Shapes.EdgeShape,FarseerPhysics.Common.Transform@,FarseerPhysics.Collision.Shapes.CircleShape,FarseerPhysics.Common.Transform@)">
            <summary>
            Compute contact points for edge versus circle.
            This accounts for edge connectivity.
            </summary>
            <param name="manifold">The manifold.</param>
            <param name="edgeA">The edge A.</param>
            <param name="transformA">The transform A.</param>
            <param name="circleB">The circle B.</param>
            <param name="transformB">The transform B.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.CollideEdgeAndPolygon(FarseerPhysics.Collision.Manifold@,FarseerPhysics.Collision.Shapes.EdgeShape,FarseerPhysics.Common.Transform@,FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@)">
            <summary>
            Collides and edge and a polygon, taking into account edge adjacency.
            </summary>
            <param name="manifold">The manifold.</param>
            <param name="edgeA">The edge A.</param>
            <param name="xfA">The xf A.</param>
            <param name="polygonB">The polygon B.</param>
            <param name="xfB">The xf B.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.ClipSegmentToLine(FarseerPhysics.Common.FixedArray2{FarseerPhysics.Collision.ClipVertex}@,FarseerPhysics.Common.FixedArray2{FarseerPhysics.Collision.ClipVertex}@,Microsoft.Xna.Framework.Vector2,System.Single,System.Int32)">
            <summary>
            Clipping for contact manifolds.
            </summary>
            <param name="vOut">The v out.</param>
            <param name="vIn">The v in.</param>
            <param name="normal">The normal.</param>
            <param name="offset">The offset.</param>
            <param name="vertexIndexA">The vertex index A.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.EdgeSeparation(FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@,System.Int32,FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@)">
            <summary>
            Find the separation between poly1 and poly2 for a give edge normal on poly1.
            </summary>
            <param name="poly1">The poly1.</param>
            <param name="xf1">The XF1.</param>
            <param name="edge1">The edge1.</param>
            <param name="poly2">The poly2.</param>
            <param name="xf2">The XF2.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Collision.FindMaxSeparation(System.Int32@,FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@,FarseerPhysics.Collision.Shapes.PolygonShape,FarseerPhysics.Common.Transform@)">
            <summary>
            Find the max separation between poly1 and poly2 using edge normals from poly1.
            </summary>
            <param name="edgeIndex">Index of the edge.</param>
            <param name="poly1">The poly1.</param>
            <param name="xf1">The XF1.</param>
            <param name="poly2">The poly2.</param>
            <param name="xf2">The XF2.</param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Collision.DistanceProxy">
            <summary>
            A distance proxy is used by the GJK algorithm.
            It encapsulates any shape.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.DistanceProxy.Set(FarseerPhysics.Collision.Shapes.Shape,System.Int32)">
            <summary>
            Initialize the proxy using the given shape. The shape
            must remain in scope while the proxy is in use.
            </summary>
            <param name="shape">The shape.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DistanceProxy.GetSupport(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Get the supporting vertex index in the given direction.
            </summary>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DistanceProxy.GetSupportVertex(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Get the supporting vertex in the given direction.
            </summary>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Collision.SimplexCache">
            <summary>
            Used to warm start ComputeDistance.
            Set count to zero on first call.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexCache.Count">
            <summary>
            Length or area
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexCache.IndexA">
            <summary>
            Vertices on shape A
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexCache.IndexB">
            <summary>
            Vertices on shape B
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.DistanceInput">
            <summary>
            Input for Distance.ComputeDistance().
            You have to option to use the shape radii in the computation. 
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.DistanceOutput">
            <summary>
            Output for Distance.ComputeDistance().
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.DistanceOutput.Iterations">
            <summary>
            Number of GJK iterations used
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.DistanceOutput.PointA">
            <summary>
            Closest point on shapeA
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.DistanceOutput.PointB">
            <summary>
            Closest point on shapeB
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexVertex.A">
            <summary>
            Barycentric coordinate for closest point 
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexVertex.IndexA">
            <summary>
            wA index
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexVertex.IndexB">
            <summary>
            wB index
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexVertex.W">
            <summary>
            wB - wA
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexVertex.WA">
            <summary>
            Support point in proxyA
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.SimplexVertex.WB">
            <summary>
            Support point in proxyB
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.Distance">
            <summary>
            The Gilbert–Johnson–Keerthi distance algorithm that provides the distance between shapes.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Distance.GJKCalls">
            <summary>
            The number of calls made to the ComputeDistance() function.
            Note: This is only activated when Settings.EnableDiagnostics = true
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Distance.GJKIters">
            <summary>
            The number of iterations that was made on the last call to ComputeDistance().
            Note: This is only activated when Settings.EnableDiagnostics = true
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Distance.GJKMaxIters">
            <summary>
            The maximum numer of iterations ever mae with calls to the CompteDistance() funtion.
            Note: This is only activated when Settings.EnableDiagnostics = true
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.TreeNode`1">
            <summary>
            A node in the dynamic tree. The Client does not interact with this directly.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.TreeNode`1.AABB">
            <summary>
            Enlarged AABB
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.DynamicTree`1">
             <summary>
             A dynamic tree arranges data in a binary tree to accelerate
             queries such as volume queries and ray casts. Leafs are proxies
             with an AABB. In the tree we expand the proxy AABB by Settings.b2_fatAABBFactor
             so that the proxy AABB is bigger than the Client object. This allows the Client
             object to move by small amounts without triggering a tree update.
            
             Nodes are pooled and relocatable, so we use node indices rather than pointers.
             </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.#ctor">
            <summary>
            Constructing the tree initializes the node pool.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.DynamicTree`1.Height">
            <summary>
            Compute the height of the binary tree in O(N) time. Should not be called often.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.DynamicTree`1.AreaRatio">
            <summary>
            Get the ratio of the sum of the node areas to the root area.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.DynamicTree`1.MaxBalance">
            <summary>
            Get the maximum balance of an node in the tree. The balance is the difference
            in height of the two children of a node.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.AddProxy(FarseerPhysics.Collision.AABB@,`0)">
            <summary>
            Create a proxy in the tree as a leaf node. We return the index
            of the node instead of a pointer so that we can grow
            the node pool.        
            /// </summary>
            <param name="aabb">The aabb.</param>
            <param name="userData">The user data.</param>
            <returns>Index of the created proxy</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.RemoveProxy(System.Int32)">
            <summary>
            Destroy a proxy. This asserts if the id is invalid.
            </summary>
            <param name="proxyId">The proxy id.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.MoveProxy(System.Int32,FarseerPhysics.Collision.AABB@,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Move a proxy with a swepted AABB. If the proxy has moved outside of its fattened AABB,
            then the proxy is removed from the tree and re-inserted. Otherwise
            the function returns immediately.
            </summary>
            <param name="proxyId">The proxy id.</param>
            <param name="aabb">The aabb.</param>
            <param name="displacement">The displacement.</param>
            <returns>true if the proxy was re-inserted.</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.GetUserData(System.Int32)">
            <summary>
            Get proxy user data.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="proxyId">The proxy id.</param>
            <returns>the proxy user data or 0 if the id is invalid.</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.GetFatAABB(System.Int32,FarseerPhysics.Collision.AABB@)">
            <summary>
            Get the fat AABB for a proxy.
            </summary>
            <param name="proxyId">The proxy id.</param>
            <param name="fatAABB">The fat AABB.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.Query(System.Func{System.Int32,System.Boolean},FarseerPhysics.Collision.AABB@)">
            <summary>
            Query an AABB for overlapping proxies. The callback class
            is called for each proxy that overlaps the supplied AABB.
            </summary>
            <param name="callback">The callback.</param>
            <param name="aabb">The aabb.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.RayCast(System.Func{FarseerPhysics.Collision.RayCastInput,System.Int32,System.Single},FarseerPhysics.Collision.RayCastInput@)">
            <summary>
            Ray-cast against the proxies in the tree. This relies on the callback
            to perform a exact ray-cast in the case were the proxy contains a Shape.
            The callback also performs the any collision filtering. This has performance
            roughly equal to k * log(n), where k is the number of collisions and n is the
            number of proxies in the tree.
            </summary>
            <param name="callback">A callback class that is called for each proxy that is hit by the ray.</param>
            <param name="input">The ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.Balance(System.Int32)">
            <summary>
            Perform a left or right rotation if node A is imbalanced.
            </summary>
            <param name="iA"></param>
            <returns>the new root index.</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.ComputeHeight(System.Int32)">
            <summary>
            Compute the height of a sub-tree.
            </summary>
            <param name="nodeId">The node id to use as parent.</param>
            <returns>The height of the tree.</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.ComputeHeight">
            <summary>
            Compute the height of the entire tree.
            </summary>
            <returns>The height of the tree.</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.Validate">
            <summary>
            Validate this tree. For testing.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.RebuildBottomUp">
            <summary>
            Build an optimal tree. Very expensive. For testing.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTree`1.ShiftOrigin(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Shift the origin of the nodes
            </summary>
            <param name="newOrigin">The displacement to use.</param>
        </member>
        <member name="T:FarseerPhysics.Collision.DynamicTreeBroadPhase">
            <summary>
            The broad-phase is used for computing pairs and performing volume queries and ray casts.
            This broad-phase does not persist pairs. Instead, this reports potentially new pairs.
            It is up to the Client to consume the new pairs and to track subsequent overlap.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.#ctor">
            <summary>
            Constructs a new broad phase based on the dynamic tree implementation
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.DynamicTreeBroadPhase.ProxyCount">
            <summary>
            Get the number of proxies.
            </summary>
            <value>The proxy count.</value>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.AddProxy(FarseerPhysics.Dynamics.FixtureProxy@)">
            <summary>
            Create a proxy with an initial AABB. Pairs are not reported until
            UpdatePairs is called.
            </summary>
            <param name="proxy">The user data.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.RemoveProxy(System.Int32)">
            <summary>
            Destroy a proxy. It is up to the Client to remove any pairs.
            </summary>
            <param name="proxyId">The proxy id.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.QueryCallback(System.Int32)">
            <summary>
            This is called from DynamicTree.Query when we are gathering pairs.
            </summary>
            <param name="proxyId"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.GetFatAABB(System.Int32,FarseerPhysics.Collision.AABB@)">
            <summary>
            Get the AABB for a proxy.
            </summary>
            <param name="proxyId">The proxy id.</param>
            <param name="aabb">The aabb.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.GetProxy(System.Int32)">
            <summary>
            Get user data from a proxy. Returns null if the id is invalid.
            </summary>
            <param name="proxyId">The proxy id.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.TestOverlap(System.Int32,System.Int32)">
            <summary>
            Test overlap of fat AABBs.
            </summary>
            <param name="proxyIdA">The proxy id A.</param>
            <param name="proxyIdB">The proxy id B.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.UpdatePairs(FarseerPhysics.Dynamics.BroadphaseDelegate)">
            <summary>
            Update the pairs. This results in pair callbacks. This can only add pairs.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.Query(System.Func{System.Int32,System.Boolean},FarseerPhysics.Collision.AABB@)">
            <summary>
            Query an AABB for overlapping proxies. The callback class
            is called for each proxy that overlaps the supplied AABB.
            </summary>
            <param name="callback">The callback.</param>
            <param name="aabb">The aabb.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.DynamicTreeBroadPhase.RayCast(System.Func{FarseerPhysics.Collision.RayCastInput,System.Int32,System.Single},FarseerPhysics.Collision.RayCastInput@)">
            <summary>
            Ray-cast against the proxies in the tree. This relies on the callback
            to perform a exact ray-cast in the case were the proxy contains a shape.
            The callback also performs the any collision filtering. This has performance
            roughly equal to k * log(n), where k is the number of collisions and n is the
            number of proxies in the tree.
            </summary>
            <param name="callback">A callback class that is called for each proxy that is hit by the ray.</param>
            <param name="input">The ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).</param>
        </member>
        <member name="P:FarseerPhysics.Collision.DynamicTreeBroadPhase.TreeQuality">
            <summary>
            Get the tree quality based on the area of the tree.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.DynamicTreeBroadPhase.TreeBalance">
            <summary>
            Gets the balance of the tree.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.DynamicTreeBroadPhase.TreeHeight">
            <summary>
            Gets the height of the tree.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.Shapes.ChainShape">
            <summary>
            A chain shape is a free form sequence of line segments.
            The chain has two-sided collision, so you can use inside and outside collision.
            Therefore, you may use any winding order.
            Connectivity information is used to create smooth collisions.
            WARNING: The chain will not collide properly if there are self-intersections.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Shapes.ChainShape.Vertices">
            <summary>
            The vertices. These are not owned/freed by the chain Shape.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.ChainShape.#ctor">
            <summary>
            Constructor for ChainShape. By default have 0 in density.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.ChainShape.#ctor(FarseerPhysics.Common.Vertices,System.Boolean)">
            <summary>
            Create a new chainshape from the vertices.
            </summary>
            <param name="vertices">The vertices to use. Must contain 2 or more vertices.</param>
            <param name="createLoop">Set to true to create a closed loop. It connects the first vertice to the last, and automatically adjusts connectivity to create smooth collisions along the chain.</param>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.ChainShape.PrevVertex">
            <summary>
            Establish connectivity to a vertex that precedes the first vertex.
            Don't call this for loops.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.ChainShape.NextVertex">
            <summary>
            Establish connectivity to a vertex that follows the last vertex.
            Don't call this for loops.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.ChainShape.GetChildEdge(FarseerPhysics.Collision.Shapes.EdgeShape,System.Int32)">
            <summary>
            This method has been optimized to reduce garbage.
            </summary>
            <param name="edge">The cached edge to set properties on.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.ChainShape.GetChildEdge(System.Int32)">
            <summary>
            Get a child edge.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.ChainShape.CompareTo(FarseerPhysics.Collision.Shapes.ChainShape)">
            <summary>
            Compare the chain to another chain
            </summary>
            <param name="shape">The other chain</param>
            <returns>True if the two chain shapes are the same</returns>
        </member>
        <member name="T:FarseerPhysics.Collision.Shapes.CircleShape">
            <summary>
            A circle shape.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.CircleShape.#ctor(System.Single,System.Single)">
            <summary>
            Create a new circle with the desired radius and density.
            </summary>
            <param name="radius">The radius of the circle.</param>
            <param name="density">The density of the circle.</param>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.CircleShape.Position">
            <summary>
            Get or set the position of the circle
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.CircleShape.CompareTo(FarseerPhysics.Collision.Shapes.CircleShape)">
            <summary>
            Compare the circle to another circle
            </summary>
            <param name="shape">The other circle</param>
            <returns>True if the two circles are the same size and have the same position</returns>
        </member>
        <member name="T:FarseerPhysics.Collision.Shapes.EdgeShape">
            <summary>
            A line segment (edge) shape. These can be connected in chains or loops
            to other edge shapes.
            The connectivity information is used to ensure correct contact normals.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Shapes.EdgeShape._vertex1">
            <summary>
            Edge start vertex
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Shapes.EdgeShape._vertex2">
            <summary>
            Edge end vertex
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.EdgeShape.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Create a new EdgeShape with the specified start and end.
            </summary>
            <param name="start">The start of the edge.</param>
            <param name="end">The end of the edge.</param>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.EdgeShape.HasVertex0">
            <summary>
            Is true if the edge is connected to an adjacent vertex before vertex 1.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.EdgeShape.HasVertex3">
            <summary>
            Is true if the edge is connected to an adjacent vertex after vertex2.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.EdgeShape.Vertex0">
            <summary>
            Optional adjacent vertices. These are used for smooth collision.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.EdgeShape.Vertex3">
            <summary>
            Optional adjacent vertices. These are used for smooth collision.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.EdgeShape.Vertex1">
            <summary>
            These are the edge vertices
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.EdgeShape.Vertex2">
            <summary>
            These are the edge vertices
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.EdgeShape.Set(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Set this as an isolated edge.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="T:FarseerPhysics.Collision.Shapes.PolygonShape">
            <summary>
            Represents a simple non-selfintersecting convex polygon.
            Create a convex hull from the given array of points.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.PolygonShape.#ctor(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Collision.Shapes.PolygonShape"/> class.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="density">The density.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.PolygonShape.#ctor(System.Single)">
            <summary>
            Create a new PolygonShape with the specified density.
            </summary>
            <param name="density">The density.</param>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.PolygonShape.Vertices">
            <summary>
            Create a convex hull from the given array of local points.
            The number of vertices must be in the range [3, Settings.MaxPolygonVertices].
            Warning: the points may be re-ordered, even if they form a convex polygon
            Warning: collinear points are handled but not removed. Collinear points may lead to poor stacking behavior.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.PolygonShape.ComputeAABB(FarseerPhysics.Collision.AABB@,FarseerPhysics.Common.Transform@,System.Int32)">
            <summary>
            Given a transform, compute the associated axis aligned bounding box for a child shape.
            </summary>
            <param name="aabb">The aabb results.</param>
            <param name="transform">The world transform of the shape.</param>
            <param name="childIndex">The child shape index.</param>
        </member>
        <member name="T:FarseerPhysics.Collision.Shapes.MassData">
            <summary>
            This holds the mass data computed for a shape.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.MassData.Area">
            <summary>
            The area of the shape
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.MassData.Centroid">
            <summary>
            The position of the shape's centroid relative to the shape's origin.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.MassData.Inertia">
            <summary>
            The rotational inertia of the shape about the local origin.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.MassData.Mass">
            <summary>
            The mass of the shape, usually in kilograms.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.MassData.op_Equality(FarseerPhysics.Collision.Shapes.MassData,FarseerPhysics.Collision.Shapes.MassData)">
            <summary>
            The equal operator
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.MassData.op_Inequality(FarseerPhysics.Collision.Shapes.MassData,FarseerPhysics.Collision.Shapes.MassData)">
            <summary>
            The not equal operator
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Collision.Shapes.Shape">
            <summary>
            A shape is used for collision detection. You can create a shape however you like.
            Shapes used for simulation in World are created automatically when a Fixture
            is created. Shapes may encapsulate a one or more child shapes.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Collision.Shapes.Shape.MassData">
            <summary>
            Contains the properties of the shape such as:
            - Area of the shape
            - Centroid
            - Inertia
            - Mass
            </summary>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.Shape.ShapeType">
            <summary>
            Get the type of this shape.
            </summary>
            <value>The type of the shape.</value>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.Shape.ChildCount">
            <summary>
            Get the number of child primitives.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.Shape.Density">
            <summary>
            Gets or sets the density.
            Changing the density causes a recalculation of shape properties.
            </summary>
            <value>The density.</value>
        </member>
        <member name="P:FarseerPhysics.Collision.Shapes.Shape.Radius">
            <summary>
            Radius of the Shape
            Changing the radius causes a recalculation of shape properties.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.Shape.Clone">
            <summary>
            Clone the concrete shape
            </summary>
            <returns>A clone of the shape</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.Shape.TestPoint(FarseerPhysics.Common.Transform@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Test a point for containment in this shape.
            Note: This only works for convex shapes.
            </summary>
            <param name="transform">The shape world transform.</param>
            <param name="point">A point in world coordinates.</param>
            <returns>True if the point is inside the shape</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.Shape.RayCast(FarseerPhysics.Collision.RayCastOutput@,FarseerPhysics.Collision.RayCastInput@,FarseerPhysics.Common.Transform@,System.Int32)">
            <summary>
            Cast a ray against a child shape.
            </summary>
            <param name="output">The ray-cast results.</param>
            <param name="input">The ray-cast input parameters.</param>
            <param name="transform">The transform to be applied to the shape.</param>
            <param name="childIndex">The child shape index.</param>
            <returns>True if the ray-cast hits the shape</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.Shape.ComputeAABB(FarseerPhysics.Collision.AABB@,FarseerPhysics.Common.Transform@,System.Int32)">
            <summary>
            Given a transform, compute the associated axis aligned bounding box for a child shape.
            </summary>
            <param name="aabb">The aabb results.</param>
            <param name="transform">The world transform of the shape.</param>
            <param name="childIndex">The child shape index.</param>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.Shape.ComputeProperties">
            <summary>
            Compute the mass properties of this shape using its dimensions and density.
            The inertia tensor is computed about the local origin, not the centroid.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.Shape.CompareTo(FarseerPhysics.Collision.Shapes.Shape)">
            <summary>
            Compare this shape to another shape based on type and properties.
            </summary>
            <param name="shape">The other shape</param>
            <returns>True if the two shapes are the same.</returns>
        </member>
        <member name="M:FarseerPhysics.Collision.Shapes.Shape.ComputeSubmergedArea(Microsoft.Xna.Framework.Vector2@,System.Single,FarseerPhysics.Common.Transform@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Used for the buoyancy controller
            </summary>
        </member>
        <member name="T:FarseerPhysics.Collision.TOIInput">
            <summary>
            Input parameters for CalculateTimeOfImpact
            </summary>
        </member>
        <member name="M:FarseerPhysics.Collision.TimeOfImpact.CalculateTimeOfImpact(FarseerPhysics.Collision.TOIOutput@,FarseerPhysics.Collision.TOIInput)">
            <summary>
            Compute the upper bound on time before two shapes penetrate. Time is represented as
            a fraction between [0,tMax]. This uses a swept separating axis and may miss some intermediate,
            non-tunneling collision. If you change the time interval, you should call this function
            again.
            Note: use Distance() to compute the contact point and normal at the time of impact.
            </summary>
            <param name="output">The output.</param>
            <param name="input">The input.</param>
        </member>
        <member name="T:FarseerPhysics.Common.ConvexHull.ChainHull">
            <summary>
            Andrew's Monotone Chain Convex Hull algorithm.
            Used to get the convex hull of a point cloud.
            
            Source: http://www.softsurfer.com/Archive/algorithm_0109/algorithm_0109.htm
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.ConvexHull.ChainHull.GetConvexHull(FarseerPhysics.Common.Vertices)">
            <summary>
            Returns the convex hull from the given vertices..
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.ConvexHull.GiftWrap">
            <summary>
            Giftwrap convex hull algorithm.
            O(nh) time complexity, where n is the number of points and h is the number of points on the convex hull.
            
            See http://en.wikipedia.org/wiki/Gift_wrapping_algorithm for more details.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.ConvexHull.GiftWrap.GetConvexHull(FarseerPhysics.Common.Vertices)">
            <summary>
            Returns the convex hull from the given vertices.
            </summary>
            <param name="vertices">The vertices.</param>
        </member>
        <member name="T:FarseerPhysics.Common.ConvexHull.Melkman">
            <summary>
            Creates a convex hull.
            Note:
            1. Vertices must be of a simple polygon, i.e. edges do not overlap.
            2. Melkman does not work on point clouds
            </summary>
            <remarks>
            Implemented using Melkman's Convex Hull Algorithm - O(n) time complexity.
            Reference: http://www.ams.sunysb.edu/~jsbm/courses/345/melkman.pdf
            </remarks>
        </member>
        <member name="M:FarseerPhysics.Common.ConvexHull.Melkman.GetConvexHull(FarseerPhysics.Common.Vertices)">
            <summary>
            Returns a convex hull from the given vertices.
            </summary>
            <returns>A convex hull in counter clockwise winding order.</returns>
        </member>
        <member name="T:FarseerPhysics.Common.Decomposition.BayazitDecomposer">
            <summary>
            Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/)
            
            Properties:
            - Tries to decompose using polygons instead of triangles.
            - Tends to produce optimal results with low processing time.
            - Running time is O(nr), n = number of vertices, r = reflex vertices.
            - Does not support holes.
            
            For more information about this algorithm, see http://mnbayazit.com/406/bayazit
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.BayazitDecomposer.ConvexPartition(FarseerPhysics.Common.Vertices)">
            <summary>
            Decompose the polygon into several smaller non-concave polygon.
            If the polygon is already convex, it will return the original polygon, unless it is over Settings.MaxPolygonVertices.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.Decomposition.CDTDecomposer">
            <summary>
            2D constrained Delaunay triangulation algorithm.
            Based on the paper "Sweep-line algorithm for constrained Delaunay triangulation" by V. Domiter and and B. Zalik
            
            Properties:
            - Creates triangles with a large interior angle.
            - Supports holes
            - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
            - Running time is O(n^2), n = number of vertices.
            - Does not care about winding order.
            
            Source: http://code.google.com/p/poly2tri/
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDTDecomposer.ConvexPartition(FarseerPhysics.Common.Vertices)">
            <summary>
            Decompose the polygon into several smaller non-concave polygon.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.EdgeIsConstrained">
            Neighbor pointers 
            Flags to determine if an edge is a Delauney edge 
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.EdgeIsDelaunay">
            Flags to determine if an edge is a Constrained edge 
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.Points">
            Has this triangle been marked as an interior triangle? 
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.MarkNeighbor(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)">
            <summary>
            Update neighbor pointers
            </summary>
            <param name="p1">Point 1 of the shared edge</param>
            <param name="p2">Point 2 of the shared edge</param>
            <param name="t">This triangle's new neighbor</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.MarkNeighbor(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)">
            <summary>
            Exhaustive search to update neighbor pointers
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.Clear">
            Clears all references to all other triangles and points
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.OppositePoint(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <param name="t">Opposite triangle</param>
            <param name="p">The point in t that isn't shared between the triangles</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.Legalize(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            Legalize triangle by rotating clockwise around oPoint
            </summary>
            <param name="oPoint">The origin point to rotate around</param>
            <param name="nPoint">???</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.MarkNeighborEdges">
            <summary>
            Finalize edge marking
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.MarkConstrainedEdge(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            Mark edge as constrained
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.EdgeIndex(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            Get the index of the neighbor that shares this edge (or -1 if it isn't shared)
            </summary>
            <returns>index of the shared edge or -1 if edge isn't shared</returns>
        </member>
        <member name="T:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront">
            @author Thomas Åhlen (thahlen@gmail.com)
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront.FindSearchNode(System.Double)">
            <summary>
            MM:  This seems to be used by LocateNode to guess a position in the implicit linked list of AdvancingFrontNodes near x
                 Removed an overload that depended on this being exact
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront.LocateNode(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            We use a balancing tree to locate a node smaller or equal to given key value
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront.LocatePoint(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            This implementation will use simple node traversal algorithm to find a point on the front
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.Triangulate(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext)">
            <summary>
            Triangulate simple polygon with holes
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.Sweep(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext)">
            <summary>
            Start sweeping the Y-sorted point set from bottom to top
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.FinalizationConvexHull(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext)">
            <summary>
            If this is a Delaunay Triangulation of a pointset we need to fill so the triangle mesh gets a ConvexHull 
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.TurnAdvancingFrontConvex(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            We will traverse the entire advancing front and fill it to form a convex hull.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.PointEvent(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            Find closes node to the left of the new point and
            create a new triangle. If needed new holes and basins
            will be filled to.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.NewFrontTriangle(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            Creates a new front triangle and legalize it
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.NextFlipPoint(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            When we need to traverse from one triangle to the next we need 
            the point in current triangle that is the opposite point to the next
            triangle. 
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.NextFlipTriangle(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.Orientation,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            After a flip we have two triangles and know that only one will still be
            intersecting the edge. So decide which to contiune with and legalize the other
            </summary>
            <param name="tcx"></param>
            <param name="o">should be the result of an TriangulationUtil.orient2d( eq, op, ep )</param>
            <param name="t">triangle 1</param>
            <param name="ot">triangle 2</param>
            <param name="p">a point shared by both triangles</param>
            <param name="op">another point shared by both triangles</param>
            <returns>returns the triangle still intersecting the edge</returns>
        </member>
        <!-- 对于成员“M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.FlipScanEdgeEvent(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)”忽略有格式错误的 XML 注释 -->
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.FillAdvancingFront(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            Fills holes in the Advancing Front
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.FillBasin(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            Fills a basin that has formed on the Advancing Front to the right
            of given node.
            First we decide a left,bottom and right node that forms the 
            boundaries of the basin. Then we do a reqursive fill.
            </summary>
            <param name="tcx"></param>
            <param name="node">starting node, this or next node will be left node</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.FillBasinReq(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            Recursive algorithm to fill a Basin with triangles
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.HoleAngle(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            ???
            </summary>
            <param name="node">middle node</param>
            <returns>the angle between 3 front nodes</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.BasinAngle(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            The basin angle is decided against the horizontal line [1,0]
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.Fill(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
            Adds a triangle to the advancing front to fill a hole.
            </summary>
            <param name="tcx"></param>
            <param name="node">middle node, that is the bottom of the hole</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.Legalize(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)">
            <summary>
            Returns true if triangle was legalized
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep.RotateTrianglePair(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            Rotates a triangle pair one vertex CW
                  n2                    n2
             P +-----+             P +-----+
               | t  /|               |\  t |  
               |   / |               | \   |
             n1|  /  |n3           n1|  \  |n3
               | /   |    after CW   |   \ |
               |/ oT |               | oT \|
               +-----+ oP            +-----+
                  n4                    n4
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepConstraint.#ctor(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
            Give two points in any order. Will always be ordered so
            that q.y > p.y and q.x > p.x if same y value 
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext">
             
             @author Thomas Åhlén, thahlen@gmail.com
            
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.MapTriangleToNodes(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)">
            <summary>
            Try to map a node to all sides of this triangle that don't have 
            a neighbor.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.#ctor(System.Collections.Generic.IList{FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint})">
            <summary>
            Create a polygon from a list of at least 3 points with no duplicates.
            </summary>
            <param name="points">A list of unique points</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.#ctor(System.Collections.Generic.IEnumerable{FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint})">
            <summary>
            Create a polygon from a list of at least 3 points with no duplicates.
            </summary>
            <param name="points">A list of unique points.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.PrepareTriangulation(FarseerPhysics.Common.Decomposition.CDT.TriangulationContext)">
            <summary>
            Creates constraints and populates the context with points
            </summary>
            <param name="tcx">The context</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.AddHole(FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon)">
            <summary>
            Add a hole to the polygon.
            </summary>
            <param name="poly">A subtraction polygon fully contained inside this polygon.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.InsertPointAfter(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint,FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint)">
            <summary>
            Inserts newPoint after point.
            </summary>
            <param name="point">The point to insert after in the polygon</param>
            <param name="newPoint">The point to insert into the polygon</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.AddPoints(System.Collections.Generic.IEnumerable{FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint})">
            <summary>
            Inserts list (after last point in polygon?)
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.AddPoint(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint)">
            <summary>
            Adds a point after the last in the polygon.
            </summary>
            <param name="p">The point to add</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon.RemovePoint(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint)">
            <summary>
            Removes a point from the polygon.
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.Sets.ConstrainedPointSet.#ctor(System.Collections.Generic.List{FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint},System.Collections.Generic.IEnumerable{FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint})">
            
            @param points - A list of all points in PointSet
            @param constraints - Pairs of two points defining a constraint, all points <b>must</b> be part of given PointSet!
        </member>
        <!-- 对于成员“M:FarseerPhysics.Common.Decomposition.CDT.Sets.ConstrainedPointSet.isValid”忽略有格式错误的 XML 注释 -->
        <member name="T:FarseerPhysics.Common.Decomposition.CDT.TriangulationUtil">
            @author Thomas Åhlén, thahlen@gmail.com
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.TriangulationUtil.SmartIncircle(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            <summary>
              Requirements:
            1. a,b and c form a triangle.
            2. a and d is know to be on opposite side of bc
            <code>
                           a
                           +
                          / \
                         /   \
                       b/     \c
                       +-------+ 
                      /    B    \  
                     /           \ 
            </code>
               Facts:
             d has to be in area B to have a chance to be inside the circle formed by a,b and c
             d is outside B if orient2d(a,b,d) or orient2d(c,a,d) is CW
             This preknowledge gives us a way to optimize the incircle test
            </summary>
            <param name="pa">triangle point, opposite d</param>
            <param name="pb">triangle point</param>
            <param name="pc">triangle point</param>
            <param name="pd">point opposite a</param>
            <returns>true if d is inside circle, false if on circle edge</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.CDT.TriangulationUtil.Orient2d(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint,FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)">
            Forumla to calculate signed area
            Positive if CCW
            Negative if CW
            0 if collinear
            A[P1,P2,P3]  =  (x1*y2 - y1*x2) + (x2*y3 - y2*x3) + (x3*y1 - y3*x1)
                         =  (x1-x3)*(y2-y3) - (y1-y3)*(x2-x3)
        </member>
        <member name="T:FarseerPhysics.Common.Decomposition.EarclipDecomposer">
            <summary>
            Convex decomposition algorithm using ear clipping
            
            Properties:
            - Only works on simple polygons.
            - Does not support holes.
            - Running time is O(n^2), n = number of vertices.
            
            Source: http://www.ewjordan.com/earClip/
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.EarclipDecomposer.ConvexPartition(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Decompose the polygon into several smaller non-concave polygon.
            Each resulting polygon will have no more than Settings.MaxPolygonVertices vertices.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="tolerance">The tolerance.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.EarclipDecomposer.TriangulatePolygon(FarseerPhysics.Common.Vertices,System.Single)">
             <summary>
             Triangulates a polygon using simple ear-clipping algorithm. Returns
             size of Triangle array unless the polygon can't be triangulated.
             This should only happen if the polygon self-intersects,
             though it will not _always_ return null for a bad polygon - it is the
             caller's responsibility to check for self-intersection, and if it
             doesn't, it should at least check that the return value is non-null
             before using. You're warned!
            
             Triangles may be degenerate, especially if you have identical points
             in the input to the algorithm.  Check this before you use them.
            
             This is totally unoptimized, so for large polygons it should not be part
             of the simulation loop.
             </summary>
             <remarks>
             Only works on simple polygons.
             </remarks>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.EarclipDecomposer.ResolvePinchPoint(FarseerPhysics.Common.Vertices,FarseerPhysics.Common.Vertices@,FarseerPhysics.Common.Vertices@,System.Single)">
            <summary>
            Finds and fixes "pinch points," points where two polygon
            vertices are at the same point.
            
            If a pinch point is found, pin is broken up into poutA and poutB
            and true is returned; otherwise, returns false.
            
            Mostly for internal use.
            
            O(N^2) time, which sucks...
            </summary>
            <param name="pin">The pin.</param>
            <param name="poutA">The pout A.</param>
            <param name="poutB">The pout B.</param>
            <param name="tolerance"></param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.EarclipDecomposer.Remainder(System.Int32,System.Int32)">
            <summary>
            Fix for obnoxious behavior for the % operator for negative numbers...
            </summary>
            <param name="x">The x.</param>
            <param name="modulus">The modulus.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.EarclipDecomposer.IsEar(System.Int32,System.Single[],System.Single[],System.Int32)">
            <summary>
            Checks if vertex i is the tip of an ear in polygon defined by xv[] and  yv[].
            </summary>
            <param name="i">The i.</param>
            <param name="xv">The xv.</param>
            <param name="yv">The yv.</param>
            <param name="xvLength">Length of the xv.</param>
            <remarks>
            Assumes clockwise orientation of polygon.
            </remarks>
            <returns>
            	<c>true</c> if the specified i is ear; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:FarseerPhysics.Common.Decomposition.FlipcodeDecomposer">
            <summary>
            Convex decomposition algorithm created by unknown
            
            Properties:
            - No support for holes
            - Very fast
            - Only works on simple polygons
            - Only works on counter clockwise polygons
            
            More information: http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.FlipcodeDecomposer.ConvexPartition(FarseerPhysics.Common.Vertices)">
            <summary>
            Decompose the polygon into triangles.
            
            Properties:
            - Only works on counter clockwise polygons
            
            </summary>
            <param name="vertices">The list of points describing the polygon</param>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.FlipcodeDecomposer.InsideTriangle(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Check if the point P is inside the triangle defined by
            the points A, B, C
            </summary>
            <param name="a">The A point.</param>
            <param name="b">The B point.</param>
            <param name="c">The C point.</param>
            <param name="p">The point to be tested.</param>
            <returns>True if the point is inside the triangle</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.FlipcodeDecomposer.Snip(FarseerPhysics.Common.Vertices,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Cut a the contour and add a triangle into V to describe the 
            location of the cut
            </summary>
            <param name="contour">The list of points defining the polygon</param>
            <param name="u">The index of the first point</param>
            <param name="v">The index of the second point</param>
            <param name="w">The index of the third point</param>
            <param name="n">The number of elements in the array.</param>
            <param name="V">The array to populate with indicies of triangles.</param>
            <returns>True if a triangle was found</returns>
        </member>
        <member name="T:FarseerPhysics.Common.Decomposition.SeidelDecomposer">
            <summary>
            Convex decomposition algorithm created by Raimund Seidel
            
            Properties:
            - Decompose the polygon into trapezoids, then triangulate.
            - To use the trapezoid data, use ConvexPartitionTrapezoid()
            - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
            - Running time is O(n log n), n = number of vertices.
            - Running time is almost linear for most simple polygons.
            - Does not care about winding order. 
            
            For more information, see Raimund Seidel's paper "A simple and fast incremental randomized
            algorithm for computing trapezoidal decompositions and for triangulating polygons"
            
            See also: "Computational Geometry", 3rd edition, by Mark de Berg et al, Chapter 6.2
                      "Computational Geometry in C", 2nd edition, by Joseph O'Rourke
            
            Original code from the Poly2Tri project by Mason Green.
            http://code.google.com/p/poly2tri/source/browse?repo=archive#hg/scala/src/org/poly2tri/seidel
            
            This implementation is from Dec 14, 2010
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.SeidelDecomposer.ConvexPartition(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Decompose the polygon into several smaller non-concave polygons.
            </summary>
            <param name="vertices">The polygon to decompose.</param>
            <param name="sheer">The sheer to use if you get bad results, try using a higher value.</param>
            <returns>A list of triangles</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Decomposition.SeidelDecomposer.ConvexPartitionTrapezoid(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Decompose the polygon into several smaller non-concave polygons.
            </summary>
            <param name="vertices">The polygon to decompose.</param>
            <param name="sheer">The sheer to use if you get bad results, try using a higher value.</param>
            <returns>A list of trapezoids</returns>
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.TriangulationAlgorithm.Earclip">
            <summary>
            Convex decomposition algorithm using ear clipping
            
            Properties:
            - Only works on simple polygons.
            - Does not support holes.
            - Running time is O(n^2), n = number of vertices.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.TriangulationAlgorithm.Bayazit">
            <summary>
            Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/)
            
            Properties:
            - Tries to decompose using polygons instead of triangles.
            - Tends to produce optimal results with low processing time.
            - Running time is O(nr), n = number of vertices, r = reflex vertices.
            - Does not support holes.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.TriangulationAlgorithm.Flipcode">
            <summary>
            Convex decomposition algorithm created by unknown
            
            Properties:
            - No support for holes
            - Very fast
            - Only works on simple polygons
            - Only works on counter clockwise polygons
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.TriangulationAlgorithm.Seidel">
            <summary>
            Convex decomposition algorithm created by Raimund Seidel
            
            Properties:
            - Decompose the polygon into trapezoids, then triangulate.
            - To use the trapezoid data, use ConvexPartitionTrapezoid()
            - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
            - Running time is O(n log n), n = number of vertices.
            - Running time is almost linear for most simple polygons.
            - Does not care about winding order. 
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Decomposition.TriangulationAlgorithm.Delauny">
            <summary>
            2D constrained Delaunay triangulation algorithm.
            Based on the paper "Sweep-line algorithm for constrained Delaunay triangulation" by V. Domiter and and B. Zalik
            
            Properties:
            - Creates triangles with a large interior angle.
            - Supports holes
            - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
            - Running time is O(n^2), n = number of vertices.
            - Does not care about winding order.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.LineTools">
            <summary>
            Collection of helper methods for misc collisions.
            Does float tolerance and line collisions with lines and AABBs.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.LineTools.LineIntersect2(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
             <summary>
            Check if the lines a0->a1 and b0->b1 cross.
            If they do, intersectionPoint will be filled
            with the point of crossing.
            
            Grazing lines should not return true.
             
             </summary>
        </member>
        <member name="M:FarseerPhysics.Common.LineTools.LineIntersect(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Boolean,System.Boolean,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            This method detects if two line segments (or lines) intersect,
            and, if so, the point of intersection. Use the <paramref name="firstIsSegment"/> and
            <paramref name="secondIsSegment"/> parameters to set whether the intersection point
            must be on the first and second line segments. Setting these
            both to true means you are doing a line-segment to line-segment
            intersection. Setting one of them to true means you are doing a
            line to line-segment intersection test, and so on.
            Note: If two line segments are coincident, then 
            no intersection is detected (there are actually
            infinite intersection points).
            Author: Jeremy Bell
            </summary>
            <param name="point1">The first point of the first line segment.</param>
            <param name="point2">The second point of the first line segment.</param>
            <param name="point3">The first point of the second line segment.</param>
            <param name="point4">The second point of the second line segment.</param>
            <param name="point">This is set to the intersection
            point if an intersection is detected.</param>
            <param name="firstIsSegment">Set this to true to require that the 
            intersection point be on the first line segment.</param>
            <param name="secondIsSegment">Set this to true to require that the
            intersection point be on the second line segment.</param>
            <returns>True if an intersection is detected, false otherwise.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.LineTools.LineIntersect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            This method detects if two line segments (or lines) intersect,
            and, if so, the point of intersection. Use the <paramref name="firstIsSegment"/> and
            <paramref name="secondIsSegment"/> parameters to set whether the intersection point
            must be on the first and second line segments. Setting these
            both to true means you are doing a line-segment to line-segment
            intersection. Setting one of them to true means you are doing a
            line to line-segment intersection test, and so on.
            Note: If two line segments are coincident, then 
            no intersection is detected (there are actually
            infinite intersection points).
            Author: Jeremy Bell
            </summary>
            <param name="point1">The first point of the first line segment.</param>
            <param name="point2">The second point of the first line segment.</param>
            <param name="point3">The first point of the second line segment.</param>
            <param name="point4">The second point of the second line segment.</param>
            <param name="intersectionPoint">This is set to the intersection
            point if an intersection is detected.</param>
            <param name="firstIsSegment">Set this to true to require that the 
            intersection point be on the first line segment.</param>
            <param name="secondIsSegment">Set this to true to require that the
            intersection point be on the second line segment.</param>
            <returns>True if an intersection is detected, false otherwise.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.LineTools.LineIntersect(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            This method detects if two line segments intersect,
            and, if so, the point of intersection. 
            Note: If two line segments are coincident, then 
            no intersection is detected (there are actually
            infinite intersection points).
            </summary>
            <param name="point1">The first point of the first line segment.</param>
            <param name="point2">The second point of the first line segment.</param>
            <param name="point3">The first point of the second line segment.</param>
            <param name="point4">The second point of the second line segment.</param>
            <param name="intersectionPoint">This is set to the intersection
            point if an intersection is detected.</param>
            <returns>True if an intersection is detected, false otherwise.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.LineTools.LineIntersect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            This method detects if two line segments intersect,
            and, if so, the point of intersection. 
            Note: If two line segments are coincident, then 
            no intersection is detected (there are actually
            infinite intersection points).
            </summary>
            <param name="point1">The first point of the first line segment.</param>
            <param name="point2">The second point of the first line segment.</param>
            <param name="point3">The first point of the second line segment.</param>
            <param name="point4">The second point of the second line segment.</param>
            <param name="intersectionPoint">This is set to the intersection
            point if an intersection is detected.</param>
            <returns>True if an intersection is detected, false otherwise.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.LineTools.LineSegmentVerticesIntersect(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,FarseerPhysics.Common.Vertices)">
            <summary>
            Get all intersections between a line segment and a list of vertices
            representing a polygon. The vertices reuse adjacent points, so for example
            edges one and two are between the first and second vertices and between the
            second and third vertices. The last edge is between vertex vertices.Count - 1
            and verts0. (ie, vertices from a Geometry or AABB)
            </summary>
            <param name="point1">The first point of the line segment to test</param>
            <param name="point2">The second point of the line segment to test.</param>
            <param name="vertices">The vertices, as described above</param>
        </member>
        <member name="M:FarseerPhysics.Common.LineTools.LineSegmentAABBIntersect(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,FarseerPhysics.Collision.AABB)">
            <summary>
            Get all intersections between a line segment and an AABB. 
            </summary>
            <param name="point1">The first point of the line segment to test</param>
            <param name="point2">The second point of the line segment to test.</param>
            <param name="aabb">The AABB that is used for testing intersection.</param>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Cross(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            Perform the cross product on two vectors.
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Mul(FarseerPhysics.Common.Mat33,Microsoft.Xna.Framework.Vector3)">
            Multiply a matrix times a vector.
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Mul22(FarseerPhysics.Common.Mat33,Microsoft.Xna.Framework.Vector2)">
            Multiply a matrix times a vector.
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Mul(FarseerPhysics.Common.Rot,FarseerPhysics.Common.Rot)">
            Multiply two rotations: q * r
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.MulT(FarseerPhysics.Common.Rot,FarseerPhysics.Common.Rot)">
            Transpose multiply two rotations: qT * r
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Mul(FarseerPhysics.Common.Rot,Microsoft.Xna.Framework.Vector2)">
            Rotate a vector
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.MulT(FarseerPhysics.Common.Rot,Microsoft.Xna.Framework.Vector2)">
            Inverse rotate a vector
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Skew(Microsoft.Xna.Framework.Vector2)">
            Get the skew vector such that dot(skew_vec, other) == cross(vec, other)
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.IsValid(System.Single)">
            <summary>
            This function is used to ensure that a floating point number is
            not a NaN or infinity.
            </summary>
            <param name="x">The x.</param>
            <returns>
            	<c>true</c> if the specified x is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.InvSqrt(System.Single)">
            <summary>
            This is a approximate yet fast inverse square-root.
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.VectorAngle(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Return the angle between two vectors on a plane
            The angle is from vector 1 to vector 2, positive anticlockwise
            The result is between -pi -> pi
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Dot(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            Perform the dot product on two vectors.
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Area(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a positive number if c is to the left of the line going from a to b.
            </summary>
            <returns>Positive number if point is left, negative if point is right, 
            and 0 if points are collinear.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.Area(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Returns a positive number if c is to the left of the line going from a to b.
            </summary>
            <returns>Positive number if point is left, negative if point is right, 
            and 0 if points are collinear.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.IsCollinear(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single)">
            <summary>
            Determines if three vertices are collinear (ie. on a straight line)
            </summary>
            <param name="a">First vertex</param>
            <param name="b">Second vertex</param>
            <param name="c">Third vertex</param>
            <param name="tolerance">The tolerance</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.FloatEquals(System.Single,System.Single,System.Single)">
            <summary>
            Checks if a floating point Value is equal to another,
            within a certain tolerance.
            </summary>
            <param name="value1">The first floating point Value.</param>
            <param name="value2">The second floating point Value.</param>
            <param name="delta">The floating point tolerance.</param>
            <returns>True if the values are "equal", false otherwise.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.MathUtils.FloatInRange(System.Single,System.Single,System.Single)">
            <summary>
            Checks if a floating point Value is within a specified
            range of values (inclusive).
            </summary>
            <param name="value">The Value to check.</param>
            <param name="min">The minimum Value.</param>
            <param name="max">The maximum Value.</param>
            <returns>True if the Value is within the range specified,
            false otherwise.</returns>
        </member>
        <member name="T:FarseerPhysics.Common.Mat22">
            <summary>
            A 2-by-2 matrix. Stored in column-major order.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Mat22.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Construct this matrix using columns.
            </summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Mat22.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Construct this matrix using scalars.
            </summary>
            <param name="a11">The a11.</param>
            <param name="a12">The a12.</param>
            <param name="a21">The a21.</param>
            <param name="a22">The a22.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Mat22.Set(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initialize this matrix using columns.
            </summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Mat22.SetIdentity">
            <summary>
            Set this to the identity matrix.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Mat22.SetZero">
            <summary>
            Set this matrix to all zeros.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Mat22.Solve(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Solve A * x = b, where b is a column vector. This is more efficient
            than computing the inverse in one-shot cases.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Common.Mat33">
            <summary>
            A 3-by-3 matrix. Stored in column-major order.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Mat33.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Construct this matrix using columns.
            </summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="c3">The c3.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Mat33.SetZero">
            <summary>
            Set this matrix to all zeros.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Mat33.Solve33(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Solve A * x = b, where b is a column vector. This is more efficient
            than computing the inverse in one-shot cases.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Mat33.Solve22(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Solve A * x = b, where b is a column vector. This is more efficient
            than computing the inverse in one-shot cases. Solve only the upper
            2-by-2 matrix equation.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Mat33.GetInverse22(FarseerPhysics.Common.Mat33@)">
            Get the inverse of this matrix as a 2-by-2.
            Returns the zero matrix if singular.
        </member>
        <member name="M:FarseerPhysics.Common.Mat33.GetSymInverse33(FarseerPhysics.Common.Mat33@)">
            Get the symmetric inverse of this matrix as a 3-by-3.
            Returns the zero matrix if singular.
        </member>
        <member name="M:FarseerPhysics.Common.Mat33.GetInverse22(FarseerPhysics.Common.Mat33)">
            Get the inverse of this matrix as a 2-by-2.
            Returns the zero matrix if singular.
        </member>
        <member name="T:FarseerPhysics.Common.Rot">
            Rotation
        </member>
        <member name="M:FarseerPhysics.Common.Rot.#ctor(System.Single)">
            Initialize from an angle in radians
        </member>
        <member name="M:FarseerPhysics.Common.Rot.Set(System.Single)">
            Set using an angle in radians.
        </member>
        <member name="M:FarseerPhysics.Common.Rot.SetIdentity">
            Set to the identity rotation
        </member>
        <member name="M:FarseerPhysics.Common.Rot.GetAngle">
            Get the angle in radians
        </member>
        <member name="M:FarseerPhysics.Common.Rot.GetXAxis">
            Get the x-axis
        </member>
        <member name="M:FarseerPhysics.Common.Rot.GetYAxis">
            Get the u-axis
        </member>
        <member name="F:FarseerPhysics.Common.Rot.s">
            Sine and cosine
        </member>
        <member name="F:FarseerPhysics.Common.Rot.c">
            Sine and cosine
        </member>
        <member name="T:FarseerPhysics.Common.Transform">
            <summary>
            A transform contains translation and rotation. It is used to represent
            the position and orientation of rigid frames.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Transform.#ctor(Microsoft.Xna.Framework.Vector2@,FarseerPhysics.Common.Rot@)">
            <summary>
            Initialize using a position vector and a rotation matrix.
            </summary>
            <param name="position">The position.</param>
            <param name="rotation">The r.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Transform.SetIdentity">
            <summary>
            Set this to the identity transform.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Transform.Set(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Set this based on the position and angle.
            </summary>
            <param name="position">The position.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="T:FarseerPhysics.Common.Sweep">
            <summary>
            This describes the motion of a body/shape for TOI computation.
            Shapes are defined with respect to the body origin, which may
            no coincide with the center of mass. However, to support dynamics
            we must interpolate the center of mass position.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Sweep.A">
            <summary>
            World angles
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Sweep.Alpha0">
            <summary>
            Fraction of the current time step in the range [0,1]
            c0 and a0 are the positions at alpha0.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Sweep.C">
            <summary>
            Center world positions
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Sweep.LocalCenter">
            <summary>
            Local center of mass position
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Sweep.GetTransform(FarseerPhysics.Common.Transform@,System.Single)">
            <summary>
            Get the interpolated transform at a specific time.
            </summary>
            <param name="xfb">The transform.</param>
            <param name="beta">beta is a factor in [0,1], where 0 indicates alpha0.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Sweep.Advance(System.Single)">
            <summary>
            Advance the sweep forward, yielding a new initial state.
            </summary>
            <param name="alpha">new initial time..</param>
        </member>
        <member name="M:FarseerPhysics.Common.Sweep.Normalize">
            <summary>
            Normalize the angles.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.Path">
            <summary>
            Path:
            Very similar to Vertices, but this
            class contains vectors describing
            control points on a Catmull-Rom
            curve.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.Path.ControlPoints">
            <summary>
            All the points that makes up the curve
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Path.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Common.Path"/> class.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Path.#ctor(Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Common.Path"/> class.
            </summary>
            <param name="vertices">The vertices to created the path from.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Path.#ctor(System.Collections.Generic.IList{Microsoft.Xna.Framework.Vector2})">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Common.Path"/> class.
            </summary>
            <param name="vertices">The vertices to created the path from.</param>
        </member>
        <member name="P:FarseerPhysics.Common.Path.Closed">
            <summary>
            True if the curve is closed.
            </summary>
            <value><c>true</c> if closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:FarseerPhysics.Common.Path.NextIndex(System.Int32)">
            <summary>
            Gets the next index of a controlpoint
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Path.PreviousIndex(System.Int32)">
            <summary>
            Gets the previous index of a controlpoint
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Path.Translate(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Translates the control points by the specified vector.
            </summary>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Path.Scale(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Scales the control points by the specified vector.
            </summary>
            <param name="value">The Value.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Path.Rotate(System.Single)">
            <summary>
            Rotate the control points by the defined value in radians.
            </summary>
            <param name="value">The amount to rotate by in radians.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Path.GetVertices(System.Int32)">
            <summary>
            Returns a set of points defining the
            curve with the specifed number of divisions
            between each control point.
            </summary>
            <param name="divisions">Number of divisions between each control point.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Path.GetPositionNormal(System.Single)">
            <summary>
            Gets the normal for the given time.
            </summary>
            <param name="time">The time</param>
            <returns>The normal.</returns>
        </member>
        <member name="T:FarseerPhysics.Common.PathManager">
            <summary>
            An easy to use manager for creating paths.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.PathManager.ConvertPathToEdges(FarseerPhysics.Common.Path,FarseerPhysics.Dynamics.Body,System.Int32)">
            <summary>
            Convert a path into a set of edges and attaches them to the specified body.
            Note: use only for static edges.
            </summary>
            <param name="path">The path.</param>
            <param name="body">The body.</param>
            <param name="subdivisions">The subdivisions.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PathManager.ConvertPathToPolygon(FarseerPhysics.Common.Path,FarseerPhysics.Dynamics.Body,System.Single,System.Int32)">
            <summary>
            Convert a closed path into a polygon.
            Convex decomposition is automatically performed.
            </summary>
            <param name="path">The path.</param>
            <param name="body">The body.</param>
            <param name="density">The density.</param>
            <param name="subdivisions">The subdivisions.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PathManager.EvenlyDistributeShapesAlongPath(FarseerPhysics.Dynamics.World,FarseerPhysics.Common.Path,System.Collections.Generic.IEnumerable{FarseerPhysics.Collision.Shapes.Shape},FarseerPhysics.Dynamics.BodyType,System.Int32,System.Object)">
            <summary>
            Duplicates the given Body along the given path for approximatly the given copies.
            </summary>
            <param name="world">The world.</param>
            <param name="path">The path.</param>
            <param name="shapes">The shapes.</param>
            <param name="type">The type.</param>
            <param name="copies">The copies.</param>
            <param name="userData"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PathManager.EvenlyDistributeShapesAlongPath(FarseerPhysics.Dynamics.World,FarseerPhysics.Common.Path,FarseerPhysics.Collision.Shapes.Shape,FarseerPhysics.Dynamics.BodyType,System.Int32,System.Object)">
            <summary>
            Duplicates the given Body along the given path for approximatly the given copies.
            </summary>
            <param name="world">The world.</param>
            <param name="path">The path.</param>
            <param name="shape">The shape.</param>
            <param name="type">The type.</param>
            <param name="copies">The copies.</param>
            <param name="userData">The user data.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PathManager.MoveBodyOnPath(FarseerPhysics.Common.Path,FarseerPhysics.Dynamics.Body,System.Single,System.Single,System.Single)">
            <summary>
            Moves the given body along the defined path.
            </summary>
            <param name="path">The path.</param>
            <param name="body">The body.</param>
            <param name="time">The time.</param>
            <param name="strength">The strength.</param>
            <param name="timeStep">The time step.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PathManager.AttachBodiesWithRevoluteJoint(FarseerPhysics.Dynamics.World,System.Collections.Generic.List{FarseerPhysics.Dynamics.Body},Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean)">
            <summary>
            Attaches the bodies with revolute joints.
            </summary>
            <param name="world">The world.</param>
            <param name="bodies">The bodies.</param>
            <param name="localAnchorA">The local anchor A.</param>
            <param name="localAnchorB">The local anchor B.</param>
            <param name="connectFirstAndLast">if set to <c>true</c> [connect first and last].</param>
            <param name="collideConnected">if set to <c>true</c> [collide connected].</param>
        </member>
        <member name="T:FarseerPhysics.Common.PhysicsLogic.FilterData">
            <summary>
            Contains filter data that can determine whether an object should be processed or not.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.FilterData.DisabledOnCategories">
            <summary>
            Disable the logic on specific categories.
            Category.None by default.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.FilterData.DisabledOnGroup">
            <summary>
            Disable the logic on specific groups
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.FilterData.EnabledOnCategories">
            <summary>
            Enable the logic on specific categories
            Category.All by default.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.FilterData.EnabledOnGroup">
            <summary>
            Enable the logic on specific groups.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.FilterData.IsActiveOn(FarseerPhysics.Dynamics.Body)">
            <summary>
            
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.FilterData.AddDisabledCategory(FarseerPhysics.Dynamics.Category)">
            <summary>
            Adds the category.
            </summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.FilterData.RemoveDisabledCategory(FarseerPhysics.Dynamics.Category)">
            <summary>
            Removes the category.
            </summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.FilterData.IsInDisabledCategory(FarseerPhysics.Dynamics.Category)">
            <summary>
            Determines whether this body ignores the the specified controller.
            </summary>
            <param name="category">The category.</param>
            <returns>
            	<c>true</c> if the object has the specified category; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.FilterData.AddEnabledCategory(FarseerPhysics.Dynamics.Category)">
            <summary>
            Adds the category.
            </summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.FilterData.RemoveEnabledCategory(FarseerPhysics.Dynamics.Category)">
            <summary>
            Removes the category.
            </summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.FilterData.IsInEnabledInCategory(FarseerPhysics.Dynamics.Category)">
            <summary>
            Determines whether this body ignores the the specified controller.
            </summary>
            <param name="category">The category.</param>
            <returns>
            	<c>true</c> if the object has the specified category; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.PhysicsLogicFilter.IgnorePhysicsLogic(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType)">
            <summary>
            Ignores the controller. The controller has no effect on this body.
            </summary>
            <param name="type">The logic type.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.PhysicsLogicFilter.RestorePhysicsLogic(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType)">
            <summary>
            Restore the controller. The controller affects this body.
            </summary>
            <param name="type">The logic type.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.PhysicsLogicFilter.IsPhysicsLogicIgnored(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType)">
            <summary>
            Determines whether this body ignores the the specified controller.
            </summary>
            <param name="type">The logic type.</param>
            <returns>
            	<c>true</c> if the body has the specified flag; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:FarseerPhysics.Common.PhysicsLogic.RayDataComparer">
            <summary>
            This is a comprarer used for 
            detecting angle difference between rays
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.PhysicsLogic.RealExplosion">
            <summary>
            Creates a realistic explosion based on raycasting. Objects in the open will be affected, but objects behind
            static bodies will not. A body that is half in cover, half in the open will get half the force applied to the end in
            the open.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.RealExplosion.MaxEdgeOffset">
            <summary>
            Two degrees: maximum angle from edges to first ray tested
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.RealExplosion.EdgeRatio">
            <summary>
            Ratio of arc length to angle from edges to first ray tested.
            Defaults to 1/40.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.RealExplosion.IgnoreWhenInsideShape">
            <summary>
            Ignore Explosion if it happens inside a shape.
            Default value is false.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.RealExplosion.MaxAngle">
            <summary>
            Max angle between rays (used when segment is large).
            Defaults to 15 degrees
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.RealExplosion.MaxShapes">
            <summary>
            Maximum number of shapes involved in the explosion.
            Defaults to 100
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PhysicsLogic.RealExplosion.MinRays">
            <summary>
            How many rays per shape/body/segment.
            Defaults to 5
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.RealExplosion.Activate(Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Activate the explosion at the specified position.
            </summary>
            <param name="pos">The position where the explosion happens </param>
            <param name="radius">The explosion radius </param>
            <param name="maxForce">The explosion force at the explosion point (then is inversely proportional to the square of the distance)</param>
            <returns>A list of bodies and the amount of force that was applied to them.</returns>
        </member>
        <member name="T:FarseerPhysics.Common.PhysicsLogic.SimpleExplosion">
            <summary>
            Creates a simple explosion that ignores other bodies hiding behind static bodies.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.PhysicsLogic.SimpleExplosion.Power">
            <summary>
            This is the power used in the power function. A value of 1 means the force
            applied to bodies in the explosion is linear. A value of 2 means it is exponential.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.PhysicsLogic.SimpleExplosion.Activate(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Single)">
            <summary>
            Activate the explosion at the specified position.
            </summary>
            <param name="pos">The position (center) of the explosion.</param>
            <param name="radius">The radius of the explosion.</param>
            <param name="force">The force applied</param>
            <param name="maxForce">A maximum amount of force. When force gets over this value, it will be equal to maxForce</param>
            <returns>A list of bodies and the amount of force that was applied to them.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.CuttingTools.SplitShape(FarseerPhysics.Dynamics.Fixture,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,FarseerPhysics.Common.Vertices@,FarseerPhysics.Common.Vertices@)">
            <summary>
            Split a fixture into 2 vertice collections using the given entry and exit-point.
            </summary>
            <param name="fixture">The Fixture to split</param>
            <param name="entryPoint">The entry point - The start point</param>
            <param name="exitPoint">The exit point - The end point</param>
            <param name="first">The first collection of vertexes</param>
            <param name="second">The second collection of vertexes</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.CuttingTools.Cut(FarseerPhysics.Dynamics.World,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            This is a high-level function to cuts fixtures inside the given world, using the start and end points.
            Note: We don't support cutting when the start or end is inside a shape.
            </summary>
            <param name="world">The world.</param>
            <param name="start">The startpoint.</param>
            <param name="end">The endpoint.</param>
            <returns>True if the cut was performed.</returns>
        </member>
        <member name="T:FarseerPhysics.Common.PolygonManipulation.SimpleCombiner">
            <summary>
            Combines a list of triangles into a list of convex polygons.
            Starts with a seed triangle, keep adding triangles to it until you can't add any more without making the polygon non-convex.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimpleCombiner.PolygonizeTriangles(System.Collections.Generic.List{FarseerPhysics.Common.Vertices},System.Int32,System.Single)">
             <summary>
             Combine a list of triangles into a list of convex polygons.
             
             Note: This only works on triangles.
             </summary>
            <param name="triangles">The triangles.</param>
            <param name="maxPolys">The maximun number of polygons to return.</param>
            <param name="tolerance">The tolerance</param>
        </member>
        <member name="T:FarseerPhysics.Common.PolygonManipulation.SimplifyTools">
            <summary>
            Provides a set of tools to simplify polygons in various ways.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimplifyTools.CollinearSimplify(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Removes all collinear points on the polygon.
            </summary>
            <param name="vertices">The polygon that needs simplification.</param>
            <param name="collinearityTolerance">The collinearity tolerance.</param>
            <returns>A simplified polygon.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimplifyTools.DouglasPeuckerSimplify(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Ramer-Douglas-Peucker polygon simplification algorithm. This is the general recursive version that does not use the
            speed-up technique by using the Melkman convex hull.
            
            If you pass in 0, it will remove all collinear points.
            </summary>
            <returns>The simplified polygon</returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimplifyTools.MergeParallelEdges(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Merges all parallel edges in the list of vertices
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="tolerance">The tolerance.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimplifyTools.MergeIdenticalPoints(FarseerPhysics.Common.Vertices)">
            <summary>
            Merges the identical points in the polygon.
            </summary>
            <param name="vertices">The vertices.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimplifyTools.ReduceByDistance(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Reduces the polygon by distance.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="distance">The distance between points. Points closer than this will be removed.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimplifyTools.ReduceByNth(FarseerPhysics.Common.Vertices,System.Int32)">
            <summary>
            Reduces the polygon by removing the Nth vertex in the vertices list.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="nth">The Nth point to remove. Example: 5.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.SimplifyTools.ReduceByArea(FarseerPhysics.Common.Vertices,System.Single)">
            <summary>
            Simplify the polygon by removing all points that in pairs of 3 have an area less than the tolerance.
            
            Pass in 0 as tolerance, and it will only remove collinear points.
            </summary>
            <param name="vertices"></param>
            <param name="areaTolerance"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Execute(FarseerPhysics.Common.Vertices,FarseerPhysics.Common.Vertices,FarseerPhysics.Common.PolygonManipulation.PolyClipType,FarseerPhysics.Common.PolygonManipulation.PolyClipError@)">
            <summary>
            Implements "A new algorithm for Boolean operations on general polygons" 
            available here: http://liama.ia.ac.cn/wiki/_media/user:dong:dong_cg_05.pdf
            Merges two polygons, a subject and a clip with the specified operation. Polygons may not be 
            self-intersecting.
            
            Warning: May yield incorrect results or even crash if polygons contain collinear points.
            </summary>
            <param name="subject">The subject polygon.</param>
            <param name="clip">The clip polygon, which is added, 
            substracted or intersected with the subject</param>
            <param name="clipType">The operation to be performed. Either
            Union, Difference or Intersection.</param>
            <param name="error">The error generated (if any)</param>
            <returns>A list of closed polygons, which make up the result of the clipping operation.
            Outer contours are ordered counter clockwise, holes are ordered clockwise.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.CalculateIntersections(FarseerPhysics.Common.Vertices,FarseerPhysics.Common.Vertices,FarseerPhysics.Common.Vertices@,FarseerPhysics.Common.Vertices@)">
            <summary>
            Calculates all intersections between two polygons.
            </summary>
            <param name="polygon1">The first polygon.</param>
            <param name="polygon2">The second polygon.</param>
            <param name="slicedPoly1">Returns the first polygon with added intersection points.</param>
            <param name="slicedPoly2">Returns the second polygon with added intersection points.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.CalculateSimplicalChain(FarseerPhysics.Common.Vertices,System.Collections.Generic.List{System.Single}@,System.Collections.Generic.List{FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge}@)">
            <summary>
            Calculates the simplical chain corresponding to the input polygon.
            </summary>
            <remarks>Used by method <c>Execute()</c>.</remarks>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.CalculateResultChain(System.Collections.Generic.List{System.Single},System.Collections.Generic.List{FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge},FarseerPhysics.Common.PolygonManipulation.PolyClipType,System.Collections.Generic.List{FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge}@)">
            <summary>
            Calculates the characteristics function for all edges of
            the given simplical chains and builds the result chain.
            </summary>
            <remarks>Used by method <c>Execute()</c>.</remarks>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.BuildPolygonsFromChain(System.Collections.Generic.List{FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge},System.Collections.Generic.List{FarseerPhysics.Common.Vertices}@)">
            <summary>
            Calculates the polygon(s) from the result simplical chain.
            </summary>
            <remarks>Used by method <c>Execute()</c>.</remarks>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.CalculateBeta(Microsoft.Xna.Framework.Vector2,FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge,System.Single)">
            <summary>
            Needed to calculate the characteristics function of a simplex.
            </summary>
            <remarks>Used by method <c>CalculateEdgeCharacter()</c>.</remarks>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.GetAlpha(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Needed for sorting multiple intersections points on the same edge.
            </summary>
            <remarks>Used by method <c>CalculateIntersections()</c>.</remarks>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.CalculateSimplexCoefficient(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns the coefficient of a simplex.
            </summary>
            <remarks>Used by method <c>CalculateSimplicalChain()</c>.</remarks>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.PointInSimplex(Microsoft.Xna.Framework.Vector2,FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge)">
            <summary>
            Winding number test for a point in a simplex.
            </summary>
            <param name="point">The point to be tested.</param>
            <param name="edge">The edge that the point is tested against.</param>
            <returns>False if the winding number is even and the point is outside
            the simplex and True otherwise.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.PointOnLineSegment(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Tests if a point lies on a line segment.
            </summary>
            <remarks>Used by method <c>CalculateBeta()</c>.</remarks>
        </member>
        <member name="T:FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge">
            <summary>Specifies an Edge. Edges are used to represent simplicies in simplical chains</summary>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateRectangle(System.Single,System.Single)">
            <summary>
            Build vertices to represent an axis-aligned box.
            </summary>
            <param name="hx">the half-width.</param>
            <param name="hy">the half-height.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateRectangle(System.Single,System.Single,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Build vertices to represent an oriented box.
            </summary>
            <param name="hx">the half-width.</param>
            <param name="hy">the half-height.</param>
            <param name="center">the center of the box in local coordinates.</param>
            <param name="angle">the rotation of the box in local coordinates.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateRoundedRectangle(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Creates a rounded rectangle with the specified width and height.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="xRadius">The rounding X radius.</param>
            <param name="yRadius">The rounding Y radius.</param>
            <param name="segments">The number of segments to subdivide the edges.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Set this as a single edge.
            </summary>
            <param name="start">The first point.</param>
            <param name="end">The second point.</param>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateCircle(System.Single,System.Int32)">
            <summary>
            Creates a circle with the specified radius and number of edges.
            </summary>
            <param name="radius">The radius.</param>
            <param name="numberOfEdges">The number of edges. The more edges, the more it resembles a circle</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateEllipse(System.Single,System.Single,System.Int32)">
            <summary>
            Creates a ellipse with the specified width, height and number of edges.
            </summary>
            <param name="xRadius">Width of the ellipse.</param>
            <param name="yRadius">Height of the ellipse.</param>
            <param name="numberOfEdges">The number of edges. The more edges, the more it resembles an ellipse</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateCapsule(System.Single,System.Single,System.Int32)">
            <summary>
            Creates an capsule with the specified height, radius and number of edges.
            A capsule has the same form as a pill capsule.
            </summary>
            <param name="height">Height (inner height + 2 * radius) of the capsule.</param>
            <param name="endRadius">Radius of the capsule ends.</param>
            <param name="edges">The number of edges of the capsule ends. The more edges, the more it resembles an capsule</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateCapsule(System.Single,System.Single,System.Int32,System.Single,System.Int32)">
            <summary>
            Creates an capsule with the specified  height, radius and number of edges.
            A capsule has the same form as a pill capsule.
            </summary>
            <param name="height">Height (inner height + radii) of the capsule.</param>
            <param name="topRadius">Radius of the top.</param>
            <param name="topEdges">The number of edges of the top. The more edges, the more it resembles an capsule</param>
            <param name="bottomRadius">Radius of bottom.</param>
            <param name="bottomEdges">The number of edges of the bottom. The more edges, the more it resembles an capsule</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreateGear(System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a gear shape with the specified radius and number of teeth.
            </summary>
            <param name="radius">The radius.</param>
            <param name="numberOfTeeth">The number of teeth.</param>
            <param name="tipPercentage">The tip percentage.</param>
            <param name="toothHeight">Height of the tooth.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreatePolygon(System.UInt32[],System.Int32)">
            <summary>
            Detects the vertices by analyzing the texture data.
            </summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreatePolygon(System.UInt32[],System.Int32,System.Boolean)">
            <summary>
            Detects the vertices by analyzing the texture data.
            </summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.PolygonTools.CreatePolygon(System.UInt32[],System.Int32,System.Single,System.Byte,System.Boolean,System.Boolean)">
            <summary>
            Detects the vertices by analyzing the texture data.
            </summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="hullTolerance">The hull tolerance.</param>
            <param name="alphaTolerance">The alpha tolerance.</param>
            <param name="multiPartDetection">if set to <c>true</c> it will perform multi part detection.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Common.WorldSerializer">
            <summary>
            Serialize the world into an XML file
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.Stopwatch">
            <summary>
            An emulation for the Stopwatch class for Windows Phone and Silverlight.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Stopwatch.StartNew">
            <summary>
            Creates a new instance of the class and starts the watch immediately.
            </summary>
            <returns>An instance of Stopwatch, running.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Stopwatch.#ctor">
            <summary>
            Creates an instance of the Stopwatch class.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Stopwatch.Reset">
            <summary>
            Completely resets and deactivates the timer.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Stopwatch.Start">
            <summary>
            Begins the timer.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Stopwatch.Stop">
            <summary>
            Stops the current timer.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.Stopwatch.IsRunning">
            <summary>
            Gets a value indicating whether the instance is currently recording.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.Stopwatch.Elapsed">
            <summary>
            Gets the Elapsed time as a Timespan.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.Stopwatch.ElapsedMilliseconds">
            <summary>
            Gets the Elapsed time as the total number of milliseconds.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.Stopwatch.ElapsedTicks">
            <summary>
            Gets the Elapsed time as the total number of ticks (which is faked
            as Silverlight doesn't have a way to get at the actual "Ticks")
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.DetectSquares(FarseerPhysics.Collision.AABB,System.Single,System.Single,System.SByte[0:,0:],System.Int32,System.Boolean)">
             <summary>
             Marching squares over the given domain using the mesh defined via the dimensions
                (wid,hei) to build a set of polygons such that f(x,y) less than 0, using the given number
                'bin' for recursive linear inteprolation along cell boundaries.
            
                if 'comb' is true, then the polygons will also be composited into larger possible concave
                polygons.
             </summary>
             <param name="domain"></param>
             <param name="cellWidth"></param>
             <param name="cellHeight"></param>
             <param name="f"></param>
             <param name="lerpCount"></param>
             <param name="combine"></param>
             <returns></returns>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.MarchingSquares._lookMarch">
            Linearly interpolate between (x0 to x1) given a value at these coordinates (v0 and v1)
                        such as to approximate value(return) = 0
                    *
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.Xlerp(System.Single,System.Single,System.Single,System.Single,System.Single,System.SByte[0:,0:],System.Int32)">
            Recursive linear interpolation for use in marching squares *
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.Ylerp(System.Single,System.Single,System.Single,System.Single,System.Single,System.SByte[0:,0:],System.Int32)">
            Recursive linear interpolation for use in marching squares *
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.Square(System.Single)">
            Square value for use in marching squares *
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.MarchSquare(System.SByte[0:,0:],System.SByte[0:,0:],FarseerPhysics.Common.TextureTools.MarchingSquares.GeomPoly@,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            Look-up table to relate polygon key with the vertices that should be used for
                        the sub polygon in marching squares
                    *
            Perform a single celled marching square for for the given cell defined by (x0,y0) (x1,y1)
                        using the function f for recursive interpolation, given the look-up table 'fs' of
                        the values of 'f' at cell vertices with the result to be stored in 'poly' given the actual
                        coordinates of 'ax' 'ay' in the marching squares mesh.
                    *
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.combLeft(FarseerPhysics.Common.TextureTools.MarchingSquares.GeomPoly@,FarseerPhysics.Common.TextureTools.MarchingSquares.GeomPoly@)">
            Used in polygon composition to composit polygons into scan lines
                        Combining polya and polyb into one super-polygon stored in polya.
                    *
        </member>
        <member name="T:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1">
            <summary>
            Designed as a complete port of CxFastList from CxStd.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Begin">
            <summary>
            Iterator to start of list (O(1))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.End">
            <summary>
            Iterator to end of list (O(1))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Front">
            <summary>
            Returns first element of list (O(1))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Add(`0)">
            <summary>
            add object to list (O(1))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Remove(`0)">
            <summary>
            remove object from list, returns true if an element was removed (O(n))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Pop">
            <summary>
            pop element from head of list (O(1)) Note: this does not return the object popped! 
            There is good reason to this, and it regards the Alloc list variants which guarantee 
            objects are released to the object pool. You do not want to retrieve an element 
            through pop or else that object may suddenly be used by another piece of code which 
            retrieves it from the object pool.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Insert(FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastListNode{`0},`0)">
            <summary>
            insert object after 'node' returning an iterator to the inserted object.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Erase(FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastListNode{`0},FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastListNode{`0})">
            <summary>
            removes the element pointed to by 'node' with 'prev' being the previous iterator, 
            returning an iterator to the element following that of 'node' (O(1))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Empty">
            <summary>
            whether the list is empty (O(1))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Size">
            <summary>
            computes size of list (O(n))
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Clear">
            <summary>
            empty the list (O(1) if CxMixList, O(n) otherwise)
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList`1.Has(`0)">
            <summary>
            returns true if 'value' is an element of the list (O(n))
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.MarchingSquares.GeomPolyVal.Key">
            Associated polygon at coordinate *
            Key of original sub-polygon *
        </member>
        <member name="T:FarseerPhysics.Common.TextureTools.Terrain">
            <summary>
            Simple class to maintain a terrain. It can keep track
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.World">
            <summary>
            World to manage terrain in.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.Center">
            <summary>
            Center of terrain in world units.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.Width">
            <summary>
            Width of terrain in world units.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.Height">
            <summary>
            Height of terrain in world units.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.PointsPerUnit">
            <summary>
            Points per each world unit used to define the terrain in the point cloud.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.CellSize">
            <summary>
            Points per cell.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.SubCellSize">
            <summary>
            Points per sub cell.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.Iterations">
            <summary>
            Number of iterations to perform in the Marching Squares algorithm.
            Note: More then 3 has almost no effect on quality.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain.Decomposer">
            <summary>
            Decomposer to use when regenerating terrain. Can be changed on the fly without consequence.
            Note: Some decomposerers are unstable.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain._terrainMap">
            <summary>
            Point cloud defining the terrain.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.Terrain._bodyMap">
            <summary>
            Generated bodies.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.Terrain.#ctor(FarseerPhysics.Dynamics.World,FarseerPhysics.Collision.AABB)">
            <summary>
            Creates a new terrain.
            </summary>
            <param name="world">The World</param>
            <param name="area">The area of the terrain.</param>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.Terrain.#ctor(FarseerPhysics.Dynamics.World,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Creates a new terrain
            </summary>
            <param name="world">The World</param>
            <param name="position">The position (center) of the terrain.</param>
            <param name="width">The width of the terrain.</param>
            <param name="height">The height of the terrain.</param>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.Terrain.Initialize">
            <summary>
            Initialize the terrain for use.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.Terrain.ApplyData(System.SByte[0:,0:],Microsoft.Xna.Framework.Vector2)">
            <summary>
            Apply the specified texture data to the terrain.
            </summary>
            <param name="data"></param>
            <param name="offset"></param>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.Terrain.ModifyTerrain(Microsoft.Xna.Framework.Vector2,System.SByte)">
            <summary>
            Modify a single point in the terrain.
            </summary>
            <param name="location">World location to modify. Automatically clipped.</param>
            <param name="value">-1 = inside terrain, 1 = outside terrain</param>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.Terrain.RegenerateTerrain">
            <summary>
            Regenerate the terrain.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Common.TextureTools.VerticesDetectionType">
            <summary>
            The detection type affects the resulting polygon data.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.VerticesDetectionType.Integrated">
            <summary>
            Holes are integrated into the main polygon.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.VerticesDetectionType.Separated">
            <summary>
            The data of the main polygon and hole polygons is returned separately.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.TextureTools.TextureConverter._closePixels">
            <summary>
            This array is ment to be readonly.
            It's not because it is accessed very frequently.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.TextureTools.TextureConverter.PolygonDetectionType">
            <summary>
            Get or set the polygon detection type.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.TextureTools.TextureConverter.HoleDetection">
            <summary>
            Will detect texture 'holes' if set to true. Slows down the detection. Default is false.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.TextureTools.TextureConverter.MultipartDetection">
            <summary>
            Will detect texture multiple 'solid' isles if set to true. Slows down the detection. Default is false.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.TextureTools.TextureConverter.PixelOffsetOptimization">
            <summary>
            Will optimize the vertex positions along the interpolated normal between two edges about a half pixel (post processing). Default is false.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.TextureTools.TextureConverter.Transform">
            <summary>
            Can be used for scaling.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.TextureTools.TextureConverter.AlphaTolerance">
            <summary>
            Alpha (coverage) tolerance. Default is 20: Every pixel with a coverage value equal or greater to 20 will be counts as solid.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.TextureTools.TextureConverter.HullTolerance">
            <summary>
            Default is 1.5f.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.TextureConverter.DetectVertices(System.UInt32[],System.Int32)">
            <summary>
            Detects the vertices of the supplied texture data. (PolygonDetectionType.Integrated)
            </summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.TextureConverter.DetectVertices(System.UInt32[],System.Int32,System.Boolean)">
            <summary>
            Detects the vertices of the supplied texture data.
            </summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.TextureConverter.DetectVertices(System.UInt32[],System.Int32,System.Single,System.Byte,System.Boolean,System.Boolean)">
            <summary>
            Detects the vertices of the supplied texture data.
            </summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <param name="hullTolerance">The hull tolerance.</param>
            <param name="alphaTolerance">The alpha tolerance.</param>
            <param name="multiPartDetection">if set to <c>true</c> it will perform multi part detection.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.TextureConverter.SearchHoleEntrance(FarseerPhysics.Common.Vertices,System.Nullable{Microsoft.Xna.Framework.Vector2})">
            <summary>
            Function to search for an entrance point of a hole in a polygon. It searches the polygon from top to bottom between the polygon edges.
            </summary>
            <param name="polygon">The polygon to search in.</param>
            <param name="lastHoleEntrance">The last entrance point.</param>
            <returns>The next holes entrance point. Null if ther are no holes.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.TextureConverter.SearchCrossingEdges(FarseerPhysics.Common.Vertices,System.Int32)">
            <summary>
            Searches the polygon for the x coordinates of the edges that cross the specified y coordinate.
            </summary>
            <param name="polygon">Polygon to search in.</param>
            <param name="y">Y coordinate to check for edges.</param>
            <returns>Descending sorted list of x coordinates of edges that cross the specified y coordinate.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.TextureConverter.CreateSimplePolygon(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="entrance"></param>
            <param name="last"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.TextureTools.TextureConverter.SearchNextHullEntrance(System.Collections.Generic.List{FarseerPhysics.Common.Vertices},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2}@)">
            <summary>
            Searches for the next shape.
            </summary>
            <param name="detectedPolygons">Already detected polygons.</param>
            <param name="start">Search start coordinate.</param>
            <param name="entrance">Returns the found entrance coordinate. Null if no other shapes found.</param>
            <returns>True if a new shape was found.</returns>
        </member>
        <member name="F:FarseerPhysics.Common.PolygonError.NoError">
            <summary>
            There were no errors in the polygon
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PolygonError.InvalidAmountOfVertices">
            <summary>
            Polygon must have between 3 and Settings.MaxPolygonVertices vertices.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PolygonError.NotSimple">
            <summary>
            Polygon must be simple. This means no overlapping edges.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PolygonError.NotCounterClockWise">
            <summary>
            Polygon must have a counter clockwise winding.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PolygonError.NotConvex">
            <summary>
            The polygon is concave, it needs to be convex.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PolygonError.AreaTooSmall">
            <summary>
            Polygon area is too small.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Common.PolygonError.SideTooSmall">
            <summary>
            The polygon has a side that is too short.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Common.Vertices.Holes">
            <summary>
            You can add holes to this collection.
            It will get respected by some of the triangulation algoithms, but otherwise not used.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.NextIndex(System.Int32)">
            <summary>
            Gets the next index. Used for iterating all the edges with wrap-around.
            </summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.NextVertex(System.Int32)">
            <summary>
            Gets the next vertex. Used for iterating all the edges with wrap-around.
            </summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.PreviousIndex(System.Int32)">
            <summary>
            Gets the previous index. Used for iterating all the edges with wrap-around.
            </summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.PreviousVertex(System.Int32)">
            <summary>
            Gets the previous vertex. Used for iterating all the edges with wrap-around.
            </summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.GetSignedArea">
            <summary>
            Gets the signed area.
            If the area is less than 0, it indicates that the polygon is clockwise winded.
            </summary>
            <returns>The signed area</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.GetArea">
            <summary>
            Gets the area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.GetCentroid">
            <summary>
            Gets the centroid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.GetAABB">
            <summary>
            Returns an AABB that fully contains this polygon.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.Translate(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Translates the vertices with the specified vector.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.Translate(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Translates the vertices with the specified vector.
            </summary>
            <param name="value">The vector.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.Scale(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Scales the vertices with the specified vector.
            </summary>
            <param name="value">The Value.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.Scale(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Scales the vertices with the specified vector.
            </summary>
            <param name="value">The Value.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.Rotate(System.Single)">
            <summary>
            Rotate the vertices with the defined value in radians.
            
            Warning: Using this method on an active set of vertices of a Body,
            will cause problems with collisions. Use Body.Rotation instead.
            </summary>
            <param name="value">The amount to rotate by in radians.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.IsConvex">
            <summary>
            Determines whether the polygon is convex.
            O(n^2) running time.
            
            Assumptions:
            - The polygon is in counter clockwise order
            - The polygon has no overlapping edges
            </summary>
            <returns>
            	<c>true</c> if it is convex; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.IsCounterClockWise">
            <summary>
            Indicates if the vertices are in counter clockwise order.
            Warning: If the area of the polygon is 0, it is unable to determine the winding.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.ForceCounterClockWise">
            <summary>
            Forces the vertices to be counter clock wise order.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.IsSimple">
            <summary>
            Checks if the vertices forms an simple polygon by checking for edge crossings.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.CheckPolygon">
             <summary>
             Checks if the polygon is valid for use in the engine.
            
             Performs a full check, for simplicity, convexity,
             orientation, minimum angle, and volume.
             
             From Eric Jordan's convex decomposition library
             </summary>
             <returns>PolygonError.NoError if there were no error.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.ProjectToAxis(Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single@)">
            <summary>
            Projects to axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.PointInPolygon(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Winding number test for a point in a polygon.
            </summary>
            See more info about the algorithm here: http://softsurfer.com/Archive/algorithm_0103/algorithm_0103.htm
            <param name="point">The point to be tested.</param>
            <returns>-1 if the winding number is zero and the point is outside
            the polygon, 1 if the point is inside the polygon, and 0 if the point
            is on the polygons edge.</returns>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.PointInPolygonAngle(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Compute the sum of the angles made between the test point and each pair of points making up the polygon. 
            If this sum is 2pi then the point is an interior point, if 0 then the point is an exterior point. 
            ref: http://ozviz.wasp.uwa.edu.au/~pbourke/geometry/insidepoly/  - Solution 2 
            </summary>
        </member>
        <member name="M:FarseerPhysics.Common.Vertices.Transform(Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Transforms the polygon using the defined matrix.
            </summary>
            <param name="transform">The matrix to use as transformation.</param>
        </member>
        <member name="T:FarseerPhysics.Controllers.AbstractForceController.DecayModes">
            <summary>
            Modes for Decay. Actual Decay must be implemented in inheriting 
            classes
            </summary>
        </member>
        <member name="T:FarseerPhysics.Controllers.AbstractForceController.ForceTypes">
            <summary>
            Forcetypes are used in the decay math to properly get the distance.
            They are also used to draw a representation in DebugView
            </summary>
        </member>
        <member name="T:FarseerPhysics.Controllers.AbstractForceController.TimingModes">
            <summary>
            Timing Modes
            Switched: Standard on/off mode using the baseclass enabled property
            Triggered: When the Trigger() method is called the force is active 
            for a specified Impulse Length
            Curve: Still to be defined. The basic idea is having a Trigger 
            combined with a curve for the strength
            </summary>
        </member>
        <member name="F:FarseerPhysics.Controllers.AbstractForceController.DecayCurve">
            <summary>
            Curve to be used for Decay in Curve mode
            </summary>
        </member>
        <member name="F:FarseerPhysics.Controllers.AbstractForceController.ForceType">
            <summary>
            The Forcetype of the instance
            </summary>
        </member>
        <member name="F:FarseerPhysics.Controllers.AbstractForceController.Randomize">
            <summary>
            Provided for reuse to provide Variation functionality in 
            inheriting classes
            </summary>
        </member>
        <member name="F:FarseerPhysics.Controllers.AbstractForceController.StrengthCurve">
            <summary>
            Curve used by Curve Mode as an animated multiplier for the force 
            strength.
            Only positions between 0 and 1 are considered as that range is 
            stretched to have ImpulseLength.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Controllers.AbstractForceController.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FarseerPhysics.Controllers.AbstractForceController.#ctor(FarseerPhysics.Controllers.AbstractForceController.TimingModes)">
            <summary>
            Overloaded Contstructor with supplying Timing Mode
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.Strength">
            <summary>
            Global Strength of the force to be applied
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.Position">
            <summary>
            Position of the Force. Can be ignored (left at (0,0) for forces
            that are not position-dependent
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.MaximumSpeed">
            <summary>
            Maximum speed of the bodies. Bodies that are travelling faster are
            supposed to be ignored
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.MaximumForce">
            <summary>
            Maximum Force to be applied. As opposed to Maximum Speed this is 
            independent of the velocity of
            the affected body
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.TimingMode">
            <summary>
            Timing Mode of the force instance
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.ImpulseTime">
            <summary>
            Time of the current impulse. Incremented in update till 
            ImpulseLength is reached
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.ImpulseLength">
            <summary>
            Length of a triggered impulse. Used in both Triggered and Curve Mode
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.Triggered">
            <summary>
            Indicating if we are currently during an Impulse 
            (Triggered and Curve Mode)
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.Variation">
            <summary>
            Variation of the force applied to each body affected
            !! Must be used in inheriting classes properly !!
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.DecayMode">
            <summary>
            See DecayModes
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.DecayStart">
            <summary>
            Start of the distance based Decay. To set a non decaying area
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.AbstractForceController.DecayEnd">
            <summary>
            Maximum distance a force should be applied
            </summary>
        </member>
        <member name="M:FarseerPhysics.Controllers.AbstractForceController.GetDecayMultiplier(FarseerPhysics.Dynamics.Body)">
            <summary>
            Calculate the Decay for a given body. Meant to ease force 
            development and stick to the DRY principle and provide unified and 
            predictable decay math.
            </summary>
            <param name="body">The body to calculate decay for</param>
            <returns>A multiplier to multiply the force with to add decay 
            support in inheriting classes</returns>
        </member>
        <member name="M:FarseerPhysics.Controllers.AbstractForceController.Trigger">
            <summary>
            Triggers the trigger modes (Trigger and Curve)
            </summary>
        </member>
        <member name="M:FarseerPhysics.Controllers.AbstractForceController.Update(System.Single)">
            <summary>
            Inherited from Controller
            Depending on the TimingMode perform timing logic and call ApplyForce()
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:FarseerPhysics.Controllers.AbstractForceController.ApplyForce(System.Single,System.Single)">
            <summary>
            Apply the force supplying strength (wich is modified in Update() 
            according to the TimingMode
            </summary>
            <param name="dt"></param>
            <param name="strength">The strength</param>
        </member>
        <member name="F:FarseerPhysics.Controllers.BuoyancyController.AngularDragCoefficient">
            <summary>
            Controls the rotational drag that the fluid exerts on the bodies within it. Use higher values will simulate thick fluid, like honey, lower values to
            simulate water-like fluids. 
            </summary>
        </member>
        <member name="F:FarseerPhysics.Controllers.BuoyancyController.Density">
            <summary>
            Density of the fluid. Higher values will make things more buoyant, lower values will cause things to sink.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Controllers.BuoyancyController.LinearDragCoefficient">
            <summary>
            Controls the linear drag that the fluid exerts on the bodies within it.  Use higher values will simulate thick fluid, like honey, lower values to
            simulate water-like fluids.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Controllers.BuoyancyController.Velocity">
            <summary>
            Acts like waterflow. Defaults to 0,0.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Controllers.BuoyancyController.#ctor(FarseerPhysics.Collision.AABB,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Controllers.BuoyancyController"/> class.
            </summary>
            <param name="container">Only bodies inside this AABB will be influenced by the controller</param>
            <param name="density">Density of the fluid</param>
            <param name="linearDragCoefficient">Linear drag coefficient of the fluid</param>
            <param name="rotationalDragCoefficient">Rotational drag coefficient of the fluid</param>
            <param name="gravity">The direction gravity acts. Buoyancy force will act in opposite direction of gravity.</param>
        </member>
        <member name="M:FarseerPhysics.Controllers.ControllerFilter.IgnoreController(FarseerPhysics.Controllers.ControllerType)">
            <summary>
            Ignores the controller. The controller has no effect on this body.
            </summary>
            <param name="controller">The controller type.</param>
        </member>
        <member name="M:FarseerPhysics.Controllers.ControllerFilter.RestoreController(FarseerPhysics.Controllers.ControllerType)">
            <summary>
            Restore the controller. The controller affects this body.
            </summary>
            <param name="controller">The controller type.</param>
        </member>
        <member name="M:FarseerPhysics.Controllers.ControllerFilter.IsControllerIgnored(FarseerPhysics.Controllers.ControllerType)">
            <summary>
            Determines whether this body ignores the the specified controller.
            </summary>
            <param name="controller">The controller type.</param>
            <returns>
            	<c>true</c> if the body has the specified flag; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:FarseerPhysics.Controllers.SimpleWindForce">
            <summary>
            Reference implementation for forces based on AbstractForceController
            It supports all features provided by the base class and illustrates proper
            usage as an easy to understand example.
            As a side-effect it is a nice and easy to use wind force for your projects
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.SimpleWindForce.Direction">
            <summary>
            Direction of the windforce
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.SimpleWindForce.Divergence">
            <summary>
            The amount of Direction randomization. Allowed range is 0-1.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Controllers.SimpleWindForce.IgnorePosition">
            <summary>
            Ignore the position and apply the force. If off only in the "front" (relative to position and direction)
            will be affected
            </summary>
        </member>
        <member name="T:FarseerPhysics.Controllers.VelocityLimitController">
            <summary>
            Put a limit on the linear (translation - the movespeed) and angular (rotation) velocity
            of bodies added to this controller.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Controllers.VelocityLimitController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Controllers.VelocityLimitController"/> class.
            Sets the max linear velocity to Settings.MaxTranslation
            Sets the max angular velocity to Settings.MaxRotation
            </summary>
        </member>
        <member name="M:FarseerPhysics.Controllers.VelocityLimitController.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Controllers.VelocityLimitController"/> class.
            Pass in 0 or float.MaxValue to disable the limit.
            maxAngularVelocity = 0 will disable the angular velocity limit.
            </summary>
            <param name="maxLinearVelocity">The max linear velocity.</param>
            <param name="maxAngularVelocity">The max angular velocity.</param>
        </member>
        <member name="P:FarseerPhysics.Controllers.VelocityLimitController.MaxAngularVelocity">
            <summary>
            Gets or sets the max angular velocity.
            </summary>
            <value>The max angular velocity.</value>
        </member>
        <member name="P:FarseerPhysics.Controllers.VelocityLimitController.MaxLinearVelocity">
            <summary>
            Gets or sets the max linear velocity.
            </summary>
            <value>The max linear velocity.</value>
        </member>
        <member name="T:FarseerPhysics.ConvertUnits">
            <summary>
            Convert units between display and simulation units.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.Shape">
            <summary>
            Draw shapes.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.Joint">
            <summary>
            Draw joint connections.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.AABB">
            <summary>
            Draw axis aligned bounding boxes.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.CenterOfMass">
            <summary>
            Draw center of mass frame.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.DebugPanel">
            <summary>
            Draw useful debug data such as timings and number of bodies, joints, contacts and more.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.ContactPoints">
            <summary>
            Draw contact points between colliding bodies.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.ContactNormals">
            <summary>
            Draw contact normals. Need ContactPoints to be enabled first.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.PolygonPoints">
            <summary>
            Draws the vertices of polygons.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.PerformanceGraph">
            <summary>
            Draws the performance graph.
            </summary>
        </member>
        <member name="F:FarseerPhysics.DebugViewFlags.Controllers">
            <summary>
            Draws controllers.
            </summary>
        </member>
        <member name="T:FarseerPhysics.DebugViewBase">
            Implement and register this class with a World to provide debug drawing of physics
            entities in your game.
        </member>
        <member name="P:FarseerPhysics.DebugViewBase.Flags">
            <summary>
            Gets or sets the debug view flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.AppendFlags(FarseerPhysics.DebugViewFlags)">
            <summary>
            Append flags to the current flags.
            </summary>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.RemoveFlags(FarseerPhysics.DebugViewFlags)">
            <summary>
            Remove flags from the current flags.
            </summary>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.DrawPolygon(Microsoft.Xna.Framework.Vector2[],System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Draw a closed polygon provided in CCW order.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="count">The vertex count.</param>
            <param name="red">The red value.</param>
            <param name="blue">The blue value.</param>
            <param name="green">The green value.</param>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.DrawSolidPolygon(Microsoft.Xna.Framework.Vector2[],System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Draw a solid closed polygon provided in CCW order.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="count">The vertex count.</param>
            <param name="red">The red value.</param>
            <param name="blue">The blue value.</param>
            <param name="green">The green value.</param>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.DrawCircle(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw a circle.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
            <param name="red">The red value.</param>
            <param name="blue">The blue value.</param>
            <param name="green">The green value.</param>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.DrawSolidCircle(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Single)">
            <summary>
            Draw a solid circle.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
            <param name="axis">The axis.</param>
            <param name="red">The red value.</param>
            <param name="blue">The blue value.</param>
            <param name="green">The green value.</param>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.DrawSegment(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Single)">
            <summary>
            Draw a line segment.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="red">The red value.</param>
            <param name="blue">The blue value.</param>
            <param name="green">The green value.</param>
        </member>
        <member name="M:FarseerPhysics.DebugViewBase.DrawTransform(FarseerPhysics.Common.Transform@)">
            <summary>
            Draw a transform. Choose your own length scale.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="T:FarseerPhysics.Dynamics.BodyType">
            <summary>
            The body type.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.BodyType.Static">
            <summary>
            Zero velocity, may be manually moved. Note: even static bodies have mass.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.BodyType.Kinematic">
            <summary>
            Zero mass, non-zero velocity set by user, moved by solver
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.BodyType.Dynamic">
            <summary>
            Positive mass, non-zero velocity determined by forces, moved by solver
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.GravityScale">
            Scale the gravity applied to this body.
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.UserData">
            <summary>
            Set the user data. Use this to store your application specific data.
            </summary>
            <value>The user data.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.Revolutions">
            <summary>
            Gets the total number revolutions the body has made.
            </summary>
            <value>The revolutions.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.BodyType">
            <summary>
            Gets or sets the body type.
            Warning: Calling this mid-update might cause a crash.
            </summary>
            <value>The type of body.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.LinearVelocity">
            <summary>
            Get or sets the linear velocity of the center of mass.
            </summary>
            <value>The linear velocity.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.AngularVelocity">
            <summary>
            Gets or sets the angular velocity. Radians/second.
            </summary>
            <value>The angular velocity.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.LinearDamping">
            <summary>
            Gets or sets the linear damping.
            </summary>
            <value>The linear damping.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.AngularDamping">
            <summary>
            Gets or sets the angular damping.
            </summary>
            <value>The angular damping.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.IsBullet">
            <summary>
            Gets or sets a value indicating whether this body should be included in the CCD solver.
            </summary>
            <value><c>true</c> if this instance is included in CCD; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.SleepingAllowed">
            <summary>
            You can disable sleeping on this body. If you disable sleeping, the
            body will be woken.
            </summary>
            <value><c>true</c> if sleeping is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.Awake">
            <summary>
            Set the sleep state of the body. A sleeping body has very
            low CPU cost.
            </summary>
            <value><c>true</c> if awake; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.Enabled">
            <summary>
            Set the active state of the body. An inactive body is not
            simulated and cannot be collided with or woken up.
            If you pass a flag of true, all fixtures will be added to the
            broad-phase.
            If you pass a flag of false, all fixtures will be removed from
            the broad-phase and all contacts will be destroyed.
            Fixtures and joints are otherwise unaffected. You may continue
            to create/destroy fixtures and joints on inactive bodies.
            Fixtures on an inactive body are implicitly inactive and will
            not participate in collisions, ray-casts, or queries.
            Joints connected to an inactive body are implicitly inactive.
            An inactive body is still owned by a b2World object and remains
            in the body list.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.FixedRotation">
            <summary>
            Set this body to have fixed rotation. This causes the mass
            to be reset.
            </summary>
            <value><c>true</c> if it has fixed rotation; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.FixtureList">
            <summary>
            Gets all the fixtures attached to this body.
            </summary>
            <value>The fixture list.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.JointList">
            <summary>
            Get the list of all joints attached to this body.
            </summary>
            <value>The joint list.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.ContactList">
            <summary>
            Get the list of all contacts attached to this body.
            Warning: this list changes during the time step and you may
            miss some collisions if you don't use ContactListener.
            </summary>
            <value>The contact list.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.Position">
            <summary>
            Get the world body origin position.
            </summary>
            <returns>Return the world position of the body's origin.</returns>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.Rotation">
            <summary>
            Get the angle in radians.
            </summary>
            <returns>Return the current world rotation angle in radians.</returns>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.IsStatic">
            <summary>
            Gets or sets a value indicating whether this body is static.
            </summary>
            <value><c>true</c> if this instance is static; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.IsKinematic">
            <summary>
            Gets or sets a value indicating whether this body is kinematic.
            </summary>
            <value><c>true</c> if this instance is kinematic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.IgnoreGravity">
            <summary>
            Gets or sets a value indicating whether this body ignores gravity.
            </summary>
            <value><c>true</c> if  it ignores gravity; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.WorldCenter">
            <summary>
            Get the world position of the center of mass.
            </summary>
            <value>The world position.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.LocalCenter">
            <summary>
            Get the local position of the center of mass.
            </summary>
            <value>The local position.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.Mass">
            <summary>
            Gets or sets the mass. Usually in kilograms (kg).
            </summary>
            <value>The mass.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.Inertia">
            <summary>
            Get or set the rotational inertia of the body about the local origin. usually in kg-m^2.
            </summary>
            <value>The inertia.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Body.IgnoreCCDWith">
            <summary>
            Body objects can define which categories of bodies they wish to ignore CCD with. 
            This allows certain bodies to be configured to ignore CCD with objects that
            aren't a penetration problem due to the way content has been prepared.
            This is compared against the other Body's fixture CollisionCategories within World.SolveTOI().
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ResetDynamics">
            <summary>
            Resets the dynamics of this body.
            Sets torque, force and linear/angular velocity to 0
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.CreateFixture(FarseerPhysics.Collision.Shapes.Shape,System.Object)">
            <summary>
            Creates a fixture and attach it to this body.
            If the density is non-zero, this function automatically updates the mass of the body.
            Contacts are not created until the next time step.
            Warning: This function is locked during callbacks.
            </summary>
            <param name="shape">The shape.</param>
            <param name="userData">Application specific data</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.DestroyFixture(FarseerPhysics.Dynamics.Fixture)">
            <summary>
            Destroy a fixture. This removes the fixture from the broad-phase and
            destroys all contacts associated with this fixture. This will
            automatically adjust the mass of the body if the body is dynamic and the
            fixture has positive density.
            All fixtures attached to a body are implicitly destroyed when the body is destroyed.
            Warning: This function is locked during callbacks.
            </summary>
            <param name="fixture">The fixture to be removed.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.SetTransform(Microsoft.Xna.Framework.Vector2@,System.Single)">
            <summary>
            Set the position of the body's origin and rotation.
            This breaks any contacts and wakes the other bodies.
            Manipulating a body's transform may cause non-physical behavior.
            </summary>
            <param name="position">The world position of the body's local origin.</param>
            <param name="rotation">The world rotation in radians.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.SetTransform(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Set the position of the body's origin and rotation.
            This breaks any contacts and wakes the other bodies.
            Manipulating a body's transform may cause non-physical behavior.
            </summary>
            <param name="position">The world position of the body's local origin.</param>
            <param name="rotation">The world rotation in radians.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.SetTransformIgnoreContacts(Microsoft.Xna.Framework.Vector2@,System.Single)">
            <summary>
            For teleporting a body without considering new contacts immediately.
            </summary>
            <param name="position">The position.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetTransform(FarseerPhysics.Common.Transform@)">
            <summary>
            Get the body transform for the body's origin.
            </summary>
            <param name="transform">The transform of the body's origin.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyForce(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Apply a force at a world point. If the force is not
            applied at the center of mass, it will generate a torque and
            affect the angular velocity. This wakes up the body.
            </summary>
            <param name="force">The world force vector, usually in Newtons (N).</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyForce(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Applies a force at the center of mass.
            </summary>
            <param name="force">The force.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyForce(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Applies a force at the center of mass.
            </summary>
            <param name="force">The force.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyForce(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Apply a force at a world point. If the force is not
            applied at the center of mass, it will generate a torque and
            affect the angular velocity. This wakes up the body.
            </summary>
            <param name="force">The world force vector, usually in Newtons (N).</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyTorque(System.Single)">
            <summary>
            Apply a torque. This affects the angular velocity
            without affecting the linear velocity of the center of mass.
            This wakes up the body.
            </summary>
            <param name="torque">The torque about the z-axis (out of the screen), usually in N-m.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyLinearImpulse(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Apply an impulse at a point. This immediately modifies the velocity.
            This wakes up the body.
            </summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyLinearImpulse(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Apply an impulse at a point. This immediately modifies the velocity.
            It also modifies the angular velocity if the point of application
            is not at the center of mass.
            This wakes up the body.
            </summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyLinearImpulse(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Apply an impulse at a point. This immediately modifies the velocity.
            This wakes up the body.
            </summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyLinearImpulse(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Apply an impulse at a point. This immediately modifies the velocity.
            It also modifies the angular velocity if the point of application
            is not at the center of mass.
            This wakes up the body.
            </summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ApplyAngularImpulse(System.Single)">
            <summary>
            Apply an angular impulse.
            </summary>
            <param name="impulse">The angular impulse in units of kg*m*m/s.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ResetMassData">
            <summary>
            This resets the mass properties to the sum of the mass properties of the fixtures.
            This normally does not need to be called unless you called SetMassData to override
            the mass and you later want to reset the mass.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetWorldPoint(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Get the world coordinates of a point given the local coordinates.
            </summary>
            <param name="localPoint">A point on the body measured relative the the body's origin.</param>
            <returns>The same point expressed in world coordinates.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetWorldPoint(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Get the world coordinates of a point given the local coordinates.
            </summary>
            <param name="localPoint">A point on the body measured relative the the body's origin.</param>
            <returns>The same point expressed in world coordinates.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetWorldVector(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Get the world coordinates of a vector given the local coordinates.
            Note that the vector only takes the rotation into account, not the position.
            </summary>
            <param name="localVector">A vector fixed in the body.</param>
            <returns>The same vector expressed in world coordinates.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetWorldVector(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Get the world coordinates of a vector given the local coordinates.
            </summary>
            <param name="localVector">A vector fixed in the body.</param>
            <returns>The same vector expressed in world coordinates.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLocalPoint(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets a local point relative to the body's origin given a world point.
            Note that the vector only takes the rotation into account, not the position.
            </summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The corresponding local point relative to the body's origin.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLocalPoint(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets a local point relative to the body's origin given a world point.
            </summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The corresponding local point relative to the body's origin.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLocalVector(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Gets a local vector given a world vector.
            Note that the vector only takes the rotation into account, not the position.
            </summary>
            <param name="worldVector">A vector in world coordinates.</param>
            <returns>The corresponding local vector.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLocalVector(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets a local vector given a world vector.
            Note that the vector only takes the rotation into account, not the position.
            </summary>
            <param name="worldVector">A vector in world coordinates.</param>
            <returns>The corresponding local vector.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLinearVelocityFromWorldPoint(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Get the world linear velocity of a world point attached to this body.
            </summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLinearVelocityFromWorldPoint(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Get the world linear velocity of a world point attached to this body.
            </summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLinearVelocityFromLocalPoint(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Get the world velocity of a local point.
            </summary>
            <param name="localPoint">A point in local coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.GetLinearVelocityFromLocalPoint(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Get the world velocity of a local point.
            </summary>
            <param name="localPoint">A point in local coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.ShouldCollide(FarseerPhysics.Dynamics.Body)">
            <summary>
            This is used to prevent connected bodies from colliding.
            It may lie, depending on the collideConnected flag.
            </summary>
            <param name="other">The other body.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.Clone(FarseerPhysics.Dynamics.World)">
            <summary>
            Makes a clone of the body. Fixtures and therefore shapes are not included.
            Use DeepClone() to clone the body, as well as fixtures and shapes.
            </summary>
            <param name="world"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Body.DeepClone(FarseerPhysics.Dynamics.World)">
            <summary>
            Clones the body and all attached fixtures and shapes. Simply said, it makes a complete copy of the body.
            </summary>
            <param name="world"></param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Dynamics.BreakableBody">
            <summary>
            A type of body that supports multiple fixtures that can break apart.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.BreakableBody.Strength">
            <summary>
            The force needed to break the body apart.
            Default: 500
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.ContactManager.BeginContact">
            <summary>
            Fires when a contact is created
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.ContactManager.ContactFilter">
            <summary>
            The filter used by the contact manager.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.ContactManager.EndContact">
            <summary>
            Fires when a contact is deleted
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.ContactManager.OnBroadphaseCollision">
            <summary>
            Fires when the broadphase detects that two Fixtures are close to each other.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.ContactManager.PostSolve">
            <summary>
            Fires after the solver has run
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.ContactManager.PreSolve">
            <summary>
            Fires before the solver runs
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Contacts.ContactEdge">
            <summary>
            A contact edge is used to connect bodies and contacts together
            in a contact graph where each body is a node and each contact
            is an edge. A contact edge belongs to a doubly linked list
            maintained in each attached body. Each contact has two contact
            nodes, one for each attached body.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Contacts.ContactEdge.Contact">
            <summary>
            The contact
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Contacts.ContactEdge.Next">
            <summary>
            The next contact edge in the body's contact list
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Contacts.ContactEdge.Other">
            <summary>
            Provides quick access to the other body attached.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Contacts.ContactEdge.Prev">
            <summary>
            The previous contact edge in the body's contact list
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Contacts.Contact">
            <summary>
            The class manages contact between two shapes. A contact exists for each overlapping
            AABB in the broad-phase (except if filtered). Therefore a contact object may exist
            that has no contact points.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Contacts.Contact.Manifold">
            <summary>
            Get the contact manifold. Do not modify the manifold unless you understand the
            internals of Box2D.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Contacts.Contact.TangentSpeed">
            Get or set the desired tangent speed for a conveyor belt behavior. In meters per second.
        </member>
        <member name="P:FarseerPhysics.Dynamics.Contacts.Contact.Enabled">
            Enable/disable this contact. This can be used inside the pre-solve
            contact listener. The contact is only disabled for the current
            time step (or sub-step in continuous collisions).
            NOTE: If you are setting Enabled to a constant true or false,
            use the explicit Enable() or Disable() functions instead to 
            save the CPU from doing a branch operation.
        </member>
        <member name="P:FarseerPhysics.Dynamics.Contacts.Contact.ChildIndexA">
            <summary>
            Get the child primitive index for fixture A.
            </summary>
            <value>The child index A.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Contacts.Contact.ChildIndexB">
            <summary>
            Get the child primitive index for fixture B.
            </summary>
            <value>The child index B.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Contacts.Contact.IsTouching">
            <summary>
            Determines whether this contact is touching.
            </summary>
            <returns>
            	<c>true</c> if this instance is touching; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Contacts.Contact.GetWorldManifold(Microsoft.Xna.Framework.Vector2@,FarseerPhysics.Common.FixedArray2{Microsoft.Xna.Framework.Vector2}@)">
            <summary>
            Gets the world manifold.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Contacts.Contact.Update(FarseerPhysics.Dynamics.ContactManager)">
            <summary>
            Update the contact manifold and touching status.
            Note: do not assume the fixture AABBs are overlapping or are valid.
            </summary>
            <param name="contactManager">The contact manager.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Contacts.Contact.Evaluate(FarseerPhysics.Collision.Manifold@,FarseerPhysics.Common.Transform@,FarseerPhysics.Common.Transform@)">
            <summary>
            Evaluate this contact with your own manifold and transforms.   
            </summary>
            <param name="manifold">The manifold.</param>
            <param name="transformA">The first transform.</param>
            <param name="transformB">The second transform.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Contacts.ContactSolver.WorldManifold.Initialize(FarseerPhysics.Collision.Manifold@,FarseerPhysics.Common.Transform@,System.Single,FarseerPhysics.Common.Transform@,System.Single,Microsoft.Xna.Framework.Vector2@,FarseerPhysics.Common.FixedArray2{Microsoft.Xna.Framework.Vector2}@)">
            <summary>
            Evaluate the manifold with supplied transforms. This assumes
            modest motion from the original state. This does not change the
            point count, impulses, etc. The radii must come from the Shapes
            that generated the manifold.
            </summary>
            <param name="manifold">The manifold.</param>
            <param name="xfA">The transform for A.</param>
            <param name="radiusA">The radius for A.</param>
            <param name="xfB">The transform for B.</param>
            <param name="radiusB">The radius for B.</param>
            <param name="normal">World vector pointing from A to B</param>
            <param name="points">Torld contact point (point of intersection).</param>
        </member>
        <member name="T:FarseerPhysics.Dynamics.FixtureProxy">
            <summary>
            This proxy is used internally to connect fixtures to the broad-phase.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Fixture">
            <summary>
            A fixture is used to attach a Shape to a body for collision detection. A fixture
            inherits its transform from its parent. Fixtures hold additional non-geometric data
            such as friction, collision filters, etc.
            Fixtures are created via Body.CreateFixture.
            Warning: You cannot reuse fixtures.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Fixture.AfterCollision">
            <summary>
            Fires after two shapes has collided and are solved. This gives you a chance to get the impact force.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Fixture.BeforeCollision">
            <summary>
            Fires when two fixtures are close to each other.
            Due to how the broadphase works, this can be quite inaccurate as shapes are approximated using AABBs.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Fixture.OnCollision">
            <summary>
            Fires when two shapes collide and a contact is created between them.
            Note that the first fixture argument is always the fixture that the delegate is subscribed to.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Fixture.OnSeparation">
            <summary>
            Fires when two shapes separate and a contact is removed between them.
            Note: This can in some cases be called multiple times, as a fixture can have multiple contacts.
            Note The first fixture argument is always the fixture that the delegate is subscribed to.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.CollisionGroup">
            <summary>
            Defaults to 0
            
            If Settings.UseFPECollisionCategories is set to false:
            Collision groups allow a certain group of objects to never collide (negative)
            or always collide (positive). Zero means no collision group. Non-zero group
            filtering always wins against the mask bits.
            
            If Settings.UseFPECollisionCategories is set to true:
            If 2 fixtures are in the same collision group, they will not collide.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.CollidesWith">
            <summary>
            Defaults to Category.All
            
            The collision mask bits. This states the categories that this
            fixture would accept for collision.
            Use Settings.UseFPECollisionCategories to change the behavior.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.CollisionCategories">
            <summary>
            The collision categories this fixture is a part of.
            
            If Settings.UseFPECollisionCategories is set to false:
            Defaults to Category.Cat1
            
            If Settings.UseFPECollisionCategories is set to true:
            Defaults to Category.All
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.Shape">
            <summary>
            Get the child Shape. You can modify the child Shape, however you should not change the
            number of vertices because this will crash some collision caching mechanisms.
            </summary>
            <value>The shape.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.IsSensor">
            <summary>
            Gets or sets a value indicating whether this fixture is a sensor.
            </summary>
            <value><c>true</c> if this instance is a sensor; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.Body">
            <summary>
            Get the parent body of this fixture. This is null if the fixture is not attached.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.UserData">
            <summary>
            Set the user data. Use this to store your application specific data.
            </summary>
            <value>The user data.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.Friction">
            <summary>
            Set the coefficient of friction. This will _not_ change the friction of
            existing contacts.
            </summary>
            <value>The friction.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.Restitution">
            <summary>
            Set the coefficient of restitution. This will _not_ change the restitution of
            existing contacts.
            </summary>
            <value>The restitution.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Fixture.FixtureId">
            <summary>
            Gets a unique ID for this fixture.
            </summary>
            <value>The fixture id.</value>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.RestoreCollisionWith(FarseerPhysics.Dynamics.Fixture)">
            <summary>
            Restores collisions between this fixture and the provided fixture.
            </summary>
            <param name="fixture">The fixture.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.IgnoreCollisionWith(FarseerPhysics.Dynamics.Fixture)">
            <summary>
            Ignores collisions between this fixture and the provided fixture.
            </summary>
            <param name="fixture">The fixture.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.IsFixtureIgnored(FarseerPhysics.Dynamics.Fixture)">
            <summary>
            Determines whether collisions are ignored between this fixture and the provided fixture.
            </summary>
            <param name="fixture">The fixture.</param>
            <returns>
            	<c>true</c> if the fixture is ignored; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.Refilter">
            <summary>
            Contacts are persistant and will keep being persistant unless they are
            flagged for filtering.
            This methods flags all contacts associated with the body for filtering.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.TestPoint(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Test a point for containment in this fixture.
            </summary>
            <param name="point">A point in world coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.RayCast(FarseerPhysics.Collision.RayCastOutput@,FarseerPhysics.Collision.RayCastInput@,System.Int32)">
            <summary>
            Cast a ray against this Shape.
            </summary>
            <param name="output">The ray-cast results.</param>
            <param name="input">The ray-cast input parameters.</param>
            <param name="childIndex">Index of the child.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.GetAABB(FarseerPhysics.Collision.AABB@,System.Int32)">
            <summary>
            Get the fixture's AABB. This AABB may be enlarge and/or stale.
            If you need a more accurate AABB, compute it using the Shape and
            the body transform.
            </summary>
            <param name="aabb">The aabb.</param>
            <param name="childIndex">Index of the child.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.CompareTo(FarseerPhysics.Dynamics.Fixture)">
            <summary>
            Only compares the values of this fixture, and not the attached shape or body.
            This is used for deduplication in serialization only.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Fixture.CloneOnto(FarseerPhysics.Dynamics.Body)">
            <summary>
            Clones the fixture and attached shape onto the specified body.
            </summary>
            <param name="body">The body you wish to clone the fixture onto.</param>
            <returns>The cloned fixture.</returns>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Island">
            <summary>
            This is an internal class.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.AngleJoint">
            <summary>
            Maintains a fixed angle between two bodies
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.AngleJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body)">
            <summary>
            Constructor for AngleJoint
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.AngleJoint.TargetAngle">
            <summary>
            The desired angle between BodyA and BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.AngleJoint.BiasFactor">
            <summary>
            Gets or sets the bias factor.
            Defaults to 0.2
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.AngleJoint.MaxImpulse">
            <summary>
            Gets or sets the maximum impulse
            Defaults to float.MaxValue
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.AngleJoint.Softness">
            <summary>
            Gets or sets the softness of the joint
            Defaults to 0
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.DistanceJoint">
            <summary>
            A distance joint rains two points on two bodies
            to remain at a fixed distance from each other. You can view
            this as a massless, rigid rod.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.DistanceJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            This requires defining an
            anchor point on both bodies and the non-zero length of the
            distance joint. If you don't supply a length, the local anchor points
            is used so that the initial configuration can violate the constraint
            slightly. This helps when saving and loading a game.
            @warning Do not use a zero or short length.
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="anchorA">The first body anchor</param>
            <param name="anchorB">The second body anchor</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.DistanceJoint.LocalAnchorA">
            <summary>
            The local anchor point relative to bodyA's origin.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.DistanceJoint.LocalAnchorB">
            <summary>
            The local anchor point relative to bodyB's origin.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.DistanceJoint.Length">
            <summary>
            The natural length between the anchor points.
            Manipulating the length can lead to non-physical behavior when the frequency is zero.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.DistanceJoint.Frequency">
            <summary>
            The mass-spring-damper frequency in Hertz. A value of 0
            disables softness.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.DistanceJoint.DampingRatio">
            <summary>
            The damping ratio. 0 = no damping, 1 = critical damping.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.DistanceJoint.GetReactionForce(System.Single)">
            <summary>
            Get the reaction force given the inverse time step. Unit is N.
            </summary>
            <param name="invDt"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.DistanceJoint.GetReactionTorque(System.Single)">
            <summary>
            Get the reaction torque given the inverse time step.
            Unit is N*m. This is always zero for a distance joint.
            </summary>
            <param name="invDt"></param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.FixedMouseJoint">
            <summary>
            A mouse joint is used to make a point on a body track a
            specified world point. This a soft constraint with a maximum
            force. This allows the constraint to stretch and without
            applying huge forces.
            NOTE: this joint is not documented in the manual because it was
            developed to be used in the testbed. If you want to learn how to
            use the mouse joint, look at the testbed.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.FixedMouseJoint.#ctor(FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2)">
            <summary>
            This requires a world target point,
            tuning parameters, and the time step.
            </summary>
            <param name="body">The body.</param>
            <param name="anchor">The target.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FixedMouseJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FixedMouseJoint.MaxForce">
            <summary>
            The maximum constraint force that can be exerted
            to move the candidate body. Usually you will express
            as some multiple of the weight (multiplier * mass * gravity).
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FixedMouseJoint.Frequency">
            <summary>
            The response speed.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FixedMouseJoint.DampingRatio">
            <summary>
            The damping ratio. 0 = no damping, 1 = critical damping.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.FrictionJoint">
            <summary>
            Friction joint. This is used for top-down friction.
            It provides 2D translational friction and angular friction.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.FrictionJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Constructor for FrictionJoint.
            </summary>
            <param name="bodyA"></param>
            <param name="bodyB"></param>
            <param name="anchor"></param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FrictionJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FrictionJoint.LocalAnchorB">
            <summary>
            The local anchor point on BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FrictionJoint.MaxForce">
            <summary>
            The maximum friction force in N.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.FrictionJoint.MaxTorque">
            <summary>
            The maximum friction torque in N-m.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.GearJoint">
             <summary>
             A gear joint is used to connect two joints together.
             Either joint can be a revolute or prismatic joint.
             You specify a gear ratio to bind the motions together:
             <![CDATA[coordinate1 + ratio * coordinate2 = ant]]>
             The ratio can be negative or positive. If one joint is a revolute joint
             and the other joint is a prismatic joint, then the ratio will have units
             of length or units of 1/length.
            
             Warning: You have to manually destroy the gear joint if jointA or jointB is destroyed.
             </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.GearJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Joints.Joint,FarseerPhysics.Dynamics.Joints.Joint,System.Single)">
            <summary>
            Requires two existing revolute or prismatic joints (any combination will work).
            The provided joints must attach a dynamic body to a static body.
            </summary>
            <param name="jointA">The first joint.</param>
            <param name="jointB">The second joint.</param>
            <param name="ratio">The ratio.</param>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.GearJoint.Ratio">
            <summary>
            The gear ratio.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.GearJoint.JointA">
            <summary>
            The first revolute/prismatic joint attached to the gear joint.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.GearJoint.JointB">
            <summary>
            The second revolute/prismatic joint attached to the gear joint.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.JointEdge">
            <summary>
            A joint edge is used to connect bodies and joints together
            in a joint graph where each body is a node and each joint
            is an edge. A joint edge belongs to a doubly linked list
            maintained in each attached body. Each joint has two joint
            nodes, one for each attached body.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Joints.JointEdge.Joint">
            <summary>
            The joint.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Joints.JointEdge.Next">
            <summary>
            The next joint edge in the body's joint list.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Joints.JointEdge.Other">
            <summary>
            Provides quick access to the other body attached.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Joints.JointEdge.Prev">
            <summary>
            The previous joint edge in the body's joint list.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.Joints.Joint.Enabled">
            <summary>
            Indicate if this join is enabled or not. Disabling a joint
            means it is still in the simulation, but inactive.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.Joint.#ctor(FarseerPhysics.Dynamics.Body)">
            <summary>
            Constructor for fixed joint
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.JointType">
            <summary>
            Gets or sets the type of the joint.
            </summary>
            <value>The type of the joint.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.BodyA">
            <summary>
            Get the first body attached to this joint.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.BodyB">
            <summary>
            Get the second body attached to this joint.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.WorldAnchorA">
            <summary>
            Get the anchor point on bodyA in world coordinates.
            On some joints, this value indicate the anchor point within the world.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.WorldAnchorB">
            <summary>
            Get the anchor point on bodyB in world coordinates.
            On some joints, this value indicate the anchor point within the world.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.UserData">
            <summary>
            Set the user data pointer.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.CollideConnected">
            <summary>
            Set this flag to true if the attached bodies should collide.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.Joint.Breakpoint">
            <summary>
            The Breakpoint simply indicates the maximum Value the JointError can be before it breaks.
            The default value is float.MaxValue, which means it never breaks.
            </summary>
        </member>
        <member name="E:FarseerPhysics.Dynamics.Joints.Joint.Broke">
            <summary>
            Fires when the joint is broken.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.Joint.GetReactionForce(System.Single)">
            <summary>
            Get the reaction force on body at the joint anchor in Newtons.
            </summary>
            <param name="invDt">The inverse delta time.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.Joint.GetReactionTorque(System.Single)">
            <summary>
            Get the reaction torque on the body at the joint anchor in N*m.
            </summary>
            <param name="invDt">The inverse delta time.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.Joint.IsFixedType">
            <summary>
            Return true if the joint is a fixed type.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.Joint.SolvePositionConstraints(FarseerPhysics.Dynamics.SolverData@)">
            <summary>
            Solves the position constraints.
            </summary>
            <param name="data"></param>
            <returns>returns true if the position errors are within tolerance.</returns>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.MotorJoint">
            <summary>
            A motor joint is used to control the relative motion
            between two bodies. A typical usage is to control the movement
            of a dynamic body with respect to the ground.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.MotorJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,System.Boolean)">
            <summary>
            Constructor for MotorJoint.
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.MotorJoint.MaxForce">
            <summary>
            The maximum amount of force that can be applied to BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.MotorJoint.MaxTorque">
            <summary>
            The maximum amount of torque that can be applied to BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.MotorJoint.LinearOffset">
            <summary>
            The linear (translation) offset.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.MotorJoint.AngularOffset">
            <summary>
            Get or set the angular offset.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.PrismaticJoint">
            <summary>
            A prismatic joint. This joint provides one degree of freedom: translation
            along an axis fixed in bodyA. Relative rotation is prevented. You can
            use a joint limit to restrict the range of motion and a joint motor to
            drive the motion or to model joint friction.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.PrismaticJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            This requires defining a line of
            motion using an axis and an anchor point. The definition uses local
            anchor points and a local axis so that the initial configuration
            can violate the constraint slightly. The joint translation is zero
            when the local anchor points coincide in world space. Using local
            anchors and a local axis helps when saving and loading a game.
            </summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchorA">The first body anchor.</param>
            <param name="anchorB">The second body anchor.</param>
            <param name="axis">The axis.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.PrismaticJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            
            </summary>
            <param name="bodyA"></param>
            <param name="bodyB"></param>
            <param name="anchor"></param>
            <param name="axis"></param>
            <param name="useWorldCoordinates"></param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.LocalAnchorB">
            <summary>
            The local anchor point on BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.JointTranslation">
            <summary>
            Get the current joint translation, usually in meters.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.JointSpeed">
            <summary>
            Get the current joint translation speed, usually in meters per second.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.LimitEnabled">
            <summary>
            Is the joint limit enabled?
            </summary>
            <value><c>true</c> if [limit enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.LowerLimit">
            <summary>
            Get the lower joint limit, usually in meters.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.UpperLimit">
            <summary>
            Get the upper joint limit, usually in meters.
            </summary>
            <value></value>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.PrismaticJoint.SetLimits(System.Single,System.Single)">
            <summary>
            Set the joint limits, usually in meters.
            </summary>
            <param name="lower">The lower limit</param>
            <param name="upper">The upper limit</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.MotorEnabled">
            <summary>
            Is the joint motor enabled?
            </summary>
            <value><c>true</c> if [motor enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.MotorSpeed">
            <summary>
            Set the motor speed, usually in meters per second.
            </summary>
            <value>The speed.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.MaxMotorForce">
            <summary>
            Set the maximum motor force, usually in N.
            </summary>
            <value>The force.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.MotorImpulse">
            <summary>
            Get the current motor impulse, usually in N.
            </summary>
            <value></value>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.PrismaticJoint.GetMotorForce(System.Single)">
            <summary>
            Gets the motor force.
            </summary>
            <param name="invDt">The inverse delta time</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.Axis">
            <summary>
            The axis at which the joint moves.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.LocalXAxis">
            <summary>
            The axis in local coordinates relative to BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PrismaticJoint.ReferenceAngle">
            <summary>
            The reference angle.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.PulleyJoint">
            <summary>
            The pulley joint is connected to two bodies and two fixed world points.
            The pulley supports a ratio such that:
            <![CDATA[length1 + ratio * length2 <= constant]]>
            Yes, the force transmitted is scaled by the ratio.
            
            Warning: the pulley joint can get a bit squirrelly by itself. They often
            work better when combined with prismatic joints. You should also cover the
            the anchor points with static shapes to prevent one side from going to zero length.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.PulleyJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean)">
            <summary>
            Constructor for PulleyJoint.
            </summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchorA">The anchor on the first body.</param>
            <param name="anchorB">The anchor on the second body.</param>
            <param name="worldAnchorA">The world anchor for the first body.</param>
            <param name="worldAnchorB">The world anchor for the second body.</param>
            <param name="ratio">The ratio.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.LocalAnchorB">
            <summary>
            The local anchor point on BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.WorldAnchorA">
            <summary>
            Get the first world anchor.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.WorldAnchorB">
            <summary>
            Get the second world anchor.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.LengthA">
            <summary>
            Get the current length of the segment attached to body1.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.LengthB">
            <summary>
            Get the current length of the segment attached to body2.
            </summary>
            <value></value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.CurrentLengthA">
            <summary>
            The current length between the anchor point on BodyA and WorldAnchorA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.CurrentLengthB">
            <summary>
            The current length between the anchor point on BodyB and WorldAnchorB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.PulleyJoint.Ratio">
            <summary>
            Get the pulley ratio.
            </summary>
            <value></value>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.RevoluteJoint">
            <summary>
            A revolute joint constrains to bodies to share a common point while they
            are free to rotate about the point. The relative rotation about the shared
            point is the joint angle. You can limit the relative rotation with
            a joint limit that specifies a lower and upper angle. You can use a motor
            to drive the relative rotation about the shared point. A maximum motor torque
            is provided so that infinite forces are not generated.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.RevoluteJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Constructor of RevoluteJoint. 
            </summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchorA">The first body anchor.</param>
            <param name="anchorB">The second anchor.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.RevoluteJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Constructor of RevoluteJoint. 
            </summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchor">The shared anchor.</param>
            <param name="useWorldCoordinates"></param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.LocalAnchorB">
            <summary>
            The local anchor point on BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.ReferenceAngle">
            <summary>
            The referance angle computed as BodyB angle minus BodyA angle.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.JointAngle">
            <summary>
            Get the current joint angle in radians.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.JointSpeed">
            <summary>
            Get the current joint angle speed in radians per second.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.LimitEnabled">
            <summary>
            Is the joint limit enabled?
            </summary>
            <value><c>true</c> if [limit enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.LowerLimit">
            <summary>
            Get the lower joint limit in radians.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.UpperLimit">
            <summary>
            Get the upper joint limit in radians.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.RevoluteJoint.SetLimits(System.Single,System.Single)">
            <summary>
            Set the joint limits, usually in meters.
            </summary>
            <param name="lower">The lower limit</param>
            <param name="upper">The upper limit</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.MotorEnabled">
            <summary>
            Is the joint motor enabled?
            </summary>
            <value><c>true</c> if [motor enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.MotorSpeed">
            <summary>
            Get or set the motor speed in radians per second.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.MaxMotorTorque">
            <summary>
            Get or set the maximum motor torque, usually in N-m.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RevoluteJoint.MotorImpulse">
            <summary>
            Get or set the current motor impulse, usually in N-m.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.RevoluteJoint.GetMotorTorque(System.Single)">
            <summary>
            Gets the motor torque in N-m.
            </summary>
            <param name="invDt">The inverse delta time</param>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.RopeJoint">
            <summary>
            A rope joint enforces a maximum distance between two points on two bodies. It has no other effect.
            It can be used on ropes that are made up of several connected bodies, and if there is a need to support a heavy body.
            This joint is used for stabiliation of heavy objects on soft constraint joints.
            
            Warning: if you attempt to change the maximum length during the simulation you will get some non-physical behavior.
            Use the DistanceJoint instead if you want to dynamically control the length.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.RopeJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Constructor for RopeJoint.
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="anchorA">The anchor on the first body</param>
            <param name="anchorB">The anchor on the second body</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RopeJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RopeJoint.LocalAnchorB">
            <summary>
            The local anchor point on BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RopeJoint.MaxLength">
            <summary>
            Get or set the maximum length of the rope.
            By default, it is the distance between the two anchor points.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.RopeJoint.State">
            <summary>
            Gets the state of the joint.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.WeldJoint">
            <summary>
            A weld joint essentially glues two bodies together. A weld joint may
            distort somewhat because the island constraint solver is approximate.
            
            The joint is soft constraint based, which means the two bodies will move
            relative to each other, when a force is applied. To combine two bodies
            in a rigid fashion, combine the fixtures to a single body instead.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.WeldJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            You need to specify an anchor point where they are attached.
            The position of the anchor point is important for computing the reaction torque.
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="anchorA">The first body anchor.</param>
            <param name="anchorB">The second body anchor.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WeldJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WeldJoint.LocalAnchorB">
            <summary>
            The local anchor point on BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WeldJoint.ReferenceAngle">
            <summary>
            The bodyB angle minus bodyA angle in the reference state (radians).
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WeldJoint.FrequencyHz">
            <summary>
            The frequency of the joint. A higher frequency means a stiffer joint, but
            a too high value can cause the joint to oscillate.
            Default is 0, which means the joint does no spring calculations.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WeldJoint.DampingRatio">
            <summary>
            The damping on the joint. The damping is only used when
            the joint has a frequency (> 0). A higher value means more damping.
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Joints.WheelJoint">
            <summary>
            A wheel joint. This joint provides two degrees of freedom: translation
            along an axis fixed in bodyA and rotation in the plane. You can use a
            joint limit to restrict the range of motion and a joint motor to drive
            the rotation or to model rotational friction.
            This joint is designed for vehicle suspensions.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.WheelJoint.#ctor(FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Constructor for WheelJoint
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="anchor">The anchor point</param>
            <param name="axis">The axis</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.LocalAnchorA">
            <summary>
            The local anchor point on BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.LocalAnchorB">
            <summary>
            The local anchor point on BodyB
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.Axis">
            <summary>
            The axis at which the suspension moves.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.LocalXAxis">
            <summary>
            The axis in local coordinates relative to BodyA
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.MotorSpeed">
            <summary>
            The desired motor speed in radians per second.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.MaxMotorTorque">
            <summary>
            The maximum motor torque, usually in N-m.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.Frequency">
            <summary>
            Suspension frequency, zero indicates no suspension
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.DampingRatio">
            <summary>
            Suspension damping ratio, one indicates critical damping
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.JointTranslation">
            <summary>
            Gets the translation along the axis
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.JointSpeed">
            <summary>
            Gets the angular velocity of the joint
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.Joints.WheelJoint.MotorEnabled">
            <summary>
            Enable/disable the joint motor.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.Joints.WheelJoint.GetMotorTorque(System.Single)">
            <summary>
            Gets the torque of the motor
            </summary>
            <param name="invDt">inverse delta time</param>
        </member>
        <member name="T:FarseerPhysics.Dynamics.TimeStep">
            <summary>
            This is an internal structure.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.TimeStep.dt">
            <summary>
            Time step (Delta time)
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.TimeStep.dtRatio">
            <summary>
            dt * inv_dt0
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.TimeStep.inv_dt">
            <summary>
            Inverse time step (0 if dt == 0).
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.Position">
            This is an internal structure.
        </member>
        <member name="T:FarseerPhysics.Dynamics.Velocity">
            This is an internal structure.
        </member>
        <member name="T:FarseerPhysics.Dynamics.SolverData">
            Solver Data
        </member>
        <member name="T:FarseerPhysics.Dynamics.World">
            <summary>
            The world class manages all physics entities, dynamic simulation,
            and asynchronous queries.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.BodyAdded">
            <summary>
            Fires whenever a body has been added
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.BodyRemoved">
            <summary>
            Fires whenever a body has been removed
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.FixtureAdded">
            <summary>
            Fires whenever a fixture has been added
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.FixtureRemoved">
            <summary>
            Fires whenever a fixture has been removed
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.JointAdded">
            <summary>
            Fires whenever a joint has been added
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.JointRemoved">
            <summary>
            Fires whenever a joint has been removed
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.ControllerAdded">
            <summary>
            Fires every time a controller is added to the World.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.ControllerRemoved">
            <summary>
            Fires every time a controlelr is removed form the World.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:FarseerPhysics.Dynamics.World"/> class.
            </summary>
        </member>
        <member name="P:FarseerPhysics.Dynamics.World.ProxyCount">
            <summary>
            Get the number of broad-phase proxies.
            </summary>
            <value>The proxy count.</value>
        </member>
        <member name="F:FarseerPhysics.Dynamics.World.Gravity">
            <summary>
            Change the global gravity vector.
            </summary>
            <value>The gravity.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.World.ContactManager">
            <summary>
            Get the contact manager for testing.
            </summary>
            <value>The contact manager.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.World.BodyList">
            <summary>
            Get the world body list.
            </summary>
            <value>Thehead of the world body list.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.World.JointList">
            <summary>
            Get the world joint list. 
            </summary>
            <value>The joint list.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.World.ContactList">
            <summary>
            Get the world contact list. With the returned contact, use Contact.GetNext to get
            the next contact in the world list. A null contact indicates the end of the list.
            </summary>
            <value>The head of the world contact list.</value>
        </member>
        <member name="P:FarseerPhysics.Dynamics.World.Enabled">
            <summary>
            If false, the whole simulation stops. It still processes added and removed geometries.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.AddBody(FarseerPhysics.Dynamics.Body)">
            <summary>
            Add a rigid body.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.RemoveBody(FarseerPhysics.Dynamics.Body)">
            <summary>
            Destroy a rigid body.
            Warning: This automatically deletes all associated shapes and joints.
            </summary>
            <param name="body">The body.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.AddJoint(FarseerPhysics.Dynamics.Joints.Joint)">
            <summary>
            Create a joint to constrain bodies together. This may cause the connected bodies to cease colliding.
            </summary>
            <param name="joint">The joint.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.RemoveJoint(FarseerPhysics.Dynamics.Joints.Joint)">
            <summary>
            Destroy a joint. This may cause the connected bodies to begin colliding.
            </summary>
            <param name="joint">The joint.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.ProcessChanges">
            <summary>
            All adds and removes are cached by the World duing a World step.
            To process the changes before the world updates again, call this method.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.Step(System.Single)">
            <summary>
            Take a time step. This performs collision detection, integration,
            and consraint solution.
            </summary>
            <param name="dt">The amount of time to simulate, this should not vary.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.ClearForces">
            <summary>
            Call this after you are done with time steps to clear the forces. You normally
            call this after each call to Step, unless you are performing sub-steps. By default,
            forces will be automatically cleared, so you don't need to call this function.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.QueryAABB(System.Func{FarseerPhysics.Dynamics.Fixture,System.Boolean},FarseerPhysics.Collision.AABB@)">
            <summary>
            Query the world for all fixtures that potentially overlap the provided AABB.
            
            Inside the callback:
            Return true: Continues the query
            Return false: Terminate the query
            </summary>
            <param name="callback">A user implemented callback class.</param>
            <param name="aabb">The aabb query box.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.QueryAABB(FarseerPhysics.Collision.AABB@)">
            <summary>
            Query the world for all fixtures that potentially overlap the provided AABB.
            Use the overload with a callback for filtering and better performance.
            </summary>
            <param name="aabb">The aabb query box.</param>
            <returns>A list of fixtures that were in the affected area.</returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.RayCast(System.Func{FarseerPhysics.Dynamics.Fixture,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single},Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Ray-cast the world for all fixtures in the path of the ray. Your callback
            controls whether you get the closest point, any point, or n-points.
            The ray-cast ignores shapes that contain the starting point.
            
            Inside the callback:
            return -1: ignore this fixture and continue
            return 0: terminate the ray cast
            return fraction: clip the ray to this point
            return 1: don't clip the ray and continue
            </summary>
            <param name="callback">A user implemented callback class.</param>
            <param name="point1">The ray starting point.</param>
            <param name="point2">The ray ending point.</param>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.TestPointAll(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a list of fixtures that are at the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Dynamics.World.ShiftOrigin(Microsoft.Xna.Framework.Vector2)">
            Shift the world origin. Useful for large worlds.
            The body shift formula is: position -= newOrigin
            @param newOrigin the new origin with respect to the old origin
            Warning: Calling this method mid-update might cause a crash.
        </member>
        <member name="T:FarseerPhysics.Dynamics.EndContactDelegate">
            <summary>
            This delegate is called when a contact is deleted
            </summary>
        </member>
        <member name="T:FarseerPhysics.Dynamics.BeginContactDelegate">
            <summary>
            This delegate is called when a contact is created
            </summary>
        </member>
        <member name="M:FarseerPhysics.Factories.BodyFactory.CreateCapsule(FarseerPhysics.Dynamics.World,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single,Microsoft.Xna.Framework.Vector2,System.Object)">
            <summary>
            Creates a capsule.
            Note: Automatically decomposes the capsule if it contains too many vertices (controlled by Settings.MaxPolygonVertices)
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Factories.BodyFactory.CreateRoundedRectangle(FarseerPhysics.Dynamics.World,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,Microsoft.Xna.Framework.Vector2,System.Object)">
            <summary>
            Creates a rounded rectangle.
            Note: Automatically decomposes the capsule if it contains too many vertices (controlled by Settings.MaxPolygonVertices)
            </summary>
            <param name="world">The world.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="xRadius">The x radius.</param>
            <param name="yRadius">The y radius.</param>
            <param name="segments">The segments.</param>
            <param name="density">The density.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Factories.BodyFactory.CreateBreakableBody(FarseerPhysics.Dynamics.World,FarseerPhysics.Common.Vertices,System.Single,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a breakable body. You would want to remove collinear points before using this.
            </summary>
            <param name="world">The world.</param>
            <param name="vertices">The vertices.</param>
            <param name="density">The density.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="T:FarseerPhysics.Factories.FixtureFactory">
            <summary>
            An easy to use factory for creating bodies
            </summary>
        </member>
        <member name="T:FarseerPhysics.Factories.JointFactory">
            <summary>
            An easy to use factory for using joints.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Factories.JointFactory.CreateRevoluteJoint(FarseerPhysics.Dynamics.World,FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a revolute joint and adds it to the world
            </summary>
            <param name="world"></param>
            <param name="bodyA"></param>
            <param name="bodyB"></param>
            <param name="anchorB"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Factories.JointFactory.CreateRopeJoint(FarseerPhysics.Dynamics.World,FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a rope joint and adds it to the world
            </summary>
        </member>
        <member name="M:FarseerPhysics.Factories.JointFactory.CreatePrismaticJoint(FarseerPhysics.Dynamics.World,FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a prismatic joint and adds it to the world
            </summary>
            <param name="world"></param>
            <param name="bodyA"></param>
            <param name="bodyB"></param>
            <param name="anchor"></param>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Factories.JointFactory.CreateWheelJoint(FarseerPhysics.Dynamics.World,FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a Wheel Joint and adds it to the world
            </summary>
        </member>
        <member name="M:FarseerPhysics.Factories.JointFactory.CreateAngleJoint(FarseerPhysics.Dynamics.World,FarseerPhysics.Dynamics.Body,FarseerPhysics.Dynamics.Body)">
            <summary>
            Creates an angle joint.
            </summary>
            <param name="world">The world.</param>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Factories.LinkFactory.CreateChain(FarseerPhysics.Dynamics.World,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32,System.Single,System.Boolean)">
            <summary>
            Creates a chain.
            </summary>
            <param name="world">The world.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="linkWidth">The width.</param>
            <param name="linkHeight">The height.</param>
            <param name="fixStart">if set to <c>true</c> [fix start].</param>
            <param name="fixEnd">if set to <c>true</c> [fix end].</param>
            <param name="numberOfLinks">The number of links.</param>
            <param name="linkDensity">The link density.</param>
            <returns></returns>
        </member>
        <member name="F:FarseerPhysics.Settings.AllCollisionCallbacksAgree">
            <summary>
            If true, all collision callbacks have to return the same value, and agree
            if there was a collision or not. Swtich this to false to revert to the 
            collision agreement used in FPE 3.3.x
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.EnableDiagnostics">
            <summary>
            Enabling diagnistics causes the engine to gather timing information.
            You can see how much time it took to solve the contacts, solve CCD
            and update the controllers.
            NOTE: If you are using a debug view that shows performance counters,
            you might want to enable this.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.SkipSanityChecks">
            <summary>
            Set this to true to skip sanity checks in the engine. This will speed up the
            tools by removing the overhead of the checks, but you will need to handle checks
            yourself where it is needed.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.VelocityIterations">
            <summary>
            The number of velocity iterations used in the solver.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.PositionIterations">
            <summary>
            The number of position iterations used in the solver.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.ContinuousPhysics">
            <summary>
            Enable/Disable Continuous Collision Detection (CCD)
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.UseConvexHullPolygons">
            <summary>
            If true, it will run a GiftWrap convex hull on all polygon inputs.
            This makes for a more stable engine when given random input,
            but if speed of the creation of polygons are more important,
            you might want to set this to false.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.TOIVelocityIterations">
            <summary>
            The number of velocity iterations in the TOI solver
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.TOIPositionIterations">
            <summary>
            The number of position iterations in the TOI solver
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxSubSteps">
            <summary>
            Maximum number of sub-steps per contact in continuous physics simulation.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.EnableWarmstarting">
            <summary>
            Enable/Disable warmstarting
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.AllowSleep">
            <summary>
            Enable/Disable sleeping
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxPolygonVertices">
            <summary>
            The maximum number of vertices on a convex polygon.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.UseFPECollisionCategories">
            <summary>
            Farseer Physics Engine has a different way of filtering fixtures than Box2d.
            We have both FPE and Box2D filtering in the engine. If you are upgrading
            from earlier versions of FPE, set this to true and DefaultFixtureCollisionCategories
            to Category.All.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.DefaultFixtureCollisionCategories">
            <summary>
            This is used by the Fixture constructor as the default value 
            for Fixture.CollisionCategories member. Note that you may need to change this depending
            on the setting of UseFPECollisionCategories, above.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.DefaultFixtureCollidesWith">
            <summary>
            This is used by the Fixture constructor as the default value 
            for Fixture.CollidesWith member.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.DefaultFixtureIgnoreCCDWith">
            <summary>
            This is used by the Fixture constructor as the default value 
            for Fixture.IgnoreCCDWith member.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxManifoldPoints">
            <summary>
            The maximum number of contact points between two convex shapes.
            DO NOT CHANGE THIS VALUE!
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.AABBExtension">
            <summary>
            This is used to fatten AABBs in the dynamic tree. This allows proxies
            to move by a small amount without triggering a tree adjustment.
            This is in meters.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.AABBMultiplier">
            <summary>
            This is used to fatten AABBs in the dynamic tree. This is used to predict
            the future position based on the current displacement.
            This is a dimensionless multiplier.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.LinearSlop">
            <summary>
            A small length used as a collision and constraint tolerance. Usually it is
            chosen to be numerically significant, but visually insignificant.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.AngularSlop">
            <summary>
            A small angle used as a collision and constraint tolerance. Usually it is
            chosen to be numerically significant, but visually insignificant.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.PolygonRadius">
            <summary>
            The radius of the polygon/edge shape skin. This should not be modified. Making
            this smaller means polygons will have an insufficient buffer for continuous collision.
            Making it larger may create artifacts for vertex collision.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxTOIContacts">
            <summary>
            Maximum number of contacts to be handled to solve a TOI impact.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.VelocityThreshold">
            <summary>
            A velocity threshold for elastic collisions. Any collision with a relative linear
            velocity below this threshold will be treated as inelastic.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxLinearCorrection">
            <summary>
            The maximum linear position correction used when solving constraints. This helps to
            prevent overshoot.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxAngularCorrection">
            <summary>
            The maximum angular position correction used when solving constraints. This helps to
            prevent overshoot.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.Baumgarte">
            <summary>
            This scale factor controls how fast overlap is resolved. Ideally this would be 1 so
            that overlap is removed in one time step. However using values close to 1 often lead
            to overshoot.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.TimeToSleep">
            <summary>
            The time that a body must be still before it will go to sleep.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.LinearSleepTolerance">
            <summary>
            A body cannot sleep if its linear velocity is above this tolerance.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.AngularSleepTolerance">
            <summary>
            A body cannot sleep if its angular velocity is above this tolerance.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxTranslation">
            <summary>
            The maximum linear velocity of a body. This limit is very large and is used
            to prevent numerical problems. You shouldn't need to adjust this.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxRotation">
            <summary>
            The maximum angular velocity of a body. This limit is very large and is used
            to prevent numerical problems. You shouldn't need to adjust this.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.MaxGJKIterations">
            <summary>
            Defines the maximum number of iterations made by the GJK algorithm.
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.EnableSubStepping">
            <summary>
            This is only for debugging the solver
            </summary>
        </member>
        <member name="F:FarseerPhysics.Settings.AutoClearForces">
            <summary>
            By default, forces are cleared automatically after each call to Step.
            The default behavior is modified with this setting.
            The purpose of this setting is to support sub-stepping. Sub-stepping is often used to maintain
            a fixed sized time step under a variable frame-rate.
            When you perform sub-stepping you should disable auto clearing of forces and instead call
            ClearForces after all sub-steps are complete in one pass of your game loop.
            </summary>
        </member>
        <member name="M:FarseerPhysics.Settings.MixFriction(System.Single,System.Single)">
            <summary>
            Friction mixing law. Feel free to customize this.
            </summary>
            <param name="friction1">The friction1.</param>
            <param name="friction2">The friction2.</param>
            <returns></returns>
        </member>
        <member name="M:FarseerPhysics.Settings.MixRestitution(System.Single,System.Single)">
            <summary>
            Restitution mixing law. Feel free to customize this.
            </summary>
            <param name="restitution1">The restitution1.</param>
            <param name="restitution2">The restitution2.</param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.BlendMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.BlendModeUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.BlendModeUtils.Override(FairyGUI.BlendMode,Microsoft.Xna.Framework.Graphics.Blend,Microsoft.Xna.Framework.Graphics.Blend)">
            <summary>
            
            </summary>
            <param name="blendMode"></param>
            <param name="srcFactor"></param>
            <param name="dstFactor"></param>
        </member>
        <member name="T:FairyGUI.Container">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Container.opaque">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Container.hitArea">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Container.touchChildren">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Container.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Container.numChildren">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Container.AddChild(FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.AddChildAt(FairyGUI.DisplayObject,System.Int32)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.Contains(FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.GetChildAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.GetChild(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.GetChildIndex(FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.RemoveChild(FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.RemoveChild(FairyGUI.DisplayObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.RemoveChildAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.RemoveChildAt(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.RemoveChildren">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Container.RemoveChildren(System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="beginIndex"></param>
            <param name="endIndex"></param>
            <param name="dispose"></param>
        </member>
        <member name="M:FairyGUI.Container.SetChildIndex(FairyGUI.DisplayObject,System.Int32)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <param name="index"></param>
        </member>
        <member name="M:FairyGUI.Container.SwapChildren(FairyGUI.DisplayObject,FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="child1"></param>
            <param name="child2"></param>
        </member>
        <member name="M:FairyGUI.Container.SwapChildrenAt(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="index1"></param>
            <param name="index2"></param>
        </member>
        <member name="M:FairyGUI.Container.ChangeChildrenOrder(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{FairyGUI.DisplayObject})">
            <summary>
            
            </summary>
            <param name="indice"></param>
            <param name="objs"></param>
        </member>
        <member name="P:FairyGUI.Container.clipRect">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Container.mask">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Container.HitTest(Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            
            </summary>
            <param name="stagePoint"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Container.IsAncestorOf(FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.DisplayObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.DisplayObject.name">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.graphics">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.paintingGraphics">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.DisplayObject.gOwner">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.DisplayObject.id">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onRightClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onTouchBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onTouchMove">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onTouchEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onRollOver">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onRollOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onMouseWheel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onAddedToStage">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onRemovedFromStage">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onKeyDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.onClickLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.alpha">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.grayed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.visible">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.x">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.y">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.z">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.position">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.xy">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.DisplayObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="xv"></param>
            <param name="yv"></param>
            <param name="zv"></param>
        </member>
        <member name="M:FairyGUI.DisplayObject.SetPosition(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="xv"></param>
            <param name="yv"></param>
        </member>
        <member name="P:FairyGUI.DisplayObject.width">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.height">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.size">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.DisplayObject.SetSize(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="wv"></param>
            <param name="hv"></param>
        </member>
        <member name="P:FairyGUI.DisplayObject.scaleX">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.scaleY">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.DisplayObject.SetScale(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="xv"></param>
            <param name="yv"></param>
        </member>
        <member name="P:FairyGUI.DisplayObject.scale">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.rotation">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.rotationX">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.rotationY">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.skew">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.pivot">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.location">
            <summary>
            This is the pivot position
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.isDisposed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.topmost">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.stage">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.touchable">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.DisplayObject.EnterPaintingMode(System.Int32,System.Nullable{FairyGUI.Margin})">
            <summary>
            进入绘画模式，整个对象将画到一张RenderTexture上，然后这种贴图将代替原有的显示内容。
            可以在onPaint回调里对这张纹理进行进一步操作，实现特殊效果。
            可能有多个地方要求进入绘画模式，这里用requestorId加以区别，取值是1、2、4、8、16以此类推。1024内内部保留。用户自定义的id从1024开始。
            </summary>
            <param name="requestId">请求者id</param>
            <param name="margin">纹理四周的留空。如果特殊处理后的内容大于原内容，那么这里的设置可以使纹理扩大。</param>
        </member>
        <member name="M:FairyGUI.DisplayObject.LeavePaintingMode(System.Int32)">
            <summary>
            离开绘画模式
            </summary>
            <param name="requestId"></param>
        </member>
        <member name="P:FairyGUI.DisplayObject.paintingMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.cacheAsBitmap">
            <summary>
            将整个显示对象（如果是容器，则容器包含的整个显示列表）静态化，所有内容被缓冲到一张纹理上。
            DC将保持为1。CPU消耗将降到最低。但对象的任何变化不会更新。
            当cacheAsBitmap已经为true时，再次调用cacheAsBitmap=true将会刷新一次。
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.filter">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.DisplayObject.blendMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.DisplayObject.GetBounds(FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="targetSpace"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.DisplayObject.GlobalToLocal(Microsoft.Xna.Framework.Vector2)">
            <summary>
            将舞台坐标转换为本地坐标
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.DisplayObject.LocalToGlobal(Microsoft.Xna.Framework.Vector2)">
            <summary>
            将本地坐标转换为舞台坐标
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.DisplayObject.TransformPoint(Microsoft.Xna.Framework.Vector2,FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="targetSpace">null if to world space</param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.DisplayObject.TransformRect(System.Drawing.RectangleF,FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <param name="targetSpace">null if to world space</param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.DisplayObject.RemoveFromParent">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.FairyBatch">
            <summary>
            FairyBatch is for internal use.
            </summary>
        </member>
        <member name="M:FairyGUI.FairyBatch.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.FairyBatch.defaultEffect">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.FairyBatch.Begin">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.FairyBatch.End">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.FairyBatch.EnterClipping(System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="clipRect"></param>
        </member>
        <member name="M:FairyGUI.FairyBatch.LeaveClipping">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.HitTestContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.HitTestMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.IHitTest">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.IHitTest.HitTest(System.Drawing.RectangleF,Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="contentRect"></param>
            <param name="localPoint"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.PixelHitTestData">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.PixelHitTest">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.PixelHitTest.#ctor(FairyGUI.PixelHitTestData,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
        </member>
        <member name="T:FairyGUI.RectHitTest">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RectHitTest.rect">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Image">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Image.#ctor(FairyGUI.NTexture)">
            <summary>
            
            </summary>
            <param name="texture"></param>
        </member>
        <!-- 对于成员“P:FairyGUI.Image.texture”忽略有格式错误的 XML 注释 -->
        <member name="P:FairyGUI.Image.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Image.fillMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Image.fillOrigin">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Image.fillClockwise">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Image.fillAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Image.scale9Grid">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Image.scaleByTile">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Image.tileGridIndice">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Image.SetNativeSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.CompositeMesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.CompositeMesh.elements">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.CompositeMesh.activeIndex">
            <summary>
            If it is -1, means all elements are active, otherwise, only the specific element is active
            </summary>
        </member>
        <member name="T:FairyGUI.EllipseMesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EllipseMesh.drawRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EllipseMesh.lineWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EllipseMesh.lineColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EllipseMesh.centerColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EllipseMesh.fillColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EllipseMesh.startDegree">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EllipseMesh.endDegreee">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.FillMesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.FillMesh.method">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.FillMesh.origin">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.FillMesh.amount">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.FillMesh.clockwise">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.LineMesh">
            <summary>
            
            Inspired by kim ki won (http://mypi.ruliweb.daum.net/mypi.htm?id=newtypekorea)
            </summary>
        </member>
        <member name="F:FairyGUI.LineMesh.path">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.LineMesh.lineWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.LineMesh.roundEdge">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.LineMesh.fillStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.LineMesh.fillEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.LineMesh.pointDensity">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.IMeshFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.IMeshFactory.OnPopulateMesh(FairyGUI.VertexBuffer)">
            <summary>
            
            </summary>
            <param name="vb"></param>
        </member>
        <member name="T:FairyGUI.PlaneMesh">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.PolygonMesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.PolygonMesh.points">
            <summary>
            points must be in clockwise order, and must start from bottom-left if stretchUV is set.
            </summary>
        </member>
        <member name="F:FairyGUI.PolygonMesh.texcoords">
            <summary>
            if you dont want to provide uv, leave it empty.
            </summary>
        </member>
        <member name="F:FairyGUI.PolygonMesh.fillColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.PolygonMesh.colors">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.PolygonMesh.usePercentPositions">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.PolygonMesh.Add(Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:FairyGUI.PolygonMesh.Add(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="texcoord"></param>
        </member>
        <member name="T:FairyGUI.RectMesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RectMesh.drawRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RectMesh.lineWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RectMesh.lineColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RectMesh.fillColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RectMesh.colors">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.RegularPolygonMesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.drawRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.sides">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.lineWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.lineColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.centerColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.fillColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.distances">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RegularPolygonMesh.rotation">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.drawRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.lineWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.lineColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.fillColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.topLeftRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.topRightRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.bottomLeftRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.RoundedRectMesh.bottomRightRadius">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.VertexBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.VertexBuffer.contentRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.VertexBuffer.uvRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.VertexBuffer.vertexColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.VertexBuffer.vertices">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.VertexBuffer.colors">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.VertexBuffer.uv0">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.VertexBuffer.triangles">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.VertexBuffer.Begin">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.VertexBuffer.End">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.VertexBuffer.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.VertexBuffer.currentVertCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddVert(Microsoft.Xna.Framework.Vector3)">
            <summary>
            
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddVert(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="position"></param>
            <param name="color"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddVert(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="position"></param>
            <param name="color"></param>
            <param name="uv"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddQuad(System.Drawing.RectangleF)">
            <summary>
            
            1---2
            | / |
            0---3
            </summary>
            <param name="vertRect"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddQuad(System.Drawing.RectangleF,Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="vertRect"></param>
            <param name="color"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddQuad(System.Drawing.RectangleF,Microsoft.Xna.Framework.Color,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="vertRect"></param>
            <param name="color"></param>
            <param name="uvRect"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.RepeatColors(Microsoft.Xna.Framework.Color[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddTriangle(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="idx0"></param>
            <param name="idx1"></param>
            <param name="idx2"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddTriangles(System.Int32[],System.Int32)">
            <summary>
            
            </summary>
            <param name="idxList"></param>
            <param name="startVertexIndex"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.AddTriangles(System.Int32)">
            <summary>
            
            </summary>
            <param name="startVertexIndex"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.GetPosition(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.VertexBuffer.Append(FairyGUI.VertexBuffer)">
            <summary>
            
            </summary>
            <param name="vb"></param>
        </member>
        <member name="M:FairyGUI.VertexBuffer.Insert(FairyGUI.VertexBuffer)">
            <summary>
            
            </summary>
            <param name="vb"></param>
        </member>
        <member name="T:FairyGUI.MovieClip">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.MovieClip.Frame">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.MovieClip.interval">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.MovieClip.swing">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.MovieClip.repeatDelay">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.MovieClip.timeScale">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.MovieClip.ignoreEngineTimeScale">
            <summary>
            Whether to ignore Unity time scale.
            </summary>
        </member>
        <member name="M:FairyGUI.MovieClip.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.MovieClip.onPlayEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.MovieClip.frames">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.MovieClip.playing">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.MovieClip.frame">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.MovieClip.Rewind">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.MovieClip.SyncStatus(FairyGUI.MovieClip)">
            <summary>
            
            </summary>
            <param name="anotherMc"></param>
        </member>
        <member name="M:FairyGUI.MovieClip.Advance(System.Single)">
            <summary>
            
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:FairyGUI.MovieClip.SetPlaySettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.MovieClip.SetPlaySettings(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            从start帧开始，播放到end帧（-1表示结尾），重复times次（0表示无限循环），循环结束后，停止在endAt帧（-1表示参数end）
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="times"></param>
            <param name="endAt"></param>
        </member>
        <member name="T:FairyGUI.NGraphics">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.NGraphics.dontClip">
            <summary>
            不参与剪裁
            </summary>
        </member>
        <member name="T:FairyGUI.NGraphics.MeshModifier">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.NGraphics.meshModifier">
            <summary>
            当Mesh更新时被调用
            </summary>
        </member>
        <member name="M:FairyGUI.NGraphics.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NGraphics.meshFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.NGraphics.GetMeshFactory``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.NGraphics.contentRect">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NGraphics.flip">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NGraphics.texture">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NGraphics.color">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.NGraphics.SetMeshDirty">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.NGraphics.UpdateMesh">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.NGraphics.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.NTexture">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.NTexture.uvRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.NTexture.rotated">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.NTexture.refCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.NTexture.lastActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NTexture.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.NTexture.DisposeEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.NTexture.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            
            </summary>
            <param name="graphics"></param>
            <param name="texture"></param>
        </member>
        <member name="M:FairyGUI.NTexture.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="texture"></param>
            /// <param name="alphaTexture"></param>
            <param name="xScale"></param>
            <param name="yScale"></param>
        </member>
        <member name="M:FairyGUI.NTexture.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="texture"></param>
            <param name="region"></param>
        </member>
        <member name="M:FairyGUI.NTexture.#ctor(FairyGUI.NTexture,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            
            </summary>
            <param name="root"></param>
            <param name="region"></param>
        </member>
        <member name="M:FairyGUI.NTexture.#ctor(FairyGUI.NTexture,System.Drawing.RectangleF,System.Boolean,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="root"></param>
            <param name="region"></param>
            <param name="rotated"></param>
            <param name="originalSize"></param>
            <param name="offset"></param>
        </member>
        <member name="P:FairyGUI.NTexture.width">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NTexture.height">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NTexture.offset">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NTexture.originalSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.NTexture.GetDrawRect(System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="drawRect"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.NTexture.GetUV(Microsoft.Xna.Framework.Vector2[])">
            <summary>
            
            </summary>
            <param name="uv"></param>
        </member>
        <member name="P:FairyGUI.NTexture.root">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NTexture.disposed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NTexture.nativeTexture">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.NTexture.alphaTexture">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.NTexture.Unload">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Shape">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Shape.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Shape.color">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Shape.DrawRect(System.Single,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="lineSize"></param>
            <param name="lineColor"></param>
            <param name="fillColor"></param>
        </member>
        <member name="M:FairyGUI.Shape.DrawRect(System.Single,Microsoft.Xna.Framework.Color[])">
            <summary>
            
            </summary>
            <param name="lineSize"></param>
            <param name="colors"></param>
        </member>
        <member name="M:FairyGUI.Shape.DrawRoundRect(System.Single,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="lineSize"></param>
            <param name="lineColor"></param>
            <param name="fillColor"></param>
            <param name="topLeftRadius"></param>
            <param name="topRightRadius"></param>
            <param name="bottomLeftRadius"></param>
            <param name="bottomRightRadius"></param>
        </member>
        <member name="M:FairyGUI.Shape.DrawEllipse(Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="fillColor"></param>
        </member>
        <member name="M:FairyGUI.Shape.DrawEllipse(System.Single,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="lineSize"></param>
            <param name="centerColor"></param>
            <param name="lineColor"></param>
            <param name="fillColor"></param>
            <param name="startDegree"></param>
            <param name="endDegree"></param>
        </member>
        <member name="M:FairyGUI.Shape.DrawPolygon(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="fillColor"></param>
        </member>
        <member name="M:FairyGUI.Shape.DrawPolygon(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Color[])">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="colors"></param>
        </member>
        <member name="M:FairyGUI.Shape.DrawRegularPolygon(System.Int32,System.Single,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single[])">
            <summary>
            
            </summary>
            <param name="sides"></param>
            <param name="lineSize"></param>
            <param name="centerColor"></param>
            <param name="lineColor"></param>
            <param name="fillColor"></param>
            <param name="rotation"></param>
            <param name="distances"></param>
        </member>
        <member name="M:FairyGUI.Shape.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Shape.isEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Stage">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.soundVolume">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Stage.beforeUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Stage.afterUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.inst">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.isTouchOnUI">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.touchScreen">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Stage.#ctor(Microsoft.Xna.Framework.Game,FairyGUI.IInputHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Stage.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Stage.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.DrawOrder">
            <summary>
            绘制顺序
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.Visible">
            <summary>
            可见性
            </summary>
        </member>
        <member name="E:FairyGUI.Stage.DrawOrderChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:FairyGUI.Stage.VisibleChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.UpdateOrder">
            <summary>
            更新顺序
            </summary>
        </member>
        <member name="E:FairyGUI.Stage.EnabledChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:FairyGUI.Stage.UpdateOrderChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.touchTarget">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.focus">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Stage.touchPosition">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Stage.GetTouchPosition(System.Int32)">
            <summary>
            
            </summary>
            <param name="touchId"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Stage.CancelClick(System.Int32)">
            <summary>
            
            </summary>
            <param name="touchId"></param>
        </member>
        <member name="M:FairyGUI.Stage.EnableSound">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Stage.DisableSound">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Stage.PlayOneShotSound(Microsoft.Xna.Framework.Audio.SoundEffectInstance,System.Single)">
            <summary>
            
            </summary>
            <param name="clip"></param>
            <param name="volumeScale"></param>
        </member>
        <member name="M:FairyGUI.Stage.PlayOneShotSound(Microsoft.Xna.Framework.Audio.SoundEffectInstance)">
            <summary>
            
            </summary>
            <param name="clip"></param>
        </member>
        <member name="M:FairyGUI.Stage.MonitorTexture(FairyGUI.NTexture)">
            <summary>
            
            </summary>
            <param name="texture"></param>
        </member>
        <member name="M:FairyGUI.Stage.AddTouchMonitor(System.Int32,FairyGUI.EventDispatcher)">
            <summary>
            
            </summary>
            <param name="touchId"></param>
            <param name="target"></param>
        </member>
        <member name="M:FairyGUI.Stage.RemoveTouchMonitor(FairyGUI.EventDispatcher)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:FairyGUI.Stage.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:FairyGUI.Stage.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="T:FairyGUI.Stats">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Stats.ObjectCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Stats.GraphicsCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Stats.LatestObjectCreation">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Stats.LatestGraphicsCreation">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.BaseFont">
            <summary>
            Base class for all kind of fonts. 
            </summary>
        </member>
        <member name="P:FairyGUI.BaseFont.name">
            <summary>
            The name of this font object.
            </summary>
        </member>
        <member name="T:FairyGUI.GlyphInfo">
            <summary>
            Character info.
            </summary>
        </member>
        <member name="T:FairyGUI.BitmapFont">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.BitmapFont.BMGlyph">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.BitmapFont.size">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.BitmapFont.colorEnabled">
            <summary>
             Can this font be tinted? Will be true for dynamic font and fonts generated by BMFont.
            </summary>
        </member>
        <member name="F:FairyGUI.BitmapFont.scaleEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.BitmapFont.mainTexture">
            <summary>
            The texture of this font object.
            </summary>
        </member>
        <member name="T:FairyGUI.DynamicFont">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Emoji">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Emoji.url">
            <summary>
            代表图片资源url。
            </summary>
        </member>
        <member name="F:FairyGUI.Emoji.width">
            <summary>
            图片宽度。不设置（0）则表示使用原始宽度。
            </summary>
        </member>
        <member name="F:FairyGUI.Emoji.height">
            <summary>
            图片高度。不设置（0）则表示使用原始高度。
            </summary>
        </member>
        <member name="M:FairyGUI.Emoji.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FairyGUI.Emoji.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="T:FairyGUI.FontManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.FontManager.RegisterFont(FairyGUI.BaseFont,System.String)">
            <summary>
            
            </summary>
            <param name="font"></param>
            <param name="alias"></param>
        </member>
        <member name="M:FairyGUI.FontManager.UnregisterFont(FairyGUI.BaseFont)">
            <summary>
            
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:FairyGUI.FontManager.GetFont(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.FontManager.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.IMEAdapter">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.IMEAdapter.CompositionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.IMEAdapter.CompositionMode.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.IMEAdapter.CompositionMode.On">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.IMEAdapter.CompositionMode.Off">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IMEAdapter.compositionCursorPos">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IMEAdapter.compositionMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IMEAdapter.compositionString">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.InputTextField">
            <summary>
            接收用户输入的文本控件。因为支持直接输入表情，所以从RichTextField派生。
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.maxLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.editable">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.hideInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.CopyObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.onFocusIn">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.onFocusOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.onChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.onSubmit">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.text">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.textFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.caretPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.promptText">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputTextField.displayAsPassword">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.InputTextField.SetSelection(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="length">-1 means the rest count from start</param>
        </member>
        <member name="M:FairyGUI.InputTextField.ReplaceSelection(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.InputTextField.ReplaceText(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.InputTextField.GetCharPosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            通过本地坐标获得字符索引位置
            </summary>
            <param name="location">本地坐标</param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.InputTextField.GetCharLocation(FairyGUI.TextField.CharPosition)">
            <summary>
            获得字符的坐标。这个坐标是容器的坐标，不是文本里的坐标。
            </summary>
            <param name="cp"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.SelectionShape">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.SelectionShape.color">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.TextField">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.textFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.align">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.verticalAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.text">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.htmlText">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.autoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.wordWrap">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.singleLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.stroke">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.strokeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.shadowOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.textWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.textHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TextField.maxWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.TextField.Rebuild">
            <summary>
            立刻重建文本
            </summary>
        </member>
        <member name="M:FairyGUI.TextField.GetLinesShape(System.Int32,System.Single,System.Int32,System.Single,System.Boolean,System.Collections.Generic.List{System.Drawing.RectangleF})">
            <summary>
            
            </summary>
            <param name="startLine"></param>
            <param name="startCharX"></param>
            <param name="endLine"></param>
            <param name="endCharX"></param>
            <param name="clipped"></param>
            <param name="resultRects"></param>
        </member>
        <member name="F:FairyGUI.TextField.LineInfo.width">
            <summary>
            行的宽度
            </summary>
        </member>
        <member name="F:FairyGUI.TextField.LineInfo.height">
            <summary>
            行的高度
            </summary>
        </member>
        <member name="F:FairyGUI.TextField.LineInfo.textHeight">
            <summary>
            行内文本的高度
            </summary>
        </member>
        <member name="F:FairyGUI.TextField.LineInfo.y">
            <summary>
            行的y轴位置
            </summary>
        </member>
        <member name="F:FairyGUI.TextField.LineInfo.y2">
            <summary>
            行的y轴位置的备份
            </summary>
        </member>
        <member name="M:FairyGUI.TextField.LineInfo.Borrow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TextField.LineInfo.Return(FairyGUI.TextField.LineInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.TextField.LineInfo.Return(System.Collections.Generic.List{FairyGUI.TextField.LineInfo})">
            <summary>
            
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:FairyGUI.TextField.RenderElement.Borrow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TextField.RenderElement.Return(FairyGUI.TextField.RenderElement)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.TextField.RenderElement.Return(System.Collections.Generic.List{FairyGUI.TextField.RenderElement})">
            <summary>
            
            </summary>
            <param name="values"></param>
        </member>
        <member name="T:FairyGUI.TextField.CharPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextField.CharPosition.charIndex">
            <summary>
            字符索引
            </summary>
        </member>
        <member name="F:FairyGUI.TextField.CharPosition.lineIndex">
            <summary>
            字符所在的行索引
            </summary>
        </member>
        <member name="F:FairyGUI.TextField.CharPosition.offsetX">
            <summary>
            字符的x偏移
            </summary>
        </member>
        <member name="T:FairyGUI.TextFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.size">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.font">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.color">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.lineSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.letterSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.bold">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.underline">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.italic">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.align">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TextFormat.specialStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.TextFormat.SetColor(System.UInt32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.TextFormat.EqualStyle(FairyGUI.TextFormat)">
            <summary>
            
            </summary>
            <param name="aFormat"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TextFormat.CopyFrom(FairyGUI.TextFormat)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:FairyGUI.EventBridge">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.EventContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.EventContext.sender">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.EventContext.initiator">
            <summary>
            /
            </summary>
        </member>
        <member name="P:FairyGUI.EventContext.inputEvent">
            <summary>
            /
            </summary>
        </member>
        <member name="F:FairyGUI.EventContext.type">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.EventContext.data">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventContext.StopPropagation">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventContext.PreventDefault">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventContext.CaptureTouch">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.EventContext.isDefaultPrevented">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.EventDispatcher">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventDispatcher.AddEventListener(System.String,FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventDispatcher.AddEventListener(System.String,FairyGUI.EventCallback0)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventDispatcher.RemoveEventListener(System.String,FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventDispatcher.RemoveEventListener(System.String,FairyGUI.EventCallback0)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventDispatcher.RemoveEventListeners">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventDispatcher.RemoveEventListeners(System.String)">
            <summary>
            
            </summary>
            <param name="strType"></param>
        </member>
        <member name="M:FairyGUI.EventDispatcher.hasEventListeners(System.String)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventDispatcher.isDispatching(System.String)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventDispatcher.DispatchEvent(System.String)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventDispatcher.DispatchEvent(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventDispatcher.DispatchEvent(FairyGUI.EventContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventDispatcher.BubbleEvent(System.String,System.Object,System.Collections.Generic.List{FairyGUI.EventBridge})">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="data"></param>
            <param name="addChain"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventDispatcher.BubbleEvent(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventDispatcher.BroadcastEvent(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="strType"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.EventListener">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.EventListener.type">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventListener.AddCapture(FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventListener.RemoveCapture(FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventListener.Add(FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventListener.Remove(FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventListener.Add(FairyGUI.EventCallback0)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventListener.Remove(FairyGUI.EventCallback0)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventListener.Set(FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.EventListener.Set(FairyGUI.EventCallback0)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="P:FairyGUI.EventListener.isEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.EventListener.isDispatching">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventListener.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EventListener.Call">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventListener.Call(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventListener.BubbleCall(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventListener.BubbleCall">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventListener.BroadcastCall(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.EventListener.BroadcastCall">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.IEventDispatcher">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.InputEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.x">
            <summary>
            x position in stage coordinates.
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.y">
            <summary>
            y position in stage coordinates.
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.keyCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.KeyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.modifiers">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.mouseWheelDelta">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.touchId">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.button">
            <summary>
            -1-none,0-left,1-right,2-middle
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.position">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.isDoubleClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.ctrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.shift">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.InputEvent.alt">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.ColorFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ColorFilter.AdjustSaturation(System.Single)">
            <summary>
            Changes the saturation. Typical values are in the range (-1, 1).
            Values above zero will raise, values below zero will reduce the saturation.
            '-1' will produce a grayscale image. 
            </summary>
            <param name="sat"></param>
        </member>
        <member name="M:FairyGUI.ColorFilter.AdjustContrast(System.Single)">
            <summary>
            Changes the contrast. Typical values are in the range (-1, 1).
            Values above zero will raise, values below zero will reduce the contrast.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.ColorFilter.AdjustBrightness(System.Single)">
            <summary>
            Changes the brightness. Typical values are in the range (-1, 1).
            Values above zero will make the image brighter, values below zero will make it darker.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.ColorFilter.AdjustHue(System.Single)">
             <summary>
            Changes the hue of the image. Typical values are in the range (-1, 1).
             </summary>
             <param name="value"></param>
        </member>
        <member name="M:FairyGUI.ColorFilter.Tint(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Tints the image in a certain color, analog to what can be done in Adobe Animate.
            </summary>
            <param name="color">the RGB color with which the image should be tinted.</param>
            <param name="amount">the intensity with which tinting should be applied. Range (0, 1).</param>
        </member>
        <member name="M:FairyGUI.ColorFilter.Reset">
            <summary>
            Changes the filter matrix back to the identity matrix
            </summary>
        </member>
        <member name="M:FairyGUI.ColorFilter.ConcatValues(System.Single[])">
            <summary>
            
            </summary>
            <param name="values"></param>
        </member>
        <member name="P:FairyGUI.IFilter.target">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.IFilter.Update">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.IFilter.Apply(FairyGUI.FairyBatch)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.IFilter.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.EaseManager.Evaluate(FairyGUI.EaseType,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a value between 0 and 1 (inclusive) based on the elapsed time and ease selected
            </summary>
        </member>
        <member name="T:FairyGUI.EaseManager.Bounce">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:FairyGUI.EaseManager.Bounce.EaseIn(System.Single,System.Single)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:FairyGUI.EaseManager.Bounce.EaseOut(System.Single,System.Single)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:FairyGUI.EaseManager.Bounce.EaseInOut(System.Single,System.Single)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:FairyGUI.EaseType">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GPathPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GPathPoint.pos">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GPathPoint.control1">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GPathPoint.control2">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GPathPoint.curveType">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GPathPoint.CurveType">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GPathPoint.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:FairyGUI.GPathPoint.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <param name="control"></param>
        </member>
        <member name="M:FairyGUI.GPathPoint.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <param name="control1"></param>
            <param name="control2"></param>
        </member>
        <member name="M:FairyGUI.GPathPoint.#ctor(Microsoft.Xna.Framework.Vector3,FairyGUI.GPathPoint.CurveType)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <param name="curveType"></param>
        </member>
        <member name="T:FairyGUI.GPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GPath.length">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GPath.Create(System.Collections.Generic.IEnumerable{FairyGUI.GPathPoint})">
            <summary>
            
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:FairyGUI.GPath.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GPath.GetPointAt(System.Single)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GPath.segmentCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GPath.GetSegmentLength(System.Int32)">
            <summary>
            
            </summary>
            <param name="segmentIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GPath.GetPointsInSegment(System.Int32,System.Single,System.Single,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector3},System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            
            </summary>
            <param name="segmentIndex"></param>
            <param name="t0"></param>
            <param name="t1"></param>
            <param name="points"></param>
            <param name="ts"></param>
        </member>
        <member name="M:FairyGUI.GPath.GetAllPoints(System.Collections.Generic.List{Microsoft.Xna.Framework.Vector3},System.Single)">
            <summary>
            
            </summary>
            <param name="points"></param>
        </member>
        <!-- 对于成员“M:FairyGUI.GPath.onCRSplineCurve(System.Int32,System.Int32,System.Single)”忽略有格式错误的 XML 注释 -->
        <member name="T:FairyGUI.GTween">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GTween.catchCallbackExceptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTween.To(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.To(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.To(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.To(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.To(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.ToDouble(System.Double,System.Double,System.Single)">
            <summary>
            
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.DelayedCall(System.Single)">
            <summary>
            
            </summary>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.Shake(Microsoft.Xna.Framework.Vector3,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="startValue"></param>
            <param name="amplitude"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.IsTweening(System.Object)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.IsTweening(System.Object,FairyGUI.TweenPropType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="propType"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.Kill(System.Object)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:FairyGUI.GTween.Kill(System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="complete"></param>
        </member>
        <member name="M:FairyGUI.GTween.Kill(System.Object,FairyGUI.TweenPropType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="propType"></param>
            <param name="complete"></param>
        </member>
        <member name="M:FairyGUI.GTween.GetTween(System.Object)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.GetTween(System.Object,FairyGUI.TweenPropType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="propType"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTween.Clean">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GTweenCallback">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GTweenCallback1">
            <summary>
            
            </summary>
            <param name="tweener"></param>
        </member>
        <member name="T:FairyGUI.ITweenListener">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ITweenListener.OnTweenStart(FairyGUI.GTweener)">
            <summary>
            
            </summary>
            <param name="tweener"></param>
        </member>
        <member name="M:FairyGUI.ITweenListener.OnTweenUpdate(FairyGUI.GTweener)">
            <summary>
            
            </summary>
            <param name="tweener"></param>
        </member>
        <member name="M:FairyGUI.ITweenListener.OnTweenComplete(FairyGUI.GTweener)">
            <summary>
            
            </summary>
            <param name="tweener"></param>
        </member>
        <member name="T:FairyGUI.GTweener">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTweener.SetDelay(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GTweener.delay">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTweener.SetDuration(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GTweener.duration">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTweener.SetBreakpoint(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetEase(FairyGUI.EaseType)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetEasePeriod(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetEaseOvershootOrAmplitude(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetRepeat(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="repeat"></param>
            <param name="yoyo"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GTweener.repeat">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTweener.SetTimeScale(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetIgnoreEngineTimeScale(System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetSnapping(System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetTarget(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetTarget(System.Object,FairyGUI.TweenPropType)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="propType"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GTweener.target">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTweener.SetUserData(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GTweener.userData">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTweener.OnUpdate(FairyGUI.GTweenCallback)">
            <summary>
            
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.OnStart(FairyGUI.GTweenCallback)">
            <summary>
            
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.OnComplete(FairyGUI.GTweenCallback)">
            <summary>
            
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.OnUpdate(FairyGUI.GTweenCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.OnStart(FairyGUI.GTweenCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.OnComplete(FairyGUI.GTweenCallback1)">
            <summary>
            
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.SetListener(FairyGUI.ITweenListener)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GTweener.startValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTweener.endValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTweener.value">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTweener.deltaValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTweener.normalizedTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTweener.completed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTweener.allCompleted">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTweener.SetPaused(System.Boolean)">
            <summary>
            
            </summary>
            <param name="paused"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTweener.Seek(System.Single)">
            <summary>
            
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:FairyGUI.GTweener.Kill(System.Boolean)">
            <summary>
            
            </summary>
            <param name="complete"></param>
        </member>
        <member name="T:FairyGUI.TweenPropType">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.TweenValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TweenValue.x">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TweenValue.y">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TweenValue.z">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TweenValue.w">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TweenValue.d">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TweenValue.vec2">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TweenValue.vec3">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TweenValue.vec4">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TweenValue.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TweenValue.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TweenValue.SetZero">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Controller">
            <summary>
            Controller class.
            控制器类。控制器的创建和设计需通过编辑器完成，不建议使用代码创建。
            最常用的方法是通过selectedIndex获得或改变控制器的活动页面。如果要获得控制器页面改变的通知，使用onChanged事件。
            </summary>
        </member>
        <member name="F:FairyGUI.Controller.name">
            <summary>
            Name of the controller
            控制器名称。
            </summary>
        </member>
        <member name="P:FairyGUI.Controller.onChanged">
            <summary>
            When controller page changed.
            当控制器活动页面改变时，此事件被触发。
            </summary>
        </member>
        <member name="P:FairyGUI.Controller.selectedIndex">
            <summary>
            Current page index.
            获得或设置当前活动页面索引。
            </summary>
        </member>
        <member name="M:FairyGUI.Controller.SetSelectedIndex(System.Int32)">
            <summary>
            Set current page index, no onChanged event.
            通过索引设置当前活动页面，和selectedIndex的区别在于，这个方法不会触发onChanged事件。
            </summary>
            <param name="value">Page index</param>
        </member>
        <member name="M:FairyGUI.Controller.SetSelectedPage(System.String)">
            <summary>
            Set current page by name, no onChanged event.
            通过页面名称设置当前活动页面，和selectedPage的区别在于，这个方法不会触发onChanged事件。
            </summary>
            <param name="value">Page name</param>
        </member>
        <member name="P:FairyGUI.Controller.selectedPage">
            <summary>
            Current page name.
            获得当前活动页面名称
            </summary>
        </member>
        <member name="P:FairyGUI.Controller.previsousIndex">
            <summary>
            Previouse page index.
            获得上次活动页面索引
            </summary>
        </member>
        <member name="P:FairyGUI.Controller.previousPage">
            <summary>
            Previous page name.
            获得上次活动页面名称。
            </summary>
        </member>
        <member name="P:FairyGUI.Controller.pageCount">
            <summary>
            Page count of this controller.
            获得页面数量。
            </summary>
        </member>
        <member name="M:FairyGUI.Controller.GetPageName(System.Int32)">
            <summary>
            Get page name by an index.
            通过页面索引获得页面名称。
            </summary>
            <param name="index">Page index</param>
            <returns>Page Name</returns>
        </member>
        <member name="M:FairyGUI.Controller.GetPageIdByName(System.String)">
            <summary>
            Get page id by name
            </summary>
            <param name="aName"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Controller.AddPage(System.String)">
            <summary>
            Add a new page to this controller.
            </summary>
            <param name="name">Page name</param>
        </member>
        <member name="M:FairyGUI.Controller.AddPageAt(System.String,System.Int32)">
            <summary>
            Add a new page to this controller at a certain index.
            </summary>
            <param name="name">Page name</param>
            <param name="index">Insert position</param>
        </member>
        <member name="M:FairyGUI.Controller.RemovePage(System.String)">
            <summary>
            Remove a page.
            </summary>
            <param name="name">Page name</param>
        </member>
        <member name="M:FairyGUI.Controller.RemovePageAt(System.Int32)">
            <summary>
            Removes a page at a certain index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:FairyGUI.Controller.ClearPages">
            <summary>
            Remove all pages.
            </summary>
        </member>
        <member name="M:FairyGUI.Controller.HasPage(System.String)">
            <summary>
            Check if the controller has a page.
            </summary>
            <param name="aName">Page name.</param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.DragDropManager">
            <summary>
            Helper for drag and drop.
            这是一个提供特殊拖放功能的功能类。与GObject.draggable不同，拖动开始后，他使用一个替代的图标作为拖动对象。
            当玩家释放鼠标/手指，目标组件会发出一个onDrop事件。
            </summary>
        </member>
        <member name="P:FairyGUI.DragDropManager.dragAgent">
            <summary>
            Loader object for real dragging.
            用于实际拖动的Loader对象。你可以根据实际情况设置loader的大小，对齐等。
            </summary>
        </member>
        <member name="P:FairyGUI.DragDropManager.dragging">
            <summary>
            Is dragging?
            返回当前是否正在拖动。
            </summary>
        </member>
        <member name="M:FairyGUI.DragDropManager.StartDrag(FairyGUI.GObject,System.String,System.Object,System.Int32)">
            <summary>
            Start dragging.
            开始拖动。
            </summary>
            <param name="source">Source object. This is the object which initiated the dragging.</param>
            <param name="icon">Icon to be used as the dragging sign.</param>
            <param name="sourceData">Custom data. You can get it in the onDrop event data.</param>
            <param name="touchPointID">Copy the touchId from InputEvent to here, if has one.</param>
        </member>
        <member name="M:FairyGUI.DragDropManager.Cancel">
            <summary>
            Cancel dragging.
            取消拖动。
            </summary>
        </member>
        <member name="T:FairyGUI.FlipType">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.FillMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.FillMethod.Horizontal">
            <summary>
            The Image will be filled Horizontally
            </summary>
        </member>
        <member name="F:FairyGUI.FillMethod.Vertical">
            <summary>
            The Image will be filled Vertically.
            </summary>
        </member>
        <member name="F:FairyGUI.FillMethod.Radial90">
            <summary>
            The Image will be filled Radially with the radial center in one of the corners.
            </summary>
        </member>
        <member name="F:FairyGUI.FillMethod.Radial180">
            <summary>
            The Image will be filled Radially with the radial center in one of the edges.
            </summary>
        </member>
        <member name="F:FairyGUI.FillMethod.Radial360">
            <summary>
            The Image will be filled Radially with the radial center at the center.
            </summary>
        </member>
        <member name="T:FairyGUI.OriginHorizontal">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.OriginVertical">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Origin90">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Origin180">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Origin360">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GButton">
            <summary>
            GButton class.
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.pageOption">
            <summary>
            The button will be in down status in these pages.
            </summary>
        </member>
        <member name="F:FairyGUI.GButton.sound">
            <summary>
            Play sound when button is clicked.
            </summary>
        </member>
        <member name="F:FairyGUI.GButton.soundVolumeScale">
            <summary>
            Volume of the click sound. (0-1)
            </summary>
        </member>
        <member name="F:FairyGUI.GButton.changeStateOnClick">
            <summary>
            For radio or checkbox. if false, the button will not change selected status on click. Default is true.
            如果为true，对于单选和多选按钮，当玩家点击时，按钮会自动切换状态。设置为false，则不会。默认为true。
            </summary>
        </member>
        <member name="F:FairyGUI.GButton.linkedPopup">
            <summary>
            Show a popup on click.
            可以为按钮设置一个关联的组件，当按钮被点击时，此组件被自动弹出。
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.onChanged">
            <summary>
            Dispatched when the button status was changed.
            如果为单选或多选按钮，当按钮的选中状态发生改变时，此事件触发。
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.icon">
            <summary>
            Icon of the button.
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.title">
            <summary>
            Title of the button
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.text">
            <summary>
            Same of the title.
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.selectedIcon">
            <summary>
            Icon value on selected status.
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.selectedTitle">
            <summary>
            Title value on selected status.
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.titleColor">
            <summary>
            Title color.
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.titleFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.selected">
            <summary>
            If the button is in selected status.
            </summary>
        </member>
        <member name="P:FairyGUI.GButton.mode">
            <summary>
            Button mode.
            </summary>
            <seealso cref="T:FairyGUI.ButtonMode"/>
        </member>
        <member name="P:FairyGUI.GButton.relatedController">
            <summary>
            A controller is connected to this button, the activate page of this controller will change while the button status changed.
            对应编辑器中的单选控制器。
            </summary>
        </member>
        <member name="M:FairyGUI.GButton.FireClick(System.Boolean)">
            <summary>
            Simulates a click on this button.
            模拟点击这个按钮。
            </summary>
            <param name="downEffect">If the down effect will simulate too.</param>
        </member>
        <member name="M:FairyGUI.GButton.GetTextField">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.GComboBox">
            <summary>
            GComboBox class.
            </summary>
        </member>
        <member name="F:FairyGUI.GComboBox.visibleItemCount">
            <summary>
            Visible item count of the drop down list.
            </summary>
        </member>
        <member name="F:FairyGUI.GComboBox.dropdown">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.onChanged">
            <summary>
            Dispatched when selection was changed.
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.icon">
            <summary>
            Icon of the combobox.
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.title">
            <summary>
            Title of the combobox.
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.text">
            <summary>
            Same of the title.
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.titleColor">
            <summary>
            Text color
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.titleFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.items">
            <summary>
            Items to build up drop down list.
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.values">
            <summary>
            Values, should be same size of the items. 
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.selectedIndex">
            <summary>
            Selected index.
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.selectionController">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.value">
            <summary>
            Selected value.
            </summary>
        </member>
        <member name="P:FairyGUI.GComboBox.popupDirection">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GComboBox.GetTextField">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.GComponent">
            <summary>
            Component
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.rootContainer">
            <summary>
            Root container.
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.container">
            <summary>
            Content container. If the component is not clipped, then container==rootContainer.
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.scrollPane">
            <summary>
            ScrollPane of the component. If the component is not scrollable, the value is null.
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.onDrop">
            <summary>
            Dispatched when an object was dragged and dropped to this component.
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.opaque">
            <summary>
            If true, mouse/touch events cannot pass through the empty area of the component. Default is true.
            </summary>
        </member>
        <member name="M:FairyGUI.GComponent.AddChild(FairyGUI.GObject)">
            <summary>
            Add a child to the component. It will be at the frontmost position.
            </summary>
            <param name="child">A child object</param>
            <returns>GObject</returns>
        </member>
        <member name="M:FairyGUI.GComponent.AddChildAt(FairyGUI.GObject,System.Int32)">
            <summary>
            Adds a child to the component at a certain index.
            </summary>
            <param name="child">A child object</param>
            <param name="index">Index</param>
            <returns>GObject</returns>
        </member>
        <member name="M:FairyGUI.GComponent.RemoveChild(FairyGUI.GObject)">
            <summary>
            Removes a child from the component. If the object is not a child, nothing happens. 
            </summary>
            <param name="child">A child object</param>
            <returns>GObject</returns>
        </member>
        <member name="M:FairyGUI.GComponent.RemoveChild(FairyGUI.GObject,System.Boolean)">
            <summary>
            Removes a child from the component. If the object is not a child, nothing happens. 
            </summary>
            <param name="child">A child object</param>
            <param name="dispose">If true, the child will be disposed right away.</param>
            <returns>GObject</returns>
        </member>
        <member name="M:FairyGUI.GComponent.RemoveChildAt(System.Int32)">
            <summary>
            Removes a child at a certain index. Children above the child will move down.
            </summary>
            <param name="index">Index</param>
            <returns>GObject</returns>
        </member>
        <member name="M:FairyGUI.GComponent.RemoveChildAt(System.Int32,System.Boolean)">
            <summary>
            Removes a child at a certain index. Children above the child will move down.
            </summary>
            <param name="index">Index</param>
            <param name="dispose">If true, the child will be disposed right away.</param>
            <returns>GObject</returns>
        </member>
        <member name="M:FairyGUI.GComponent.RemoveChildren">
            <summary>
            Remove all children.
            </summary>
        </member>
        <member name="M:FairyGUI.GComponent.RemoveChildren(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Removes a range of children from the container (endIndex included). 
            </summary>
            <param name="beginIndex">Begin index.</param>
            <param name="endIndex">End index.(Included).</param>
            <param name="dispose">If true, the child will be disposed right away.</param>
        </member>
        <member name="M:FairyGUI.GComponent.GetChildAt(System.Int32)">
            <summary>
            Returns a child object at a certain index. If index out of bounds, exception raised.
            </summary>
            <param name="index">Index</param>
            <returns>A child object.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetChild(System.String)">
            <summary>
            Returns a child object with a certain name.
            </summary>
            <param name="name">Name</param>
            <returns>A child object. Null if not found.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetVisibleChild(System.String)">
            <summary>
            Returns a visible child object with a certain name.
            </summary>
            <param name="name">Name</param>
            <returns>A child object. Null if not found.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetChildInGroup(FairyGUI.GGroup,System.String)">
            <summary>
            Returns a child object belong to a group with a certain name.
            </summary>
            <param name="group">A group object</param>
            <param name="name">Name</param>
            <returns>A child object. Null if not found.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetChildren">
            <summary>
            Returns a copy of all children with an array.
            </summary>
            <returns>An array contains all children</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetChildIndex(FairyGUI.GObject)">
            <summary>
            Returns the index of a child within the container, or "-1" if it is not found.
            </summary>
            <param name="child">A child object</param>
            <returns>Index of the child. -1 If not found.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.SetChildIndex(FairyGUI.GObject,System.Int32)">
            <summary>
            Moves a child to a certain index. Children at and after the replaced position move up.
            </summary>
            <param name="child">A Child</param>
            <param name="index">Index</param>
        </member>
        <member name="M:FairyGUI.GComponent.SetChildIndexBefore(FairyGUI.GObject,System.Int32)">
            <summary>
            Moves a child to a certain position which is in front of the child previously at given index.
            与SetChildIndex不同的是，如果child原来在index的前面，那么child插入的位置是index-1，即保证排在原来占据index的对象的前面。
            </summary>
            <param name="child"></param>
            <param name="index"></param>
        </member>
        <member name="M:FairyGUI.GComponent.SwapChildren(FairyGUI.GObject,FairyGUI.GObject)">
            <summary>
            Swaps the indexes of two children. 
            </summary>
            <param name="child1">A child object</param>
            <param name="child2">A child object</param>
        </member>
        <member name="M:FairyGUI.GComponent.SwapChildrenAt(System.Int32,System.Int32)">
            <summary>
             Swaps the indexes of two children.
            </summary>
            <param name="index1">index of first child</param>
            <param name="index2">index of second child</param>
        </member>
        <member name="P:FairyGUI.GComponent.numChildren">
            <summary>
            The number of children of this component.
            </summary>
        </member>
        <member name="M:FairyGUI.GComponent.IsAncestorOf(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GComponent.AddController(FairyGUI.Controller)">
            <summary>
            Adds a controller to the container.
            </summary>
            <param name="controller">Controller object</param>
        </member>
        <member name="M:FairyGUI.GComponent.GetControllerAt(System.Int32)">
            <summary>
            Returns a controller object  at a certain index.
            </summary>
            <param name="index">Index</param>
            <returns>Controller object.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetController(System.String)">
            <summary>
            Returns a controller object with a certain name.
            </summary>
            <param name="name">Name</param>
            <returns>Controller object. Null if not found.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.RemoveController(FairyGUI.Controller)">
            <summary>
            Removes a controller from the container. 
            </summary>
            <param name="c">Controller object.</param>
        </member>
        <member name="P:FairyGUI.GComponent.Controllers">
            <summary>
            Returns controller list.
            </summary>
            <returns>Controller list</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetTransitionAt(System.Int32)">
            <summary>
            Returns a transition object  at a certain index.
            </summary>
            <param name="index">Index</param>
            <returns>transition object.</returns>
        </member>
        <member name="M:FairyGUI.GComponent.GetTransition(System.String)">
            <summary>
            Returns a transition object at a certain name. 
            </summary>
            <param name="name">Name</param>
            <returns>Transition Object</returns>
        </member>
        <member name="P:FairyGUI.GComponent.mask">
            <summary>
            The mask of the component.
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.baseUserData">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GComponent.IsChildInView(FairyGUI.GObject)">
            <summary>
            Test if a child is in view.
            </summary>
            <param name="child">A child object</param>
            <returns>True if in view</returns>
        </member>
        <member name="M:FairyGUI.GComponent.SetBoundsChangedFlag">
            <summary>
            Notify the component the bounds should recaculate.
            </summary>
        </member>
        <member name="M:FairyGUI.GComponent.EnsureBoundsCorrect">
            <summary>
            Make sure the bounds of the component is correct. 
            Bounds of the component is not updated on every changed. For example, you add a new child to the list, children in the list will be rearranged in next frame.
            If you want to access the correct child position immediatelly, call this function first.
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.viewWidth">
            <summary>
            Viwe port width of the container.
            </summary>
        </member>
        <member name="P:FairyGUI.GComponent.viewHeight">
            <summary>
            View port height of the container.
            </summary>
        </member>
        <member name="M:FairyGUI.GComponent.OnConstruct">
            <summary>
            Method for extensions to override
            </summary>
        </member>
        <member name="M:FairyGUI.GComponent.OnUpdate">
            <summary>
            每帧调用的一个回调。如果你要override，请记住以下两点：
            1、记得调用base.onUpdate;
            2、不要在方法里进行任何会更改显示列表的操作，例如AddChild、RemoveChild、visible等。
            </summary>
        </member>
        <member name="T:FairyGUI.GearIcon">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="T:FairyGUI.GearAnimation">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="T:FairyGUI.GearBase">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="P:FairyGUI.GearBase.controller">
            <summary>
            Controller object.
            </summary>
        </member>
        <member name="M:FairyGUI.GearBase.Apply">
            <summary>
            Call when controller active page changed.
            </summary>
        </member>
        <member name="M:FairyGUI.GearBase.UpdateState">
            <summary>
            Call when object's properties changed.
            </summary>
        </member>
        <member name="F:FairyGUI.GearTweenConfig.tween">
            <summary>
            Use tween to apply change.
            </summary>
        </member>
        <member name="F:FairyGUI.GearTweenConfig.easeType">
            <summary>
            Ease type.
            </summary>
        </member>
        <member name="F:FairyGUI.GearTweenConfig.duration">
            <summary>
            Tween duration in seconds.
            </summary>
        </member>
        <member name="F:FairyGUI.GearTweenConfig.delay">
            <summary>
            Tween delay in seconds.
            </summary>
        </member>
        <member name="T:FairyGUI.GearColor">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="T:FairyGUI.GearDisplay">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="P:FairyGUI.GearDisplay.pages">
            <summary>
            Pages involed in this gear.
            </summary>
        </member>
        <member name="T:FairyGUI.GearLook">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="T:FairyGUI.GearSize">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="T:FairyGUI.GearXY">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="T:FairyGUI.IAnimationGear">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IAnimationGear.playing">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IAnimationGear.frame">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IAnimationGear.timeScale">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IAnimationGear.ignoreEngineTimeScale">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.IAnimationGear.Advance(System.Single)">
            <summary>
            
            </summary>
            <param name="time"></param>
        </member>
        <member name="T:FairyGUI.GearText">
            <summary>
            Gear is a connection between object and controller.
            </summary>
        </member>
        <member name="T:FairyGUI.GGraph">
            <summary>
            GGraph class.
            对应编辑器里的图形对象。图形有两个用途，一是用来显示简单的图形，例如矩形等；二是作为一个占位的用途，
            可以将本对象替换为其他对象，或者在它的前后添加其他对象，相当于一个位置和深度的占位；还可以直接将内容设置
            为原生对象。
            </summary>
        </member>
        <member name="M:FairyGUI.GGraph.ReplaceMe(FairyGUI.GObject)">
            <summary>
            Replace this object to another object in the display list.
            在显示列表中，将指定对象取代这个图形对象。这个图形对象相当于一个占位的用途。
            </summary>
            <param name="target">Target object.</param>
        </member>
        <member name="M:FairyGUI.GGraph.AddBeforeMe(FairyGUI.GObject)">
            <summary>
            Add another object before this object.
            在显示列表中，将另一个对象插入到这个对象的前面。
            </summary>
            <param name="target">Target object.</param>
        </member>
        <member name="M:FairyGUI.GGraph.AddAfterMe(FairyGUI.GObject)">
            <summary>
            Add another object after this object.
            在显示列表中，将另一个对象插入到这个对象的后面。
            </summary>
            <param name="target">Target object.</param>
        </member>
        <member name="M:FairyGUI.GGraph.SetNativeObject(FairyGUI.DisplayObject)">
            <summary>
            设置内容为一个原生对象。这个图形对象相当于一个占位的用途。
            </summary>
            <param name="obj">原生对象</param>
        </member>
        <member name="P:FairyGUI.GGraph.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GGraph.shape">
            <summary>
            Get the shape object. It can be used for drawing.
            获取图形的原生对象，可用于绘制图形。
            </summary>
        </member>
        <member name="M:FairyGUI.GGraph.DrawRect(System.Single,System.Single,System.Int32,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a rectangle.
            画矩形。
            </summary>
            <param name="aWidth">Width</param>
            <param name="aHeight">Height</param>
            <param name="lineSize">Line size</param>
            <param name="lineColor">Line color</param>
            <param name="fillColor">Fill color</param>
        </member>
        <member name="M:FairyGUI.GGraph.DrawRoundRect(System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Single[])">
            <summary>
            
            </summary>
            <param name="aWidth"></param>
            <param name="aHeight"></param>
            <param name="fillColor"></param>
            <param name="corner"></param>
        </member>
        <member name="M:FairyGUI.GGraph.DrawEllipse(System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="aWidth"></param>
            <param name="aHeight"></param>
            <param name="fillColor"></param>
        </member>
        <member name="M:FairyGUI.GGraph.DrawPolygon(System.Single,System.Single,Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="aWidth"></param>
            <param name="aHeight"></param>
            <param name="points"></param>
            <param name="fillColor"></param>
        </member>
        <member name="T:FairyGUI.GGroup">
            <summary>
            GGroup class.
            组对象，对应编辑器里的高级组。
            </summary>
        </member>
        <member name="P:FairyGUI.GGroup.layout">
            <summary>
            Group layout type.
            </summary>
        </member>
        <member name="P:FairyGUI.GGroup.lineGap">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GGroup.columnGap">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GGroup.SetBoundsChangedFlag(System.Boolean)">
            <summary>
            Update group bounds.
            更新组的包围.
            </summary>
        </member>
        <member name="T:FairyGUI.GImage">
            <summary>
            GImage class.
            </summary>
        </member>
        <member name="P:FairyGUI.GImage.color">
            <summary>
            Color of the image. 
            </summary>
        </member>
        <member name="P:FairyGUI.GImage.flip">
            <summary>
            Flip type.
            </summary>
            <seealso cref="T:FairyGUI.FlipType"/>
        </member>
        <member name="P:FairyGUI.GImage.fillMethod">
            <summary>
            Fill method.
            </summary>
            <seealso cref="T:FairyGUI.FillMethod"/>
        </member>
        <member name="P:FairyGUI.GImage.fillOrigin">
            <summary>
            Fill origin.
            </summary>
            <seealso cref="T:FairyGUI.OriginHorizontal"/>
            <seealso cref="T:FairyGUI.OriginVertical"/>
            <seealso cref="T:FairyGUI.Origin90"/>
            <seealso cref="T:FairyGUI.Origin180"/>
            <seealso cref="T:FairyGUI.Origin360"/>
        </member>
        <member name="P:FairyGUI.GImage.fillClockwise">
            <summary>
            Fill clockwise if true.
            </summary>
        </member>
        <member name="P:FairyGUI.GImage.fillAmount">
            <summary>
            Fill amount. (0~1)
            </summary>
        </member>
        <member name="P:FairyGUI.GImage.texture">
            <summary>
            Set texture directly. The image wont own the texture.
            </summary>
        </member>
        <member name="T:FairyGUI.GLabel">
            <summary>
            GLabel class.
            </summary>
        </member>
        <member name="P:FairyGUI.GLabel.icon">
            <summary>
            Icon of the label.
            </summary>
        </member>
        <member name="P:FairyGUI.GLabel.title">
            <summary>
            Title of the label.
            </summary>
        </member>
        <member name="P:FairyGUI.GLabel.text">
            <summary>
            Same of the title.
            </summary>
        </member>
        <member name="P:FairyGUI.GLabel.editable">
            <summary>
            If title is input text.
            </summary>
        </member>
        <member name="P:FairyGUI.GLabel.titleColor">
            <summary>
            Title color of the label
            </summary>
        </member>
        <member name="P:FairyGUI.GLabel.titleFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLabel.color">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GLabel.GetTextField">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.ListItemRenderer">
            <summary>
            Callback function when an item is needed to update its look.
            </summary>
            <param name="index">Item index.</param>
            <param name="item">Item object.</param>
        </member>
        <member name="T:FairyGUI.ListItemProvider">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.GList">
            <summary>
            GList class.
            </summary>
        </member>
        <member name="F:FairyGUI.GList.defaultItem">
            <summary>
            Resource url of the default item.
            </summary>
        </member>
        <member name="F:FairyGUI.GList.foldInvisibleItems">
            <summary>
            如果true，当item不可见时自动折叠，否则依然占位
            </summary>
        </member>
        <member name="F:FairyGUI.GList.selectionMode">
            <summary>
            List selection mode
            </summary>
            <seealso cref="T:FairyGUI.ListSelectionMode"/>
        </member>
        <member name="F:FairyGUI.GList.itemRenderer">
            <summary>
            Callback function when an item is needed to update its look.
            </summary>
        </member>
        <member name="F:FairyGUI.GList.itemProvider">
            <summary>
            Callback funtion to return item resource url.
            </summary>
        </member>
        <member name="F:FairyGUI.GList.scrollItemToViewOnClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.onClickItem">
            <summary>
            Dispatched when a list item being clicked.
            </summary>
        </member>
        <member name="P:FairyGUI.GList.onRightClickItem">
            <summary>
            Dispatched when a list item being clicked with right button.
            </summary>
        </member>
        <member name="P:FairyGUI.GList.layout">
            <summary>
            List layout type.
            </summary>
        </member>
        <member name="P:FairyGUI.GList.lineCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.columnCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.lineGap">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.columnGap">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.align">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.verticalAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.autoResizeItem">
            <summary>
            If the item will resize itself to fit the list width/height.
            </summary>
        </member>
        <member name="P:FairyGUI.GList.itemPool">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.GetFromPool(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GList.AddItemFromPool">
            <summary>
            Add a item to list, same as GetFromPool+AddChild
            </summary>
            <returns>Item object</returns>
        </member>
        <member name="M:FairyGUI.GList.AddItemFromPool(System.String)">
            <summary>
            Add a item to list, same as GetFromPool+AddChild
            </summary>
            <param name="url">Item resource url</param>
            <returns>Item object</returns>
        </member>
        <member name="M:FairyGUI.GList.AddChildAt(FairyGUI.GObject,System.Int32)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GList.RemoveChildAt(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GList.RemoveChildToPoolAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:FairyGUI.GList.RemoveChildToPool(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:FairyGUI.GList.RemoveChildrenToPool">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.RemoveChildrenToPool(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="beginIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="P:FairyGUI.GList.selectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GList.selectionController">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.GetSelection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GList.AddSelection(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="scrollItToView"></param>
        </member>
        <member name="M:FairyGUI.GList.RemoveSelection(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:FairyGUI.GList.ClearSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.SelectAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.SelectNone">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.SelectReverse">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.HandleArrowKey(System.Int32)">
            <summary>
            
            </summary>
            <param name="dir"></param>
        </member>
        <member name="M:FairyGUI.GList.ResizeToFit(System.Int32)">
            <summary>
            Resize to list size to fit specified item count. 
            If list layout is single column or flow horizontally, the height will change to fit. 
            If list layout is single row or flow vertically, the width will change to fit.
            </summary>
            <param name="itemCount">Item count</param>
        </member>
        <member name="M:FairyGUI.GList.ResizeToFit(System.Int32,System.Int32)">
            <summary>
            Resize to list size to fit specified item count. 
            If list layout is single column or flow horizontally, the height will change to fit. 
            If list layout is single row or flow vertically, the width will change to fit.
            </summary>
            <param name="itemCount">>Item count</param>
            <param name="minSize">If the result size if smaller than minSize, then use minSize.</param>
        </member>
        <member name="M:FairyGUI.GList.HandleSizeChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GList.ScrollToView(System.Int32)">
            <summary>
            Scroll the list to make an item with certain index visible.
            </summary>
            <param name="index">Item index</param>
        </member>
        <member name="M:FairyGUI.GList.ScrollToView(System.Int32,System.Boolean)">
            <summary>
             Scroll the list to make an item with certain index visible.
            </summary>
            <param name="index">Item index</param>
            <param name="ani">True to scroll smoothly, othewise immdediately.</param>
        </member>
        <member name="M:FairyGUI.GList.ScrollToView(System.Int32,System.Boolean,System.Boolean)">
            <summary>
             Scroll the list to make an item with certain index visible.
            </summary>
            <param name="index">Item index</param>
            <param name="ani">True to scroll smoothly, othewise immdediately.</param>
            <param name="setFirst">If true, scroll to make the target on the top/left; If false, scroll to make the target any position in view.</param>
        </member>
        <member name="P:FairyGUI.GList.touchItem">
            <summary>
            获取当前点击哪个item
            </summary>
        </member>
        <member name="M:FairyGUI.GList.GetFirstChildInView">
            <summary>
            Get first child in view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GList.SetVirtual">
            <summary>
            Set the list to be virtual list.
            设置列表为虚拟列表模式。在虚拟列表模式下，列表不会为每一条列表数据创建一个实体对象，而是根据视口大小创建最小量的显示对象，然后通过itemRenderer指定的回调函数设置列表数据。
            在虚拟模式下，你不能通过AddChild、RemoveChild等方式管理列表，只能通过设置numItems设置列表数据的长度。
            如果要刷新列表，可以通过重新设置numItems，或者调用RefreshVirtualList完成。
            ‘单行’或者‘单列’的列表布局可支持不等高的列表项目。
            除了‘页面’的列表布局，其他布局均支持使用不同资源构建列表项目，你可以在itemProvider里返回。如果不提供，默认使用defaultItem。
            </summary>
        </member>
        <member name="M:FairyGUI.GList.SetVirtualAndLoop">
            <summary>
            Set the list to be virtual list, and has loop behavior.
            </summary>
        </member>
        <member name="P:FairyGUI.GList.numItems">
            <summary>
            Set the list item count. 
            If the list is not virtual, specified number of items will be created. 
            If the list is virtual, only items in view will be created.
            </summary>
        </member>
        <member name="T:FairyGUI.GLoader">
            <summary>
            GLoader class
            </summary>
        </member>
        <member name="F:FairyGUI.GLoader.showErrorSign">
            <summary>
            Display an error sign if the loader fails to load the content.
            UIConfig.loaderErrorSign muse be set.
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.url">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.align">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.verticalAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.fill">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.shrinkOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.autoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.playing">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.frame">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.timeScale">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.ignoreEngineTimeScale">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GLoader.Advance(System.Single)">
            <summary>
            
            </summary>
            <param name="time"></param>
        </member>
        <member name="P:FairyGUI.GLoader.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.fillMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.fillOrigin">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.fillClockwise">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.fillAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.image">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.movieClip">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.component">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GLoader.texture">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GLoader.LoadContent">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GMovieClip">
            <summary>
            GMovieClip class.
            </summary>
        </member>
        <member name="P:FairyGUI.GMovieClip.onPlayEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GMovieClip.playing">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GMovieClip.frame">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GMovieClip.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GMovieClip.flip">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GMovieClip.timeScale">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GMovieClip.ignoreEngineTimeScale">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GMovieClip.Rewind">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GMovieClip.SyncStatus(FairyGUI.GMovieClip)">
            <summary>
            
            </summary>
            <param name="anotherMc"></param>
        </member>
        <member name="M:FairyGUI.GMovieClip.Advance(System.Single)">
            <summary>
            
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:FairyGUI.GMovieClip.SetPlaySettings(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Play from the start to end, repeat times, set to endAt on complete.
            从start帧开始，播放到end帧（-1表示结尾），重复times次（0表示无限循环），循环结束后，停止在endAt帧（-1表示参数end）
            </summary>
            <param name="start">Start frame</param>
            <param name="end">End frame. -1 indicates the last frame.</param>
            <param name="times">Repeat times. 0 indicates infinite loop.</param>
            <param name="endAt">Stop frame. -1 indicates to equal to the end parameter.</param>
        </member>
        <member name="P:FairyGUI.GObject.id">
            <summary>
            GObject的id，仅作为内部使用。与name不同，id值是不会相同的。
            id is for internal use only.
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.data">
            <summary>
            User defined data. 
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.sourceWidth">
            <summary>
            The source width of the object.
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.sourceHeight">
            <summary>
            The source height of the object.
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.initWidth">
            <summary>
            The initial width of the object.
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.initHeight">
            <summary>
            The initial height of the object.
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.minWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.maxWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.minHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.maxHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.relations">
            <summary>
            Relations Object.
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.dragBounds">
            <summary>
            Restricted range of dragging.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.parent">
            <summary>
            Parent object.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.displayObject">
            <summary>
            Lowlevel display object.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.draggingObject">
            <summary>
            当前全局正在被拖动的对象
            </summary>
        </member>
        <member name="F:FairyGUI.GObject.packageItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onClick">
            <summary>
            Dispatched when the object or its child was clicked.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onRightClick">
            <summary>
            Dispatched when the object or its child was clicked by right mouse button. Web only.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onTouchBegin">
            <summary>
            Dispatched when the finger touched the object or its child just now.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onTouchMove">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onTouchEnd">
            <summary>
            Dispatched when the finger was lifted from the screen or from the mouse button. 
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onRollOver">
            <summary>
            The cursor or finger hovers over an object.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onRollOut">
            <summary>
            The cursor or finger leave an object.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onAddedToStage">
            <summary>
            Dispatched when the object was added to the stage.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onRemovedFromStage">
            <summary>
            Dispatched when the object was removed from the stage.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onKeyDown">
            <summary>
            Dispatched on key pressed when the object is in focus.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onClickLink">
            <summary>
            Dispatched when links in the object or its child was clicked.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onPositionChanged">
            <summary>
            Dispatched when the object was moved.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onSizeChanged">
            <summary>
            Dispatched when the object was resized.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onDragStart">
            <summary>
            Dispatched when drag start. 
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onDragMove">
            <summary>
            Dispatched when dragging.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onDragEnd">
            <summary>
            Dispatched when drag end.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onGearStop">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.x">
            <summary>
            The x coordinate of the object relative to the local coordinates of the parent.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.y">
            <summary>
            The y coordinate of the object relative to the local coordinates of the parent.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.z">
            <summary>
            The z coordinate of the object relative to the local coordinates of the parent.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.xy">
            <summary>
            The x and y coordinates of the object relative to the local coordinates of the parent.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.position">
            <summary>
            The x,y,z coordinates of the object relative to the local coordinates of the parent.
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.SetPosition(System.Single,System.Single)">
            <summary>
            change the x and y coordinates of the object relative to the local coordinates of the parent.
            </summary>
            <param name="xv">x value.</param>
            <param name="yv">y value.</param>
        </member>
        <member name="M:FairyGUI.GObject.SetPosition(System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="xv"></param>
            <param name="yv"></param>
            <param name="topLeft"></param>
        </member>
        <member name="M:FairyGUI.GObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            change the x,y,z coordinates of the object relative to the local coordinates of the parent.
            </summary>
            <param name="xv">x value.</param>
            <param name="yv">y value.</param>
            <param name="zv">z value.</param>
        </member>
        <member name="M:FairyGUI.GObject.Center">
            <summary>
            Set the object in middle of the parent or GRoot if the parent is not set.
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.Center(System.Boolean)">
            <summary>
            Set the object in middle of the parent or GRoot if the parent is not set.
            </summary>
            <param name="restraint">Add relations to maintain the center state.</param>
        </member>
        <member name="M:FairyGUI.GObject.MakeFullScreen">
            <summary>
            设置对象为全屏大小（逻辑屏幕）。
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.width">
            <summary>
            The width of the object in pixels.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.height">
            <summary>
            The height of the object in pixels.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.size">
            <summary>
            The size of the object in pixels.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.actualWidth">
            <summary>
            actualWidth = width * scalex
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.actualHeight">
            <summary>
            actualHeight = height * scaleY
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.SetSize(System.Single,System.Single)">
            <summary>
            Change size.
            </summary>
            <param name="wv">Width value.</param>
            <param name="hv">Height value.</param>
        </member>
        <member name="M:FairyGUI.GObject.SetSize(System.Single,System.Single,System.Boolean)">
            <summary>
            Change size.
            </summary>
            <param name="wv">Width value.</param>
            <param name="hv">Height value.</param>
            <param name="ignorePivot">If pivot is set, the object's positon will change when its size change. Set ignorePivot=true to keep the position.</param>
        </member>
        <member name="P:FairyGUI.GObject.xMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.yMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.scaleX">
            <summary>
            The horizontal scale factor. '1' means no scale, cannt be negative.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.scaleY">
            <summary>
            The vertical scale factor. '1' means no scale, cannt be negative.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.scale">
            <summary>
            The scale factor.
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.SetScale(System.Single,System.Single)">
            <summary>
            Change the scale factor.
            </summary>
            <param name="wv">The horizontal scale factor.</param>
            <param name="hv">The vertical scale factor</param>
        </member>
        <member name="P:FairyGUI.GObject.skew">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.pivotX">
            <summary>
            The x coordinate of the object's origin in its own coordinate space.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.pivotY">
            <summary>
            The y coordinate of the object's origin in its own coordinate space.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.pivot">
            <summary>
            The x and y coordinates of the object's origin in its own coordinate space.
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.SetPivot(System.Single,System.Single)">
            <summary>
            Change the x and y coordinates of the object's origin in its own coordinate space.
            </summary>
            <param name="xv">x value in ratio</param>
            <param name="yv">y value in ratio</param>
        </member>
        <member name="M:FairyGUI.GObject.SetPivot(System.Single,System.Single,System.Boolean)">
            <summary>
             Change the x and y coordinates of the object's origin in its own coordinate space.
            </summary>
            <param name="xv">x value in ratio</param>
            <param name="yv">y value in ratio</param>
            <param name="asAnchor">If use the pivot as the anchor position</param>
        </member>
        <member name="P:FairyGUI.GObject.touchable">
            <summary>
            If the object can touch or click. GImage/GTextField is not touchable even it is true.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.grayed">
            <summary>
            If true, apply a grayed effect on this object.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.enabled">
            <summary>
            Enabled is shortcut for grayed and !touchable combination.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.rotation">
            <summary>
            The rotation around the z axis of the object in degrees.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.rotationX">
            <summary>
            The rotation around the x axis of the object in degrees.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.rotationY">
            <summary>
            The rotation around the y axis of the object in degrees.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.alpha">
            <summary>
            The opacity of the object. 0 = transparent, 1 = opaque.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.visible">
            <summary>
            The visibility of the object. An invisible object will be untouchable.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.sortingOrder">
            <summary>
            By default(when sortingOrder==0), object added to component is arrange by the added roder. 
            The bigger is the sorting order, the object is more in front.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.focusable">
            <summary>
            If the object can be focused?
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.focused">
            <summary>
            If the object is focused. Focused object can receive key events.
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.RequestFocus">
            <summary>
            Request focus on this object.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.tooltips">
            <summary>
            Tooltips of this object. UIConfig.tooltipsWin must be set first.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.filter">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.blendMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.inContainer">
            <summary>
            If the object has lowlevel displayobject and the displayobject has a container parent?
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.onStage">
            <summary>
            If the object is on stage.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.resourceURL">
            <summary>
            Resource url of this object.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.gearXY">
            <summary>
            Gear to xy controller.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.gearSize">
            <summary>
            Gear to size controller.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.gearLook">
            <summary>
            Gear to look controller.
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.AddRelation(FairyGUI.GObject,FairyGUI.RelationType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="relationType"></param>
        </member>
        <member name="M:FairyGUI.GObject.AddRelation(FairyGUI.GObject,FairyGUI.RelationType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="relationType"></param>
            <param name="usePercent"></param>
        </member>
        <member name="M:FairyGUI.GObject.RemoveRelation(FairyGUI.GObject,FairyGUI.RelationType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="relationType"></param>
        </member>
        <member name="M:FairyGUI.GObject.RemoveFromParent">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.group">
            <summary>
             Group belonging to.
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.root">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.text">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.icon">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.draggable">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.StartDrag">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.StartDrag(System.Int32)">
            <summary>
            
            </summary>
            <param name="touchId"></param>
        </member>
        <member name="M:FairyGUI.GObject.StopDrag">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GObject.dragging">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GObject.LocalToGlobal(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Transforms a point from the local coordinate system to global (Stage) coordinates.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObject.GlobalToLocal(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Transforms a point from global (Stage) coordinates to the local coordinate system.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObject.LocalToGlobal(System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObject.GlobalToLocal(System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObject.LocalToRoot(Microsoft.Xna.Framework.Vector2,FairyGUI.GRoot)">
            <summary>
            Transforms a point from the local coordinate system to GRoot coordinates.
            </summary>
            <param name="pt"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObject.RootToLocal(Microsoft.Xna.Framework.Vector2,FairyGUI.GRoot)">
            <summary>
            Transforms a point from the GRoot coordinate  to local coordinates system.
            </summary>
            <param name="pt"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObject.TransformPoint(Microsoft.Xna.Framework.Vector2,FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="targetSpace"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObject.TransformRect(System.Drawing.RectangleF,FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <param name="targetSpace"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.GObjectPool">
            <summary>
            GObjectPool is use for GObject pooling.
            </summary>
        </member>
        <member name="T:FairyGUI.GObjectPool.InitCallbackDelegate">
            <summary>
            Callback function when a new object is creating.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="F:FairyGUI.GObjectPool.initCallback">
            <summary>
            Callback function when a new object is creating.
            </summary>
        </member>
        <member name="M:FairyGUI.GObjectPool.#ctor">
            <summary>
            需要设置一个manager，加入池里的对象都成为这个manager的孩子
            </summary>
        </member>
        <member name="M:FairyGUI.GObjectPool.Clear">
            <summary>
            Dispose all objects in the pool.
            </summary>
        </member>
        <member name="P:FairyGUI.GObjectPool.count">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GObjectPool.GetObject(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GObjectPool.ReturnObject(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:FairyGUI.GProgressBar">
            <summary>
            GProgressBar class.
            </summary>
        </member>
        <member name="P:FairyGUI.GProgressBar.titleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GProgressBar.max">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GProgressBar.value">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GProgressBar.TweenValue(System.Double,System.Single)">
            <summary>
            动态改变进度值。
            </summary>
            <param name="value"></param>
            <param name="duration"></param>
        </member>
        <member name="M:FairyGUI.GProgressBar.Update(System.Double)">
            <summary>
            
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="T:FairyGUI.GRichTextField">
            <summary>
            GRichTextField class.
            </summary>
        </member>
        <member name="P:FairyGUI.GRichTextField.richTextField">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GRichTextField.emojies">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GRoot">
            <summary>
            GRoot is a topmost component of UI display list.You dont need to create GRoot. It is created automatically.
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.ApplyContentScaleFactor">
            <summary>
            This is called after screen size changed.
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.ShowWindow(FairyGUI.Window)">
            <summary>
            Display a window.
            </summary>
            <param name="win"></param>
        </member>
        <member name="M:FairyGUI.GRoot.HideWindow(FairyGUI.Window)">
            <summary>
            Call window.Hide
            关闭一个窗口。将调用Window.Hide方法。
            </summary>
            <param name="win"></param>
        </member>
        <member name="M:FairyGUI.GRoot.HideWindowImmediately(FairyGUI.Window)">
             <summary>
             Remove a window from stage immediatelly. window.Hide/window.OnHide will never be called.
            立刻关闭一个窗口。不会调用Window.Hide方法，Window.OnHide也不会被调用。
             </summary>
             <param name="win"></param>
        </member>
        <member name="M:FairyGUI.GRoot.HideWindowImmediately(FairyGUI.Window,System.Boolean)">
            <summary>
            Remove a window from stage immediatelly. window.Hide/window.OnHide will never be called.
            立刻关闭一个窗口。不会调用Window.Hide方法，Window.OnHide也不会被调用。
            </summary>
            <param name="win"></param>
            <param name="dispose">True to dispose the window.</param>
        </member>
        <member name="M:FairyGUI.GRoot.BringToFront(FairyGUI.Window)">
            <summary>
            将一个窗口提到所有窗口的最前面
            </summary>
            <param name="win"></param>
        </member>
        <member name="M:FairyGUI.GRoot.ShowModalWait">
            <summary>
            Display a modal layer and a waiting sign in the front.
            显示一个半透明层和一个等待标志在最前面。半透明层的颜色可以通过UIConfig.modalLayerColor设定。
            等待标志的资源可以通过UIConfig.globalModalWaiting。等待标志组件会设置为屏幕大小，请内部做好关联。
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.CloseModalWait">
            <summary>
            Hide modal layer and waiting sign.
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.CloseAllExceptModals">
            <summary>
            Close all windows except modal windows.
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.CloseAllWindows">
            <summary>
            Close all windows.
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.GetTopWindow">
            <summary>
            Get window on top.
            </summary>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.GRoot.modalLayer">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GRoot.hasModalWindow">
            <summary>
            Return true if a modal window is on stage.
            </summary>
        </member>
        <member name="P:FairyGUI.GRoot.modalWaiting">
            <summary>
            Return true if modal waiting layer is on stage.
            </summary>
        </member>
        <member name="P:FairyGUI.GRoot.touchTarget">
            <summary>
            Get current touch target. (including hover)
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.DisplayObjectToGObject(FairyGUI.DisplayObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GRoot.ShowPopup(FairyGUI.GObject)">
            <summary>
            Show a  popup object.
            显示一个popup。
            popup的特点是点击popup对象外的区域，popup对象将自动消失。
            </summary>
            <param name="popup"></param>
        </member>
        <member name="M:FairyGUI.GRoot.ShowPopup(FairyGUI.GObject,FairyGUI.GObject)">
            <summary>
            Show a popup object along with the specific target object.
            显示一个popup。将popup显示在指定对象的上边或者下边。
            popup的特点是点击popup对象外的区域，popup对象将自动消失。
            </summary>
            <param name="popup"></param>
            <param name="target"></param>
        </member>
        <member name="M:FairyGUI.GRoot.ShowPopup(FairyGUI.GObject,FairyGUI.GObject,System.Object)">
            <summary>
            Show a popup object along with the specific target object.
            显示一个popup。将popup显示在指定对象的上方或者下方。
            popup的特点是点击popup对象外的区域，popup对象将自动消失。
            </summary>
            <param name="popup"></param>
            <param name="target"></param>
            <param name="downward">True to display downwards, false to display upwards, null to display automatically.</param>
        </member>
        <member name="M:FairyGUI.GRoot.GetPoupPosition(FairyGUI.GObject,FairyGUI.GObject,System.Object)">
            <summary>
            
            </summary>
            <param name="popup"></param>
            <param name="target"></param>
            <param name="downward"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GRoot.TogglePopup(FairyGUI.GObject)">
            <summary>
            If a popup is showing, then close it; otherwise, open it.
            </summary>
            <param name="popup"></param>
        </member>
        <member name="M:FairyGUI.GRoot.TogglePopup(FairyGUI.GObject,FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="popup"></param>
            <param name="target"></param>
        </member>
        <member name="M:FairyGUI.GRoot.TogglePopup(FairyGUI.GObject,FairyGUI.GObject,System.Object)">
            <summary>
            
            </summary>
            <param name="popup"></param>
            <param name="target"></param>
            <param name="downward"></param>
        </member>
        <member name="M:FairyGUI.GRoot.HidePopup">
            <summary>
            Close all popups.
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.HidePopup(FairyGUI.GObject)">
            <summary>
            Close a popup.
            </summary>
            <param name="popup"></param>
        </member>
        <member name="P:FairyGUI.GRoot.hasAnyPopup">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GRoot.ShowTooltips(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:FairyGUI.GRoot.ShowTooltipsWin(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="tooltipWin"></param>
        </member>
        <member name="M:FairyGUI.GRoot.HideTooltips">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GRoot.focus">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GScrollBar">
            <summary>
            GScrollBar class.
            </summary>
        </member>
        <member name="M:FairyGUI.GScrollBar.SetScrollPane(FairyGUI.ScrollPane,System.Boolean)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="vertical"></param>
        </member>
        <member name="P:FairyGUI.GScrollBar.displayPerc">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GScrollBar.scrollPerc">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GScrollBar.minSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GSlider">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GSlider.onChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GSlider.onGripTouchEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GSlider.titleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GSlider.max">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GSlider.value">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GTextField">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.text">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.templateVars">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTextField.SetVar(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.GTextField.FlushVars">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.textFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.align">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.verticalAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.singleLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.stroke">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.strokeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.shadowOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.UBBEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.autoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.textWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextField.textHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.GTextInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.inputTextField">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.onFocusIn">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.onFocusOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.onChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.onSubmit">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.editable">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.hideInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.maxLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.displayAsPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.caretPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.promptText">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.GTextInput.emojies">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.GTextInput.SetSelection(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="length"></param>
        </member>
        <member name="M:FairyGUI.GTextInput.ReplaceSelection(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:FairyGUI.IColorGear">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IColorGear.color">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.ITextColorGear">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ITextColorGear.strokeColor">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.UILoadCallback">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.IUISource">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IUISource.fileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.IUISource.loaded">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.IUISource.Load(FairyGUI.UILoadCallback)">
            <summary>
            
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:FairyGUI.Margin">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Margin.left">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Margin.right">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Margin.top">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Margin.bottom">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.PackageItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.PageOption">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.PopupMenu">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.PopupMenu.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="resourceURL"></param>
        </member>
        <member name="M:FairyGUI.PopupMenu.AddItem(System.String,FairyGUI.EventCallback0)">
            <summary>
            
            </summary>
            <param name="caption"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.PopupMenu.AddItem(System.String,FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="caption"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.PopupMenu.AddItemAt(System.String,System.Int32,FairyGUI.EventCallback0)">
            <summary>
            
            </summary>
            <param name="caption"></param>
            <param name="index"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.PopupMenu.AddItemAt(System.String,System.Int32,FairyGUI.EventCallback1)">
            <summary>
            
            </summary>
            <param name="caption"></param>
            <param name="index"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.PopupMenu.AddSeperator">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.PopupMenu.GetItemName(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.PopupMenu.SetItemText(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="caption"></param>
        </member>
        <member name="M:FairyGUI.PopupMenu.SetItemVisible(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="visible"></param>
        </member>
        <member name="M:FairyGUI.PopupMenu.SetItemGrayed(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="grayed"></param>
        </member>
        <member name="M:FairyGUI.PopupMenu.SetItemCheckable(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="checkable"></param>
        </member>
        <member name="M:FairyGUI.PopupMenu.SetItemChecked(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="check"></param>
        </member>
        <member name="M:FairyGUI.PopupMenu.isItemChecked(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.PopupMenu.RemoveItem(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.PopupMenu.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.PopupMenu.itemCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.PopupMenu.contentPane">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.PopupMenu.list">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.PopupMenu.Show">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.PopupMenu.Show(FairyGUI.GObject,System.Object)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="downward"></param>
        </member>
        <member name="T:FairyGUI.Relations">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Relations.Add(FairyGUI.GObject,FairyGUI.RelationType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="relationType"></param>
        </member>
        <member name="M:FairyGUI.Relations.Add(FairyGUI.GObject,FairyGUI.RelationType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="relationType"></param>
            <param name="usePercent"></param>
        </member>
        <member name="M:FairyGUI.Relations.Remove(FairyGUI.GObject,FairyGUI.RelationType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="relationType"></param>
        </member>
        <member name="M:FairyGUI.Relations.Contains(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Relations.ClearFor(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:FairyGUI.Relations.ClearAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Relations.CopyFrom(FairyGUI.Relations)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:FairyGUI.Relations.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Relations.OnOwnerSizeChanged(System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dWidth"></param>
            <param name="dHeight"></param>
            <param name="applyPivot"></param>
        </member>
        <member name="P:FairyGUI.Relations.isEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.RichTextField">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RichTextField.htmlPageContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RichTextField.htmlParseOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RichTextField.emojies">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RichTextField.textField">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RichTextField.text">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RichTextField.htmlText">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.RichTextField.textFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.RichTextField.GetHtmlElement(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.RichTextField.GetHtmlElementAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.RichTextField.htmlElementCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.RichTextField.ShowHtmlObject(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="show"></param>
        </member>
        <member name="T:FairyGUI.ScrollPane">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.draggingPane">
            <summary>
            当前被拖拽的滚动面板。同一时间只能有一个在进行此操作。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.onScroll">
            <summary>
            Dispatched when scrolling.
            在滚动时派发该事件。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.onScrollEnd">
            <summary>
            在滚动结束时派发该事件。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.onPullDownRelease">
            <summary>
            向下拉过上边缘后释放则派发该事件。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.onPullUpRelease">
            <summary>
            向上拉过下边缘后释放则派发该事件。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.hzScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.vtScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.header">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.footer">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.bouncebackEffect">
            <summary>
            滚动到达边缘时是否允许回弹效果。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.touchEffect">
            <summary>
            是否允许拖拽内容区域进行滚动。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.inertiaDisabled">
            <summary>
            是否允许惯性滚动。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.softnessOnTopOrLeftSide">
            <summary>
            是否允许在左/上边缘显示虚化效果。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.scrollStep">
            <summary>
            当调用ScrollPane.scrollUp/Down/Left/Right时，或者点击滚动条的上下箭头时，滑动的距离。
            鼠标滚轮触发一次滚动的距离设定为defaultScrollStep*2
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.snapToItem">
            <summary>
            滚动位置是否保持贴近在某个元件的边缘。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.pageMode">
            <summary>
            是否页面滚动模式。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.pageController">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.mouseWheelEnabled">
            <summary>
            是否允许使用鼠标滚轮进行滚动。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.decelerationRate">
            <summary>
            当处于惯性滚动时减速的速率。默认值是UIConfig.defaultScrollDecelerationRate。
            越接近1，减速越慢，意味着滑动的时间和距离更长。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.percX">
            <summary>
            当前X轴滚动位置百分比，0~1（包含）。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.SetPercX(System.Single,System.Boolean)">
            <summary>
            设置当前X轴滚动位置百分比，0~1（包含）。
            </summary>
            <param name="value"></param>
            <param name="ani">是否使用缓动到达目标。</param>
        </member>
        <member name="P:FairyGUI.ScrollPane.percY">
            <summary>
            当前Y轴滚动位置百分比，0~1（包含）。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.SetPercY(System.Single,System.Boolean)">
            <summary>
            设置当前Y轴滚动位置百分比，0~1（包含）。
            </summary>
            <param name="value"></param>
            <param name="ani">是否使用缓动到达目标。</param>
        </member>
        <member name="P:FairyGUI.ScrollPane.posX">
            <summary>
            当前X轴滚动位置，值范围是viewWidth与contentWidth之差。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.SetPosX(System.Single,System.Boolean)">
            <summary>
            设置当前X轴滚动位置。
            </summary>
            <param name="value"></param>
            <param name="ani">是否使用缓动到达目标。</param>
        </member>
        <member name="P:FairyGUI.ScrollPane.posY">
            <summary>
            当前Y轴滚动位置，值范围是viewHeight与contentHeight之差。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.SetPosY(System.Single,System.Boolean)">
            <summary>
            设置当前Y轴滚动位置。
            </summary>
            <param name="value"></param>
            <param name="ani">是否使用缓动到达目标。</param>
        </member>
        <member name="P:FairyGUI.ScrollPane.isBottomMost">
            <summary>
            返回当前滚动位置是否在最下边。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.isRightMost">
            <summary>
            返回当前滚动位置是否在最右边。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.currentPageX">
            <summary>
            如果处于分页模式，返回当前在X轴的页码。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.SetCurrentPageX(System.Int32,System.Boolean)">
            <summary>
            如果处于分页模式，可设置X轴的页码。
            </summary>
            <param name="value"></param>
            <param name="ani">是否使用缓动到达目标。</param>
        </member>
        <member name="P:FairyGUI.ScrollPane.currentPageY">
            <summary>
            如果处于分页模式，返回当前在Y轴的页码。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.SetCurrentPageY(System.Int32,System.Boolean)">
            <summary>
            如果处于分页模式，可设置Y轴的页码。
            </summary>
            <param name="value"></param>
            <param name="ani">是否使用缓动到达目标。</param>
        </member>
        <member name="P:FairyGUI.ScrollPane.scrollingPosX">
            <summary>
            这个值与PosX不同在于，他反映的是实时位置，而PosX在有缓动过程的情况下只是终值。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.scrollingPosY">
            <summary>
            这个值与PosY不同在于，他反映的是实时位置，而PosY在有缓动过程的情况下只是终值。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.contentWidth">
            <summary>
            显示内容宽度。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.contentHeight">
            <summary>
            显示内容高度。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.viewWidth">
            <summary>
            显示区域宽度。
            </summary>
        </member>
        <member name="P:FairyGUI.ScrollPane.viewHeight">
            <summary>
            显示区域高度。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollTop">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollTop(System.Boolean)">
            <summary>
            
            </summary>
            <param name="ani"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollBottom">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollBottom(System.Boolean)">
            <summary>
            
            </summary>
            <param name="ani"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollUp">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollUp(System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="ratio"></param>
            <param name="ani"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollDown(System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="ratio"></param>
            <param name="ani"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollLeft">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollLeft(System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="speed"></param>
            <param name="ani"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollRight">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollRight(System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="ratio"></param>
            <param name="ani"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollToView(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="obj">obj can be any object on stage, not limited to the direct child of this container.</param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollToView(FairyGUI.GObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj">obj can be any object on stage, not limited to the direct child of this container.</param>
            <param name="ani">If moving to target position with animation</param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollToView(FairyGUI.GObject,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj">obj can be any object on stage, not limited to the direct child of this container.</param>
            <param name="ani">If moving to target position with animation</param>
            <param name="setFirst">If true, scroll to make the target on the top/left; If false, scroll to make the target any position in view.</param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ScrollToView(System.Drawing.RectangleF,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="rect">Rect in local coordinates</param>
            <param name="ani">If moving to target position with animation</param>
            <param name="setFirst">If true, scroll to make the target on the top/left; If false, scroll to make the target any position in view.</param>
        </member>
        <member name="M:FairyGUI.ScrollPane.IsChildInView(FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="obj">obj must be the direct child of this container</param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.ScrollPane.CancelDragging">
            <summary>
            当滚动面板处于拖拽滚动状态或即将进入拖拽状态时，可以调用此方法停止或禁止本次拖拽。
            </summary>
        </member>
        <member name="M:FairyGUI.ScrollPane.LockHeader(System.Int32)">
            <summary>
            设置Header固定显示。如果size为0，则取消固定显示。
            </summary>
            <param name="size">Header显示的大小</param>
        </member>
        <member name="M:FairyGUI.ScrollPane.LockFooter(System.Int32)">
            <summary>
            设置Footer固定显示。如果size为0，则取消固定显示。
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.ChangeContentSizeOnScrolling(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            内部使用。由虚拟列表调用。在滚动时修改显示内容的大小，需要进行修正，避免滚动跳跃。
            </summary>
            <param name="deltaWidth"></param>
            <param name="deltaHeight"></param>
            <param name="deltaPosX"></param>
            <param name="deltaPosY"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.LoopCheckingCurrent">
            <summary>
            对当前的滚动位置进行循环滚动边界检查。当到达边界时，回退一半内容区域（循环滚动内容大小通常是真实内容大小的偶数倍）。
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.ScrollPane.LoopCheckingTarget(Microsoft.Xna.Framework.Vector2@)">
            <summary>
            对目标位置进行循环滚动边界检查。当到达边界时，回退一半内容区域（循环滚动内容大小通常是真实内容大小的偶数倍）。
            </summary>
            <param name="endPos"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.AlignPosition(Microsoft.Xna.Framework.Vector2@,System.Boolean)">
            <summary>
            从oldPos滚动至pos，调整pos位置对齐页面、对齐item等（如果需要）。
            </summary>
            <param name="pos"></param>
            <param name="inertialScrolling"></param>
        </member>
        <member name="M:FairyGUI.ScrollPane.AlignByPage(System.Single,System.Int32,System.Boolean)">
            <summary>
            从oldPos滚动至pos，调整目标位置到对齐页面。
            </summary>
            <param name="pos"></param>
            <param name="axis"></param>
            <param name="inertialScrolling"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.ScrollPane.UpdateTargetAndDuration(Microsoft.Xna.Framework.Vector2)">
            <summary>
            根据当前速度，计算滚动的目标位置，以及到达时间。
            </summary>
            <param name="orignPos"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.ScrollPane.FixDuration(System.Int32,System.Single)">
            <summary>
            根据修改后的tweenChange重新计算减速时间。
            </summary>
        </member>
        <member name="T:FairyGUI.PlayCompleteCallback">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.TransitionHook">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Transition">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Transition.name">
            <summary>
            动效的名称。在编辑器里设定。
            </summary>
        </member>
        <member name="M:FairyGUI.Transition.Play">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Transition.Play(FairyGUI.PlayCompleteCallback)">
            <summary>
            
            </summary>
            <param name="onComplete"></param>
        </member>
        <member name="M:FairyGUI.Transition.Play(System.Int32,System.Single,FairyGUI.PlayCompleteCallback)">
            <summary>
            
            </summary>
            <param name="times"></param>
            <param name="delay"></param>
            <param name="onComplete"></param>
        </member>
        <member name="M:FairyGUI.Transition.Play(System.Int32,System.Single,System.Single,System.Single,FairyGUI.PlayCompleteCallback)">
            <summary>
            
            </summary>
            <param name="times"></param>
            <param name="delay"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="onComplete"></param>
        </member>
        <member name="M:FairyGUI.Transition.PlayReverse">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Transition.PlayReverse(FairyGUI.PlayCompleteCallback)">
            <summary>
            
            </summary>
            <param name="onComplete"></param>
        </member>
        <member name="M:FairyGUI.Transition.PlayReverse(System.Int32,System.Single,FairyGUI.PlayCompleteCallback)">
            <summary>
            
            </summary>
            <param name="times"></param>
            <param name="delay"></param>
            <param name="onComplete"></param>
        </member>
        <member name="M:FairyGUI.Transition.ChangePlayTimes(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.Transition.SetAutoPlay(System.Boolean,System.Int32,System.Single)">
            <summary>
            设置动效是否自动播放。
            </summary>
            <param name="autoPlay"></param>
            <param name="times"></param>
            <param name="delay"></param>
        </member>
        <member name="M:FairyGUI.Transition.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Transition.Stop(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="setToComplete"></param>
            <param name="processCallback"></param>
        </member>
        <member name="M:FairyGUI.Transition.SetPaused(System.Boolean)">
            <summary>
            
            </summary>
            <param name="paused"></param>
        </member>
        <member name="P:FairyGUI.Transition.playing">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Transition.SetValue(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="label"></param>
            <param name="aParams"></param>
        </member>
        <member name="M:FairyGUI.Transition.SetHook(System.String,FairyGUI.TransitionHook)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <param name="callback"></param>
        </member>
        <member name="M:FairyGUI.Transition.ClearHooks">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Transition.SetTarget(System.String,FairyGUI.GObject)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <param name="newTarget"></param>
        </member>
        <member name="M:FairyGUI.Transition.SetDuration(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.Transition.GetLabelTime(System.String)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.Transition.timeScale">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Transition.ignoreEngineTimeScale">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.TreeNode">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.TreeNode.data">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TreeNode.parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TreeNode.tree">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TreeNode.cell">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TreeNode.level">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.TreeNode.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="hasChild"></param>
        </member>
        <member name="P:FairyGUI.TreeNode.expanded">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TreeNode.isFolder">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TreeNode.text">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.TreeNode.AddChild(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.AddChildAt(FairyGUI.TreeNode,System.Int32)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.RemoveChild(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.RemoveChildAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.RemoveChildren(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="beginIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:FairyGUI.TreeNode.GetChildAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.GetChildIndex(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.GetPrevSibling">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.GetNextSibling">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeNode.SetChildIndex(FairyGUI.TreeNode,System.Int32)">
            <summary>
            
            </summary>
            <param name="child"></param>
            <param name="index"></param>
        </member>
        <member name="M:FairyGUI.TreeNode.SwapChildren(FairyGUI.TreeNode,FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="child1"></param>
            <param name="child2"></param>
        </member>
        <member name="M:FairyGUI.TreeNode.SwapChildrenAt(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="index1"></param>
            <param name="index2"></param>
        </member>
        <member name="P:FairyGUI.TreeNode.numChildren">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.TreeView">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.TreeView.list">
            <summary>
            TreeView使用的List对象
            </summary>
        </member>
        <member name="P:FairyGUI.TreeView.root">
            <summary>
            TreeView的顶层节点，这是个虚拟节点，也就是他不会显示出来。
            </summary>
        </member>
        <member name="F:FairyGUI.TreeView.indent">
            <summary>
            TreeView每级的缩进，单位像素。
            </summary>
        </member>
        <member name="F:FairyGUI.TreeView.treeNodeCreateCell">
            <summary>
            当TreeNode需要创建对象的显示对象时回调
            </summary>
        </member>
        <member name="F:FairyGUI.TreeView.treeNodeRender">
            <summary>
            当TreeNode需要更新时回调
            </summary>
        </member>
        <member name="F:FairyGUI.TreeView.treeNodeWillExpand">
            <summary>
            当TreeNode即将展开或者收缩时回调。可以在回调中动态增加子节点。
            </summary>
        </member>
        <member name="P:FairyGUI.TreeView.onClickNode">
            <summary>
            点击任意TreeNode时触发
            </summary>
        </member>
        <member name="P:FairyGUI.TreeView.onRightClickNode">
            <summary>
            右键点击任意TreeNode时触发
            </summary>
        </member>
        <member name="M:FairyGUI.TreeView.#ctor(FairyGUI.GList)">
            <summary>
            
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:FairyGUI.TreeView.GetSelectedNode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeView.GetSelection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeView.AddSelection(FairyGUI.TreeNode,System.Boolean)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="scrollItToView"></param>
        </member>
        <member name="M:FairyGUI.TreeView.RemoveSelection(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.ClearSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.TreeView.GetNodeIndex(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeView.UpdateNode(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.UpdateNodes(System.Collections.Generic.List{FairyGUI.TreeNode})">
            <summary>
            
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:FairyGUI.TreeView.ExpandAll(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="folderNode"></param>
        </member>
        <member name="M:FairyGUI.TreeView.CollapseAll(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="folderNode"></param>
        </member>
        <member name="M:FairyGUI.TreeView.CreateCell(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.AfterInserted(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.GetInsertIndexForNode(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeView.AfterRemoved(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.AfterExpanded(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.AfterCollapsed(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.AfterMoved(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FairyGUI.TreeView.CheckChildren(FairyGUI.TreeNode,System.Int32)">
            <summary>
            
            </summary>
            <param name="folderNode"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.TreeView.HideFolderNode(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="folderNode"></param>
        </member>
        <member name="M:FairyGUI.TreeView.RemoveNode(FairyGUI.TreeNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:FairyGUI.UIConfig">
            <summary>
            Global configs. These options should be set before any UI construction.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.defaultFont">
            <summary>
            Dynamic Font Support. 
            set defaultFont to system font name(or names joint with comma). e.g. defaultFont="Microsoft YaHei, SimHei"
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.windowModalWaiting">
            <summary>
            Resource using in Window.ShowModalWait for locking the window.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.globalModalWaiting">
            <summary>
            Resource using in GRoot.ShowModalWait for locking the screen.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.modalLayerColor">
            <summary>
            When a modal window is in front, the background becomes dark.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.buttonSound">
            <summary>
            Default button click sound.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.buttonSoundVolumeScale">
            <summary>
            Default button click sound volume.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.horizontalScrollBar">
            <summary>
            Resource url of horizontal scrollbar
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.verticalScrollBar">
            <summary>
            Resource url of vertical scrollbar
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.defaultScrollStep">
            <summary>
            Scrolling step in pixels
            当调用ScrollPane.scrollUp/Down/Left/Right时，或者点击滚动条的上下箭头时，滑动的距离。
            鼠标滚轮触发一次滚动的距离设定为defaultScrollStep*2
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.defaultScrollDecelerationRate">
            <summary>
            Deceleration ratio of scrollpane when its in touch dragging.
            当手指拖动并释放滚动区域后，内容会滑动一定距离后停下，这个速率就是减速的速率。
            越接近1，减速越慢，意味着滑动的时间和距离更长。
            这个是全局设置，也可以通过ScrollPane.decelerationRate进行个性设置。
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.defaultScrollBarDisplay">
            <summary>
            Scrollbar display mode. Recommended 'Auto' for mobile and 'Visible' for web.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.defaultScrollTouchEffect">
            <summary>
            Allow dragging anywhere in container to scroll.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.defaultScrollBounceEffect">
            <summary>
            The "rebound" effect in the scolling container.
            </summary> 
        </member>
        <member name="F:FairyGUI.UIConfig.popupMenu">
            <summary>
            Resources url of PopupMenu.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.popupMenu_seperator">
            <summary>
            Resource url of menu seperator.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.loaderErrorSign">
            <summary>
            In case of failure of loading content for GLoader, use this sign to indicate an error.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.tooltipsWin">
            <summary>
            Resource url of tooltips.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.defaultComboBoxVisibleItemCount">
            <summary>
            The number of visible items in ComboBox.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.touchScrollSensitivity">
            <summary>
            Pixel offsets of finger to trigger scrolling
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.touchDragSensitivity">
            <summary>
            Pixel offsets of finger to trigger dragging
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.clickDragSensitivity">
            <summary>
            Pixel offsets of mouse pointer to trigger dragging.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.allowSoftnessOnTopOrLeftSide">
            <summary>
            Allow softness on top or left side for scrollpane.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.bringWindowToFrontOnClick">
            <summary>
            When click the window, brings to front automatically.
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.inputCaretSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.inputHighlightColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.frameTimeForAsyncUIConstruction">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.UIConfig.depthSupportForPaintingMode">
            <summary>
            if RenderTexture using in paiting mode has depth support.
            </summary>
        </member>
        <member name="T:FairyGUI.UIContentScaler.ScreenMatchMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.UIContentScaler.scaleFactor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.UIContentScaler.screenMatchMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.UIContentScaler.designResolutionX">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.UIContentScaler.designResolutionY">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.UIContentScaler.SetContentScaleFactor(System.Int32,System.Int32)">
            <summary>
            Set content scale factor.
            </summary>
            <param name="designResolutionX">Design resolution of x axis.</param>
            <param name="designResolutionY">Design resolution of y axis.</param>
        </member>
        <member name="M:FairyGUI.UIContentScaler.SetContentScaleFactor(System.Int32,System.Int32,FairyGUI.UIContentScaler.ScreenMatchMode)">
            <summary>
            Set content scale factor.
            </summary>
            <param name="designResolutionX">Design resolution of x axis.</param>
            <param name="designResolutionY">Design resolution of y axis.</param>
            <param name="screenMatchMode">Match mode.</param>
        </member>
        <member name="M:FairyGUI.UIContentScaler.ApplyChange">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.UIObjectFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.UIObjectFactory.SetPackageItemExtension(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="type"></param>
        </member>
        <member name="M:FairyGUI.UIObjectFactory.SetPackageItemExtension(System.String,FairyGUI.UIObjectFactory.GComponentCreator)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="creator"></param>
        </member>
        <member name="M:FairyGUI.UIObjectFactory.SetLoaderExtension(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:FairyGUI.UIObjectFactory.SetLoaderExtension(FairyGUI.UIObjectFactory.GLoaderCreator)">
            <summary>
            
            </summary>
            <param name="creator"></param>
        </member>
        <member name="M:FairyGUI.UIObjectFactory.NewObject(FairyGUI.PackageItem)">
            <summary>
            
            </summary>
            <param name="pi"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.UIObjectFactory.NewObject(FairyGUI.ObjectType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.UIPackage.id">
            <summary>
            Package id. It is generated by the Editor, or set by customId.
            </summary>
        </member>
        <member name="P:FairyGUI.UIPackage.name">
            <summary>
            Package name.
            </summary>
        </member>
        <member name="P:FairyGUI.UIPackage.assetPath">
            <summary>
            The path relative to the content folder.
            </summary>
        </member>
        <member name="M:FairyGUI.UIPackage.GetById(System.String)">
            <summary>
            Return a UIPackage with a certain id.
            </summary>
            <param name="id">ID of the package.</param>
            <returns>UIPackage</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.GetByName(System.String)">
            <summary>
            Return a UIPackage with a certain name.
            </summary>
            <param name="name">Name of the package.</param>
            <returns>UIPackage</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.AddPackage(System.String)">
            <summary>
            Add a UI package from a path relative to Unity Resources path.
            </summary>
            <param name="assetPath">Path relative to resources path.</param>
            <returns>UIPackage</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.RemovePackage(System.String)">
            <summary>
            Remove a package. All resources in this package will be disposed.
            </summary>
            <param name="packageIdOrName"></param>
            <param name="allowDestroyingAssets"></param>
        </member>
        <member name="M:FairyGUI.UIPackage.RemoveAllPackages">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.UIPackage.GetPackages">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.UIPackage.CreateObject(System.String,System.String)">
            <summary>
            Create a UI object.
            </summary>
            <param name="pkgName">Package name.</param>
            <param name="resName">Resource name.</param>
            <returns>A UI object.</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.CreateObject(System.String,System.String,System.Type)">
            <summary>
             Create a UI object.
            </summary>
            <param name="pkgName">Package name.</param>
            <param name="resName">Resource name.</param>
            <param name="userClass">Custom implementation of this object.</param>
            <returns>A UI object.</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.CreateObjectFromURL(System.String)">
            <summary>
            Create a UI object.
            </summary>
            <param name="url">Resource url.</param>
            <returns>A UI object.</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.CreateObjectFromURL(System.String,System.Type)">
            <summary>
            Create a UI object.
            </summary>
            <param name="url">Resource url.</param>
            <param name="userClass">Custom implementation of this object.</param>
            <returns>A UI object.</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.GetItemAsset(System.String,System.String)">
            <summary>
            Get a asset with a certain name.
            </summary>
            <param name="pkgName">Package name.</param>
            <param name="resName">Resource name.</param>
            <returns>If resource is atlas, returns NTexture; If resource is sound, returns AudioClip.</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.GetItemAssetByURL(System.String)">
            <summary>
            Get a asset with a certain name.
            </summary>
            <param name="url">Resource url.</param>
            <returns>If resource is atlas, returns NTexture; If resource is sound, returns AudioClip.</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.GetItemURL(System.String,System.String)">
            <summary>
            Get url of an item in package.
            </summary>
            <param name="pkgName">Package name.</param>
            <param name="resName">Resource name.</param>
            <returns>Url.</returns>
        </member>
        <member name="M:FairyGUI.UIPackage.NormalizeURL(System.String)">
            <summary>
            将'ui://包名/组件名'转换为以内部id表达的url格式。如果传入的url本身就是内部id格式，则直接返回。
            同时这个方法还带格式检测，如果传入不正确的url，会返回null。
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.UIPackage.SetStringsSource(FairyGUI.Utils.XML)">
            <summary>
            Set strings source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:FairyGUI.UIPackage.customId">
            <summary>
            Set a custom id for package, then you can use it in GetById.
            </summary>
        </member>
        <member name="P:FairyGUI.UIPackage.dependencies">
            <summary>
            获得本包依赖的包的id列表
            </summary>
        </member>
        <member name="M:FairyGUI.UIPackage.LoadAllAssets">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.UIPackage.CreateObject(System.String)">
            <summary>
            
            </summary>
            <param name="resName"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.UIPackage.CreateObject(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="resName"></param>
            <param name="userClass"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.UIPackage.GetItemAsset(System.String)">
            <summary>
            
            </summary>
            <param name="resName"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.Window">
            <summary>
            Window class.
            窗口使用前首先要设置窗口中需要显示的内容，这通常是在编辑器里制作好的，可以直接使用Window.contentPane进行设置。
            建议把设置contentPane等初始化操作放置到Window.onInit方法中。
            另外，FairyGUI还提供了一套机制用于窗口动态创建。动态创建是指初始时仅指定窗口需要使用的资源，等窗口需要显示时才实际开始构建窗口的内容。
            首先需要在窗口的构造函数中调用Window.addUISource。这个方法需要一个IUISource类型的参数，而IUISource是一个接口，
            用户需要自行实现载入相关UI包的逻辑。当窗口第一次显示之前，IUISource的加载方法将会被调用，并等待载入完成后才返回执行Window.OnInit，然后窗口才会显示。
            
            如果你需要窗口显示时播放动画效果，那么覆盖doShowAnimation编写你的动画代码，并且在动画结束后调用onShown。覆盖onShown编写其他需要在窗口显示时处理的业务逻辑。
            如果你需要窗口隐藏时播放动画效果，那么覆盖doHideAnimation编写你的动画代码，并且在动画结束时调用Window.hideImmediately（注意不是直接调用onHide！）。覆盖onHide编写其他需要在窗口隐藏时处理的业务逻辑。
            </summary>
        </member>
        <member name="P:FairyGUI.Window.bringToFontOnClick">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.AddUISource(FairyGUI.IUISource)">
            <summary>
            Set a UISource to this window. It must call before the window is shown. When the window is first time to show,
            UISource.Load is called. Only after all UISource is loaded, the window will continue to init.
            为窗口添加一个源。这个方法建议在构造函数调用。当窗口第一次显示前，UISource的Load方法将被调用，然后只有所有的UISource
            都ready后，窗口才会继续初始化和显示。
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:FairyGUI.Window.contentPane">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Window.frame">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Window.closeButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Window.dragArea">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Window.contentArea">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Window.modalWaitingPane">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.Show">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.ShowOn(FairyGUI.GRoot)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:FairyGUI.Window.Hide">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.HideImmediately">
            <summary>
            Hide window immediately, no OnHide will be called.
            </summary>
        </member>
        <member name="M:FairyGUI.Window.CenterOn(FairyGUI.GRoot,System.Boolean)">
            <summary>
            Make the window be center of the screen.
            </summary>
            <param name="r"></param>
            <param name="restraint">Add relations to ensure keeping center on screen size changed.</param>
        </member>
        <member name="M:FairyGUI.Window.ToggleStatus">
            <summary>
            Switch show and hide status.
            </summary>
        </member>
        <member name="P:FairyGUI.Window.isShowing">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Window.isTop">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Window.modal">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.BringToFront">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.ShowModalWait">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.ShowModalWait(System.Int32)">
            <summary>
            Display a modal waiting sign in the front.
            显示一个等待标志在最前面。等待标志的资源可以通过UIConfig.windowModalWaiting。等待标志组件会设置为屏幕大小，请内部做好关联。
            还可以设定一个requestingCmd作为等待的命令字，在CloseModalWait里传入相同的命令字ModalWait将结束，否则CloseModalWait无效。
            </summary>
            <param name="requestingCmd"></param>
        </member>
        <member name="M:FairyGUI.Window.CloseModalWait">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Window.CloseModalWait(System.Int32)">
            <summary>
            Close modal waiting. If rquestingCmd is equal to the value you transfer in ShowModalWait, mowal wait will be closed.
            Otherwise, this function has no effect.
            关闭模式等待。如果requestingCmd和ShowModalWait传入的不相同，则这个函数没有任何动作，立即返回。
            </summary>
            <param name="requestingCmd"></param>
            <returns></returns>
        </member>
        <member name="P:FairyGUI.Window.modalWaiting">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.Init">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.OnInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.OnShown">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.OnHide">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.DoShowAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Window.DoHideAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.ByteBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.ByteBuffer.littleEndian">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.ByteBuffer.stringTable">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.ByteBuffer.version">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="P:FairyGUI.Utils.ByteBuffer.position">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Utils.ByteBuffer.length">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Utils.ByteBuffer.bytesAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:FairyGUI.Utils.ByteBuffer.buffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.Skip(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadByte">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="output"></param>
            <param name="destIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadBytes(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadBuffer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadChar">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadBool">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadShort">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadUshort">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadInt">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadUint">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadFloat">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadLong">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadDouble">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadString(System.Int32)">
            <summary>
            
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadS">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.WriteS(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.ReadColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FairyGUI.Utils.ByteBuffer.Seek(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="indexTablePos"></param>
            <param name="blockIndex"></param>
            <returns></returns>
        </member>
        <member name="T:FairyGUI.Utils.HtmlButton">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlElementType">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlImage">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlInput">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlLink">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlPageContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlParseOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.linkUnderline">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.linkColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.linkBgColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.linkHoverBgColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.ignoreWhiteSpace">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.DefaultLinkUnderline">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.DefaultLinkColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.DefaultLinkBgColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.HtmlParseOptions.DefaultLinkHoverBgColor">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlParser">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.HtmlSelect">
            <summary>
            
            </summary>
        </member>
        <!-- 对于成员“T:FairyGUI.Utils.IHtmlObject”忽略有格式错误的 XML 注释 -->
        <member name="T:FairyGUI.Utils.IHtmlPageContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.ToolSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:FairyGUI.Utils.ToolSet.EpsilonData.IsDeNormalizedFloatEnabled">
            <summary>
            Determines whether floats are normalized to zero. If the minimal value is flushed to zero we use a slightly bigger number for Epsilon instead.
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.UBBParser">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.XML">
            <summary>
            A simplest and readonly XML class
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.XMLIterator">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.XMLList">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Utils.XMLUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:FairyGUI.Timers">
            <summary>
            
            </summary>
        </member>
        <member name="M:FairyGUI.Timers.Add(System.Single,System.Int32,FairyGUI.TimerCallback,System.Object)">
             @interval in seconds
             @repeat 0 indicate loop infinitely, otherwise the run count
            
        </member>
    </members>
</doc>
